// $ANTLR 3.5.2 /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g 2023-09-14 19:44:33

/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// DO NOT EDIT THIS FILE MANUALLY!
// SEE Css3.g FOR INSTRUCTIONS

package org.netbeans.modules.css.lib;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.debug.*;
import java.io.IOException;
@SuppressWarnings("all")
public class Css3Parser extends DebugParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "ANGLE", "AT_IDENT", "AT_SIGN", 
		"B", "BEGINS", "BOTTOMCENTER_SYM", "BOTTOMLEFTCORNER_SYM", "BOTTOMLEFT_SYM", 
		"BOTTOMRIGHTCORNER_SYM", "BOTTOMRIGHT_SYM", "C", "CDC", "CDO", "CHARSET_SYM", 
		"COLON", "COMMA", "COMMENT", "CONTAINER_SYM", "CONTAINS", "COUNTER_STYLE_SYM", 
		"CP_DOTS", "CP_EQ", "CP_NOT_EQ", "D", "DASHMATCH", "DCOLON", "DIMENSION", 
		"DOT", "E", "EMS", "ENDS", "ESCAPE", "EXCLAMATION_MARK", "EXS", "F", "FONT_FACE_SYM", 
		"FREQ", "G", "GEN", "GREATER", "GREATER_OR_EQ", "H", "HASH", "HASH_SYMBOL", 
		"HEXCHAR", "HEXCHAR_WILDCARD", "I", "IDENT", "IMPORTANT_SYM", "IMPORT_SYM", 
		"INCLUDES", "INVALID", "J", "K", "L", "LAYER_SYM", "LBRACE", "LBRACKET", 
		"LEFTBOTTOM_SYM", "LEFTMIDDLE_SYM", "LEFTTOP_SYM", "LENGTH", "LESS", "LESS_AND", 
		"LESS_JS_STRING", "LESS_OR_EQ", "LESS_REST", "LINE_COMMENT", "LPAREN", 
		"M", "MEDIA_SYM", "MINUS", "MOZ_DOCUMENT_SYM", "MOZ_DOMAIN", "MOZ_REGEXP", 
		"MOZ_URL_PREFIX", "N", "NAME", "NAMESPACE_SYM", "NL", "NMCHAR", "NMSTART", 
		"NONASCII", "NOT", "NUMBER", "O", "OPEQ", "P", "PAGE_SYM", "PERCENTAGE", 
		"PERCENTAGE_SYMBOL", "PIPE", "PLUS", "Q", "R", "RBRACE", "RBRACKET", "REM", 
		"RESOLUTION", "RIGHTBOTTOM_SYM", "RIGHTMIDDLE_SYM", "RIGHTTOP_SYM", "RPAREN", 
		"S", "SASS_AT_ROOT", "SASS_CONTENT", "SASS_DEBUG", "SASS_DEFAULT", "SASS_EACH", 
		"SASS_ELSE", "SASS_ELSEIF", "SASS_ERROR", "SASS_EXTEND", "SASS_EXTEND_ONLY_SELECTOR", 
		"SASS_FOR", "SASS_FORWARD", "SASS_FUNCTION", "SASS_GLOBAL", "SASS_IF", 
		"SASS_INCLUDE", "SASS_MIXIN", "SASS_OPTIONAL", "SASS_RETURN", "SASS_USE", 
		"SASS_VAR", "SASS_WARN", "SASS_WHILE", "SEMI", "SOLIDUS", "STAR", "STRING", 
		"SUPPORTS_SYM", "T", "TILDE", "TIME", "TOPCENTER_SYM", "TOPLEFTCORNER_SYM", 
		"TOPLEFT_SYM", "TOPRIGHTCORNER_SYM", "TOPRIGHT_SYM", "U", "UNICODE", "URANGE", 
		"URI", "URL", "V", "VARIABLE", "W", "WEBKIT_KEYFRAMES_SYM", "WS", "X", 
		"Y", "Z"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int ANGLE=5;
	public static final int AT_IDENT=6;
	public static final int AT_SIGN=7;
	public static final int B=8;
	public static final int BEGINS=9;
	public static final int BOTTOMCENTER_SYM=10;
	public static final int BOTTOMLEFTCORNER_SYM=11;
	public static final int BOTTOMLEFT_SYM=12;
	public static final int BOTTOMRIGHTCORNER_SYM=13;
	public static final int BOTTOMRIGHT_SYM=14;
	public static final int C=15;
	public static final int CDC=16;
	public static final int CDO=17;
	public static final int CHARSET_SYM=18;
	public static final int COLON=19;
	public static final int COMMA=20;
	public static final int COMMENT=21;
	public static final int CONTAINER_SYM=22;
	public static final int CONTAINS=23;
	public static final int COUNTER_STYLE_SYM=24;
	public static final int CP_DOTS=25;
	public static final int CP_EQ=26;
	public static final int CP_NOT_EQ=27;
	public static final int D=28;
	public static final int DASHMATCH=29;
	public static final int DCOLON=30;
	public static final int DIMENSION=31;
	public static final int DOT=32;
	public static final int E=33;
	public static final int EMS=34;
	public static final int ENDS=35;
	public static final int ESCAPE=36;
	public static final int EXCLAMATION_MARK=37;
	public static final int EXS=38;
	public static final int F=39;
	public static final int FONT_FACE_SYM=40;
	public static final int FREQ=41;
	public static final int G=42;
	public static final int GEN=43;
	public static final int GREATER=44;
	public static final int GREATER_OR_EQ=45;
	public static final int H=46;
	public static final int HASH=47;
	public static final int HASH_SYMBOL=48;
	public static final int HEXCHAR=49;
	public static final int HEXCHAR_WILDCARD=50;
	public static final int I=51;
	public static final int IDENT=52;
	public static final int IMPORTANT_SYM=53;
	public static final int IMPORT_SYM=54;
	public static final int INCLUDES=55;
	public static final int INVALID=56;
	public static final int J=57;
	public static final int K=58;
	public static final int L=59;
	public static final int LAYER_SYM=60;
	public static final int LBRACE=61;
	public static final int LBRACKET=62;
	public static final int LEFTBOTTOM_SYM=63;
	public static final int LEFTMIDDLE_SYM=64;
	public static final int LEFTTOP_SYM=65;
	public static final int LENGTH=66;
	public static final int LESS=67;
	public static final int LESS_AND=68;
	public static final int LESS_JS_STRING=69;
	public static final int LESS_OR_EQ=70;
	public static final int LESS_REST=71;
	public static final int LINE_COMMENT=72;
	public static final int LPAREN=73;
	public static final int M=74;
	public static final int MEDIA_SYM=75;
	public static final int MINUS=76;
	public static final int MOZ_DOCUMENT_SYM=77;
	public static final int MOZ_DOMAIN=78;
	public static final int MOZ_REGEXP=79;
	public static final int MOZ_URL_PREFIX=80;
	public static final int N=81;
	public static final int NAME=82;
	public static final int NAMESPACE_SYM=83;
	public static final int NL=84;
	public static final int NMCHAR=85;
	public static final int NMSTART=86;
	public static final int NONASCII=87;
	public static final int NOT=88;
	public static final int NUMBER=89;
	public static final int O=90;
	public static final int OPEQ=91;
	public static final int P=92;
	public static final int PAGE_SYM=93;
	public static final int PERCENTAGE=94;
	public static final int PERCENTAGE_SYMBOL=95;
	public static final int PIPE=96;
	public static final int PLUS=97;
	public static final int Q=98;
	public static final int R=99;
	public static final int RBRACE=100;
	public static final int RBRACKET=101;
	public static final int REM=102;
	public static final int RESOLUTION=103;
	public static final int RIGHTBOTTOM_SYM=104;
	public static final int RIGHTMIDDLE_SYM=105;
	public static final int RIGHTTOP_SYM=106;
	public static final int RPAREN=107;
	public static final int S=108;
	public static final int SASS_AT_ROOT=109;
	public static final int SASS_CONTENT=110;
	public static final int SASS_DEBUG=111;
	public static final int SASS_DEFAULT=112;
	public static final int SASS_EACH=113;
	public static final int SASS_ELSE=114;
	public static final int SASS_ELSEIF=115;
	public static final int SASS_ERROR=116;
	public static final int SASS_EXTEND=117;
	public static final int SASS_EXTEND_ONLY_SELECTOR=118;
	public static final int SASS_FOR=119;
	public static final int SASS_FORWARD=120;
	public static final int SASS_FUNCTION=121;
	public static final int SASS_GLOBAL=122;
	public static final int SASS_IF=123;
	public static final int SASS_INCLUDE=124;
	public static final int SASS_MIXIN=125;
	public static final int SASS_OPTIONAL=126;
	public static final int SASS_RETURN=127;
	public static final int SASS_USE=128;
	public static final int SASS_VAR=129;
	public static final int SASS_WARN=130;
	public static final int SASS_WHILE=131;
	public static final int SEMI=132;
	public static final int SOLIDUS=133;
	public static final int STAR=134;
	public static final int STRING=135;
	public static final int SUPPORTS_SYM=136;
	public static final int T=137;
	public static final int TILDE=138;
	public static final int TIME=139;
	public static final int TOPCENTER_SYM=140;
	public static final int TOPLEFTCORNER_SYM=141;
	public static final int TOPLEFT_SYM=142;
	public static final int TOPRIGHTCORNER_SYM=143;
	public static final int TOPRIGHT_SYM=144;
	public static final int U=145;
	public static final int UNICODE=146;
	public static final int URANGE=147;
	public static final int URI=148;
	public static final int URL=149;
	public static final int V=150;
	public static final int VARIABLE=151;
	public static final int W=152;
	public static final int WEBKIT_KEYFRAMES_SYM=153;
	public static final int WS=154;
	public static final int X=155;
	public static final int Y=156;
	public static final int Z=157;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public static final String[] ruleNames = new String[] {
		"invalidRule", "webkitKeyframes", "sass_function_name", "syncTo_SEMI", 
		"cp_expression_operator", "styleQuery", "styleQueryConjunction", "imports", 
		"sizeFeatureName", "operator", "moz_document_function", "cp_mixin_call_arg", 
		"webkitKeyframeSelectors", "sass_map", "sass_for", "simpleSelectorSequence", 
		"sass_debug", "styleQueryDisjunction", "pseudoPage", "containerQueryDisjunction", 
		"cp_mixin_call", "resourceIdentifier", "synpred26_Css3", "mediaType", 
		"componentValueOuter", "margin_sym", "propertyValue", "cp_variable_declaration", 
		"namespacePrefixName", "layerStatement", "fontFace", "synpred46_Css3", 
		"synpred34_Css3", "mediaFeatureValue", "sass_extend_only_selector", "atRuleId", 
		"less_condition", "supportsFeature", "layerAtRule", "less_when", "layerName", 
		"containerQueryWithOperator", "synpred17_Css3", "cp_expression_list", 
		"sass_nested_properties", "expressionPredicate", "sass_forward_with_declaration", 
		"synpred22_Css3", "synpred43_Css3", "bodyItem", "function", "synpred47_Css3", 
		"esPred", "declarations", "synpred24_Css3", "sass_use_with", "sass_control", 
		"synpred19_Css3", "slAttributeName", "less_selector_interpolation_exp", 
		"containerQueryConjunction", "prio", "less_mixin_guarded", "mediaBody", 
		"cssClass", "less_function_in_condition", "styleSheet", "at_rule", "supportsInParens", 
		"mediaBodyItem", "page", "expression", "synpred57_Css3", "synpred28_Css3", 
		"synpred52_Css3", "synpred56_Css3", "synpred11_Css3", "generic_at_rule", 
		"sizeFeatureRangeBetweenLt", "synpred21_Css3", "cp_args_list", "synpred30_Css3", 
		"cp_mixin_call_args", "mediaQuery", "supportsDecl", "synpred60_Css3", 
		"functionName", "charSetValue", "charSet", "synpred64_Css3", "syncToDeclarationsRule", 
		"sass_if", "cp_variable", "synpred50_Css3", "cp_propertyValue", "sass_function_declaration", 
		"media", "mediaQueryList", "sass_content", "key_and", "synpred40_Css3", 
		"declaration", "hexColor", "synpred36_Css3", "sass_use_with_declaration", 
		"less_condition_operator", "sizeFeatureFixedValue", "synpred12_Css3", 
		"synpred38_Css3", "less_selector_interpolation", "synpred55_Css3", "synpred29_Css3", 
		"supportsCondition", "synpred61_Css3", "synpred51_Css3", "mediaQueryOperator", 
		"synpred2_Css3", "styleCondition", "importLayer", "synpred5_Css3", "synpred42_Css3", 
		"elementSubsequent", "fnAttribute", "synpred27_Css3", "counterStyle", 
		"supportsWithOperator", "supportsDisjunction", "sizeFeature", "sass_control_expression", 
		"sass_forward_hide", "sass_error", "bracketBlock", "containerQueryInParens", 
		"cssId", "unaryOperator", "cp_expression", "supportsConjunction", "containerCondition", 
		"margin", "styleInParens", "selector", "sass_map_pair", "cp_expression_atom", 
		"rule", "synpred4_Css3", "vendorAtRule", "synpred53_Css3", "mediaExpression", 
		"combinator", "synpred49_Css3", "fnAttributes", "sass_use_as", "cp_math_expression_atom", 
		"sass_forward_with", "selectorsGroup", "synpred14_Css3", "moz_document", 
		"sass_use", "sass_else", "slAttributeValue", "sass_forward", "propertyDeclaration", 
		"synpred13_Css3", "sass_map_pairs", "synpred58_Css3", "namespacePrefix", 
		"synpred18_Css3", "syncToFollow", "styleConditionWithOperator", "cp_arg", 
		"sass_interpolation_expression_var", "synpred8_Css3", "sizeFeatureRangeSingle", 
		"pseudo", "elementName", "mediaFeature", "webkitKeyframesBlock", "ws", 
		"componentValue", "less_import_types", "layerBody", "cp_term_symbol", 
		"synpred3_Css3", "synpred31_Css3", "sass_forward_show", "synpred37_Css3", 
		"body", "preservedToken", "parenBlock", "cp_mixin_name", "synpred32_Css3", 
		"synpred33_Css3", "sizeFeatureValue", "syncTo_RBRACE", "key_or", "synpred48_Css3", 
		"synpred6_Css3", "synpred44_Css3", "cp_math_expression", "synpred10_Css3", 
		"namespace", "synpred59_Css3", "property", "synpred41_Css3", "sizeFeatureRangeBetweenGt", 
		"layerBlock", "preservedTokenTopLevel", "supportsAtRule", "slAttribute", 
		"fnAttributeValue", "synpred62_Css3", "sass_selector_interpolation_exp", 
		"sass_function_return", "term", "synpred25_Css3", "synpred16_Css3", "braceBlock", 
		"synpred1_Css3", "importItem", "sass_map_name", "sass_while", "sass_control_block", 
		"sass_forward_as", "sass_extend", "less_fn_name", "containerAtRule", "fnAttributeName", 
		"synpred23_Css3", "synpred45_Css3", "styleFeature", "cp_math_expressions", 
		"typeSelector", "synpred7_Css3", "synpred35_Css3", "containerName", "synpred39_Css3", 
		"sass_each", "sass_each_variables", "synpred20_Css3", "cp_mixin_declaration", 
		"namespaces", "cp_mixin_block", "synpred63_Css3", "key_only", "synpred15_Css3", 
		"synpred54_Css3", "synpred9_Css3", "synpred65_Css3"
	};

	public static final boolean[] decisionCanBacktrack = new boolean[] {
		false, // invalid decision
		false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, true, false, false, false, false, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, true, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, false, true, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, true, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, true, true, false, false, false, 
		    false, true, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, true, false, false, true, 
		    false, false, false, false, false, false, true, false, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, true, false, false, false, true, false, false, 
		    false, false, false, false, false, false, false, false, true, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false
	};

 
	public int ruleLevel = 0;
	public int getRuleLevel() { return ruleLevel; }
	public void incRuleLevel() { ruleLevel++; }
	public void decRuleLevel() { ruleLevel--; }
	public Css3Parser(TokenStream input) {
		this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, new RecognizerSharedState());
	}
	public Css3Parser(TokenStream input, int port, RecognizerSharedState state) {
		super(input, state);
		DebugEventSocketProxy proxy =
			new DebugEventSocketProxy(this, port, null);

		setDebugListener(proxy);
		try {
			proxy.handshake();
		}
		catch (IOException ioe) {
			reportError(ioe);
		}
	}

	public Css3Parser(TokenStream input, DebugEventListener dbg) {
		super(input, dbg, new RecognizerSharedState());
	}

	protected boolean evalPredicate(boolean result, String predicate) {
		dbg.semanticPredicate(result, predicate);
		return result;
	}

	@Override public String[] getTokenNames() { return Css3Parser.tokenNames; }
	@Override public String getGrammarFileName() { return "/home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g"; }



	    protected boolean isLessSource() {
	        return false;
	    }

	    protected boolean isScssSource() {
	        return false;
	    }

	    private boolean isCssPreprocessorSource() {
	        return isLessSource() || isScssSource();
	    }

	    private boolean tokenNameEquals(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(1).getText());
	    }
	    
	    private boolean tokenNameEquals2(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(2).getText());
	    }

	    private boolean tokenNameIs(String[] tokens) {
	        for(String tokenImage : tokens) {
	            if(tokenImage.equalsIgnoreCase(input.LT(1).getText())) {
	                return true;
	            }
	        }
	        return false;
	    }

	    private boolean tokenNameStartsWith(String prefix) {
	        return input.LT(1).getText() != null
	            && input.LT(1).getText().startsWith(prefix);
	    }

	    /**
	     * Use the current stacked followset to work out the valid tokens that
	     * can follow on from the current point in the parse, then recover by
	     * eating tokens that are not a member of the follow set we compute.
	     *
	     * This method is used whenever we wish to force a sync, even though
	     * the parser has not yet checked LA(1) for alt selection. This is useful
	     * in situations where only a subset of tokens can begin a new construct
	     * (such as the start of a new statement in a block) and we want to
	     * proactively detect garbage so that the current rule does not exit on
	     * on an exception.
	     *
	     * We could override recover() to make this the default behavior but that
	     * is too much like using a sledge hammer to crack a nut. We want finer
	     * grained control of the recovery and error mechanisms.
	     */
	    protected void syncToSet()
	    {
	        // Compute the followset that is in context wherever we are in the
	        // rule chain/stack
	        //
	         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();

	         syncToSet(follow);
	    }

	    protected void syncToSet(BitSet follow)
	    {
	        int mark = -1;

	        //create error-recovery node
	        dbg.enterRule(getGrammarFileName(), "recovery");

	        try {

	            mark = input.mark();

	            // Consume all tokens in the stream until we find a member of the follow
	            // set, which means the next production should be guaranteed to be happy.
	            //
	            while (! follow.member(input.LA(1)) ) {

	                if  (input.LA(1) == Token.EOF) {

	                    // Looks like we didn't find anything at all that can help us here
	                    // so we need to rewind to where we were and let normal error handling
	                    // bail out.
	                    //
	                    input.rewind();
	                    mark = -1;
	                    return;
	                }
	                input.consume();

	                // Now here, because you are consuming some tokens, yu will probably want
	                // to raise an error message such as "Spurious elements after the class member were discarded"
	                // using whatever your override of displayRecognitionError() routine does to record
	                // error messages. The exact error my depend on context etc.
	                //
	            }
	        } catch (Exception e) {

	          // Just ignore any errors here, we will just let the recognizer
	          // try to resync as normal - something must be very screwed.
	          //
	        }
	        finally {
	            dbg.exitRule(getGrammarFileName(), "recovery");

	            // Always release the mark we took
	            //
	            if  (mark != -1) {
	                input.release(mark);
	            }
	        }
	    }

	        /**
	         * synces to next RBRACE "}" taking nesting into account
	         */
	        protected void syncToRBRACE(int nest)
	            {

	                int mark = -1;
	                //create error-recovery node
	                //dbg.enterRule(getGrammarFileName(), "recovery");

	                try {
	                    mark = input.mark();
	                    for(;;) {
	                        //read char
	                        int c = input.LA(1);

	                        switch(c) {
	                            case Token.EOF:
	                                input.rewind();
	                                mark = -1;
	                                return ;
	                            case Css3Lexer.LBRACE:
	                                nest++;
	                                break;
	                            case Css3Lexer.RBRACE:
	                                nest--;
	                                if(nest == 0) {
	                                    //do not eat the final RBRACE
	                                    return ;
	                                }
	                        }

	                        input.consume();

	                    }

	                } catch (Exception e) {

	                  // Just ignore any errors here, we will just let the recognizer
	                  // try to resync as normal - something must be very screwed.
	                  //
	                }
	                finally {
	                    if  (mark != -1) {
	                        input.release(mark);
	                    }
	                    //dbg.exitRule(getGrammarFileName(), "recovery");
	                }
	            }




	// $ANTLR start "styleSheet"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:284:1: styleSheet : ( ws )? ( charSet ( ws )? )? ( layerStatement ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF ;
	public final void styleSheet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleSheet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(284, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:285:5: ( ( ws )? ( charSet ( ws )? )? ( layerStatement ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:286:6: ( ws )? ( charSet ( ws )? )? ( layerStatement ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF
			{
			dbg.location(286,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:286:6: ( ws )?
			int alt1=2;
			try { dbg.enterSubRule(1);
			try { dbg.enterDecision(1, decisionCanBacktrack[1]);

			int LA1_0 = input.LA(1);
			if ( (LA1_0==COMMENT||LA1_0==NL||LA1_0==WS) ) {
				alt1=1;
			}
			} finally {dbg.exitDecision(1);}

			switch (alt1) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:286:6: ws
					{
					dbg.location(286,6);
					pushFollow(FOLLOW_ws_in_styleSheet102);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(1);}
			dbg.location(287,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:287:6: ( charSet ( ws )? )?
			int alt3=2;
			try { dbg.enterSubRule(3);
			try { dbg.enterDecision(3, decisionCanBacktrack[3]);

			try {
				isCyclicDecision = true;
				alt3 = dfa3.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(3);}

			switch (alt3) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:287:8: charSet ( ws )?
					{
					dbg.location(287,8);
					pushFollow(FOLLOW_charSet_in_styleSheet112);
					charSet();
					state._fsp--;
					if (state.failed) return;dbg.location(287,16);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:287:16: ( ws )?
					int alt2=2;
					try { dbg.enterSubRule(2);
					try { dbg.enterDecision(2, decisionCanBacktrack[2]);

					int LA2_0 = input.LA(1);
					if ( (LA2_0==COMMENT||LA2_0==NL||LA2_0==WS) ) {
						alt2=1;
					}
					} finally {dbg.exitDecision(2);}

					switch (alt2) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:287:16: ws
							{
							dbg.location(287,16);
							pushFollow(FOLLOW_ws_in_styleSheet114);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(2);}

					}
					break;

			}
			} finally {dbg.exitSubRule(3);}
			dbg.location(288,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:288:9: ( layerStatement ( ws )? )?
			int alt5=2;
			try { dbg.enterSubRule(5);
			try { dbg.enterDecision(5, decisionCanBacktrack[5]);

			try {
				isCyclicDecision = true;
				alt5 = dfa5.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(5);}

			switch (alt5) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:288:11: layerStatement ( ws )?
					{
					dbg.location(288,11);
					pushFollow(FOLLOW_layerStatement_in_styleSheet130);
					layerStatement();
					state._fsp--;
					if (state.failed) return;dbg.location(288,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:288:26: ( ws )?
					int alt4=2;
					try { dbg.enterSubRule(4);
					try { dbg.enterDecision(4, decisionCanBacktrack[4]);

					int LA4_0 = input.LA(1);
					if ( (LA4_0==COMMENT||LA4_0==NL||LA4_0==WS) ) {
						alt4=1;
					}
					} finally {dbg.exitDecision(4);}

					switch (alt4) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:288:26: ws
							{
							dbg.location(288,26);
							pushFollow(FOLLOW_ws_in_styleSheet132);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(4);}

					}
					break;

			}
			} finally {dbg.exitSubRule(5);}
			dbg.location(289,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:289:9: ( imports )?
			int alt6=2;
			try { dbg.enterSubRule(6);
			try { dbg.enterDecision(6, decisionCanBacktrack[6]);

			switch ( input.LA(1) ) {
				case IMPORT_SYM:
					{
					int LA6_1 = input.LA(2);
					if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt6=1;
					}
					}
					break;
				case SASS_USE:
					{
					int LA6_2 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt6=1;
					}
					}
					break;
				case SASS_FORWARD:
					{
					int LA6_3 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt6=1;
					}
					}
					break;
			}
			} finally {dbg.exitDecision(6);}

			switch (alt6) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:289:9: imports
					{
					dbg.location(289,9);
					pushFollow(FOLLOW_imports_in_styleSheet146);
					imports();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(6);}
			dbg.location(290,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:290:9: ( namespaces )?
			int alt7=2;
			try { dbg.enterSubRule(7);
			try { dbg.enterDecision(7, decisionCanBacktrack[7]);

			try {
				isCyclicDecision = true;
				alt7 = dfa7.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(7);}

			switch (alt7) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:290:9: namespaces
					{
					dbg.location(290,9);
					pushFollow(FOLLOW_namespaces_in_styleSheet157);
					namespaces();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(7);}
			dbg.location(291,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:291:9: ( body )?
			int alt8=2;
			try { dbg.enterSubRule(8);
			try { dbg.enterDecision(8, decisionCanBacktrack[8]);

			int LA8_0 = input.LA(1);
			if ( ((LA8_0 >= AT_IDENT && LA8_0 <= AT_SIGN)||(LA8_0 >= BOTTOMCENTER_SYM && LA8_0 <= BOTTOMRIGHT_SYM)||(LA8_0 >= CHARSET_SYM && LA8_0 <= COLON)||LA8_0==CONTAINER_SYM||LA8_0==COUNTER_STYLE_SYM||(LA8_0 >= DCOLON && LA8_0 <= DOT)||LA8_0==FONT_FACE_SYM||(LA8_0 >= GEN && LA8_0 <= GREATER)||(LA8_0 >= HASH && LA8_0 <= HASH_SYMBOL)||LA8_0==IDENT||LA8_0==IMPORT_SYM||LA8_0==LAYER_SYM||(LA8_0 >= LBRACKET && LA8_0 <= LEFTTOP_SYM)||LA8_0==LESS_AND||(LA8_0 >= MEDIA_SYM && LA8_0 <= MOZ_DOCUMENT_SYM)||LA8_0==NAMESPACE_SYM||LA8_0==PAGE_SYM||(LA8_0 >= PIPE && LA8_0 <= PLUS)||(LA8_0 >= RIGHTBOTTOM_SYM && LA8_0 <= RIGHTTOP_SYM)||(LA8_0 >= SASS_AT_ROOT && LA8_0 <= SASS_DEBUG)||(LA8_0 >= SASS_EACH && LA8_0 <= SASS_ELSE)||(LA8_0 >= SASS_EXTEND && LA8_0 <= SASS_FUNCTION)||(LA8_0 >= SASS_IF && LA8_0 <= SASS_MIXIN)||(LA8_0 >= SASS_RETURN && LA8_0 <= SEMI)||LA8_0==STAR||LA8_0==SUPPORTS_SYM||LA8_0==TILDE||(LA8_0 >= TOPCENTER_SYM && LA8_0 <= TOPRIGHT_SYM)||LA8_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt8=1;
			}
			} finally {dbg.exitDecision(8);}

			switch (alt8) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:291:9: body
					{
					dbg.location(291,9);
					pushFollow(FOLLOW_body_in_styleSheet168);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(8);}
			dbg.location(292,6);
			match(input,EOF,FOLLOW_EOF_in_styleSheet176); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(293, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleSheet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleSheet"



	// $ANTLR start "namespaces"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:295:1: namespaces : ( namespace ( ws )? )+ ;
	public final void namespaces() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespaces");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(295, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:296:2: ( ( namespace ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:2: ( namespace ( ws )? )+
			{
			dbg.location(297,2);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:2: ( namespace ( ws )? )+
			int cnt10=0;
			try { dbg.enterSubRule(10);

			loop10:
			while (true) {
				int alt10=2;
				try { dbg.enterDecision(10, decisionCanBacktrack[10]);

				try {
					isCyclicDecision = true;
					alt10 = dfa10.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(10);}

				switch (alt10) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:4: namespace ( ws )?
					{
					dbg.location(297,4);
					pushFollow(FOLLOW_namespace_in_namespaces193);
					namespace();
					state._fsp--;
					if (state.failed) return;dbg.location(297,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:14: ( ws )?
					int alt9=2;
					try { dbg.enterSubRule(9);
					try { dbg.enterDecision(9, decisionCanBacktrack[9]);

					int LA9_0 = input.LA(1);
					if ( (LA9_0==COMMENT||LA9_0==NL||LA9_0==WS) ) {
						alt9=1;
					}
					} finally {dbg.exitDecision(9);}

					switch (alt9) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:14: ws
							{
							dbg.location(297,14);
							pushFollow(FOLLOW_ws_in_namespaces195);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(9);}

					}
					break;

				default :
					if ( cnt10 >= 1 ) break loop10;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(10, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt10++;
			}
			} finally {dbg.exitSubRule(10);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(298, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespaces");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespaces"



	// $ANTLR start "namespace"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:300:1: namespace : NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI ;
	public final void namespace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(300, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:3: ( NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:5: NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI
			{
			dbg.location(301,5);
			match(input,NAMESPACE_SYM,FOLLOW_NAMESPACE_SYM_in_namespace211); if (state.failed) return;dbg.location(301,19);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:19: ( ws )?
			int alt11=2;
			try { dbg.enterSubRule(11);
			try { dbg.enterDecision(11, decisionCanBacktrack[11]);

			int LA11_0 = input.LA(1);
			if ( (LA11_0==COMMENT||LA11_0==NL||LA11_0==WS) ) {
				alt11=1;
			}
			} finally {dbg.exitDecision(11);}

			switch (alt11) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:19: ws
					{
					dbg.location(301,19);
					pushFollow(FOLLOW_ws_in_namespace213);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(11);}
			dbg.location(301,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:23: ( namespacePrefixName ( ws )? )?
			int alt13=2;
			try { dbg.enterSubRule(13);
			try { dbg.enterDecision(13, decisionCanBacktrack[13]);

			int LA13_0 = input.LA(1);
			if ( (LA13_0==IDENT) ) {
				alt13=1;
			}
			} finally {dbg.exitDecision(13);}

			switch (alt13) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:24: namespacePrefixName ( ws )?
					{
					dbg.location(301,24);
					pushFollow(FOLLOW_namespacePrefixName_in_namespace217);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;dbg.location(301,44);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:44: ( ws )?
					int alt12=2;
					try { dbg.enterSubRule(12);
					try { dbg.enterDecision(12, decisionCanBacktrack[12]);

					int LA12_0 = input.LA(1);
					if ( (LA12_0==COMMENT||LA12_0==NL||LA12_0==WS) ) {
						alt12=1;
					}
					} finally {dbg.exitDecision(12);}

					switch (alt12) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:44: ws
							{
							dbg.location(301,44);
							pushFollow(FOLLOW_ws_in_namespace219);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(12);}

					}
					break;

			}
			} finally {dbg.exitSubRule(13);}
			dbg.location(301,50);
			pushFollow(FOLLOW_resourceIdentifier_in_namespace224);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(301,69);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:69: ( ws )?
			int alt14=2;
			try { dbg.enterSubRule(14);
			try { dbg.enterDecision(14, decisionCanBacktrack[14]);

			int LA14_0 = input.LA(1);
			if ( (LA14_0==COMMENT||LA14_0==NL||LA14_0==WS) ) {
				alt14=1;
			}
			} finally {dbg.exitDecision(14);}

			switch (alt14) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:69: ws
					{
					dbg.location(301,69);
					pushFollow(FOLLOW_ws_in_namespace226);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(14);}
			dbg.location(301,73);
			match(input,SEMI,FOLLOW_SEMI_in_namespace229); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(302, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespace"



	// $ANTLR start "namespacePrefixName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:304:1: namespacePrefixName : IDENT ;
	public final void namespacePrefixName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefixName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(304, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:305:3: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:305:5: IDENT
			{
			dbg.location(305,5);
			match(input,IDENT,FOLLOW_IDENT_in_namespacePrefixName242); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(306, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefixName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefixName"



	// $ANTLR start "resourceIdentifier"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:308:1: resourceIdentifier : ( STRING | URI );
	public final void resourceIdentifier() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "resourceIdentifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(308, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:309:3: ( STRING | URI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(309,3);
			if ( input.LA(1)==STRING||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(310, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "resourceIdentifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "resourceIdentifier"



	// $ANTLR start "charSet"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:312:1: charSet : CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI ;
	public final void charSet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(312, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:5: ( CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:9: CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI
			{
			dbg.location(313,9);
			match(input,CHARSET_SYM,FOLLOW_CHARSET_SYM_in_charSet276); if (state.failed) return;dbg.location(313,21);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:21: ( ws )?
			int alt15=2;
			try { dbg.enterSubRule(15);
			try { dbg.enterDecision(15, decisionCanBacktrack[15]);

			int LA15_0 = input.LA(1);
			if ( (LA15_0==COMMENT||LA15_0==NL||LA15_0==WS) ) {
				alt15=1;
			}
			} finally {dbg.exitDecision(15);}

			switch (alt15) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:21: ws
					{
					dbg.location(313,21);
					pushFollow(FOLLOW_ws_in_charSet278);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(15);}
			dbg.location(313,25);
			pushFollow(FOLLOW_charSetValue_in_charSet281);
			charSetValue();
			state._fsp--;
			if (state.failed) return;dbg.location(313,38);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:38: ( ws )?
			int alt16=2;
			try { dbg.enterSubRule(16);
			try { dbg.enterDecision(16, decisionCanBacktrack[16]);

			int LA16_0 = input.LA(1);
			if ( (LA16_0==COMMENT||LA16_0==NL||LA16_0==WS) ) {
				alt16=1;
			}
			} finally {dbg.exitDecision(16);}

			switch (alt16) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:38: ws
					{
					dbg.location(313,38);
					pushFollow(FOLLOW_ws_in_charSet283);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(16);}
			dbg.location(313,42);
			match(input,SEMI,FOLLOW_SEMI_in_charSet286); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(314, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSet"



	// $ANTLR start "charSetValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:316:1: charSetValue : STRING ;
	public final void charSetValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSetValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(316, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:317:2: ( STRING )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:317:4: STRING
			{
			dbg.location(317,4);
			match(input,STRING,FOLLOW_STRING_in_charSetValue300); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(318, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSetValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSetValue"



	// $ANTLR start "imports"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:320:1: imports : ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+ ;
	public final void imports() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "imports");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(320, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:321:2: ( ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:322:2: ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+
			{
			dbg.location(322,2);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:322:2: ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+
			int cnt23=0;
			try { dbg.enterSubRule(23);

			loop23:
			while (true) {
				int alt23=4;
				try { dbg.enterDecision(23, decisionCanBacktrack[23]);

				switch ( input.LA(1) ) {
				case IMPORT_SYM:
					{
					int LA23_29 = input.LA(2);
					if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt23=1;
					}

					}
					break;
				case SASS_USE:
					{
					int LA23_38 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt23=2;
					}

					}
					break;
				case SASS_FORWARD:
					{
					int LA23_41 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt23=3;
					}

					}
					break;
				}
				} finally {dbg.exitDecision(23);}

				switch (alt23) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:13: ( importItem ( ws )? SEMI ( ws )? )
					{
					dbg.location(323,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:13: ( importItem ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:15: importItem ( ws )? SEMI ( ws )?
					{
					dbg.location(323,15);
					pushFollow(FOLLOW_importItem_in_imports328);
					importItem();
					state._fsp--;
					if (state.failed) return;dbg.location(323,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:26: ( ws )?
					int alt17=2;
					try { dbg.enterSubRule(17);
					try { dbg.enterDecision(17, decisionCanBacktrack[17]);

					int LA17_0 = input.LA(1);
					if ( (LA17_0==COMMENT||LA17_0==NL||LA17_0==WS) ) {
						alt17=1;
					}
					} finally {dbg.exitDecision(17);}

					switch (alt17) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:26: ws
							{
							dbg.location(323,26);
							pushFollow(FOLLOW_ws_in_imports330);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(17);}
					dbg.location(323,30);
					match(input,SEMI,FOLLOW_SEMI_in_imports333); if (state.failed) return;dbg.location(323,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:35: ( ws )?
					int alt18=2;
					try { dbg.enterSubRule(18);
					try { dbg.enterDecision(18, decisionCanBacktrack[18]);

					int LA18_0 = input.LA(1);
					if ( (LA18_0==COMMENT||LA18_0==NL||LA18_0==WS) ) {
						alt18=1;
					}
					} finally {dbg.exitDecision(18);}

					switch (alt18) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:35: ws
							{
							dbg.location(323,35);
							pushFollow(FOLLOW_ws_in_imports335);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(18);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:13: {...}? ( sass_use ( ws )? SEMI ( ws )? )
					{
					dbg.location(325,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "imports", "isScssSource()");
					}dbg.location(325,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:31: ( sass_use ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:33: sass_use ( ws )? SEMI ( ws )?
					{
					dbg.location(325,33);
					pushFollow(FOLLOW_sass_use_in_imports370);
					sass_use();
					state._fsp--;
					if (state.failed) return;dbg.location(325,42);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:42: ( ws )?
					int alt19=2;
					try { dbg.enterSubRule(19);
					try { dbg.enterDecision(19, decisionCanBacktrack[19]);

					int LA19_0 = input.LA(1);
					if ( (LA19_0==COMMENT||LA19_0==NL||LA19_0==WS) ) {
						alt19=1;
					}
					} finally {dbg.exitDecision(19);}

					switch (alt19) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:42: ws
							{
							dbg.location(325,42);
							pushFollow(FOLLOW_ws_in_imports372);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(19);}
					dbg.location(325,46);
					match(input,SEMI,FOLLOW_SEMI_in_imports375); if (state.failed) return;dbg.location(325,51);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:51: ( ws )?
					int alt20=2;
					try { dbg.enterSubRule(20);
					try { dbg.enterDecision(20, decisionCanBacktrack[20]);

					int LA20_0 = input.LA(1);
					if ( (LA20_0==COMMENT||LA20_0==NL||LA20_0==WS) ) {
						alt20=1;
					}
					} finally {dbg.exitDecision(20);}

					switch (alt20) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:51: ws
							{
							dbg.location(325,51);
							pushFollow(FOLLOW_ws_in_imports377);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(20);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:13: {...}? ( sass_forward ( ws )? SEMI ( ws )? )
					{
					dbg.location(327,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "imports", "isScssSource()");
					}dbg.location(327,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:31: ( sass_forward ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:33: sass_forward ( ws )? SEMI ( ws )?
					{
					dbg.location(327,33);
					pushFollow(FOLLOW_sass_forward_in_imports412);
					sass_forward();
					state._fsp--;
					if (state.failed) return;dbg.location(327,46);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:46: ( ws )?
					int alt21=2;
					try { dbg.enterSubRule(21);
					try { dbg.enterDecision(21, decisionCanBacktrack[21]);

					int LA21_0 = input.LA(1);
					if ( (LA21_0==COMMENT||LA21_0==NL||LA21_0==WS) ) {
						alt21=1;
					}
					} finally {dbg.exitDecision(21);}

					switch (alt21) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:46: ws
							{
							dbg.location(327,46);
							pushFollow(FOLLOW_ws_in_imports414);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(21);}
					dbg.location(327,50);
					match(input,SEMI,FOLLOW_SEMI_in_imports417); if (state.failed) return;dbg.location(327,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:55: ( ws )?
					int alt22=2;
					try { dbg.enterSubRule(22);
					try { dbg.enterDecision(22, decisionCanBacktrack[22]);

					int LA22_0 = input.LA(1);
					if ( (LA22_0==COMMENT||LA22_0==NL||LA22_0==WS) ) {
						alt22=1;
					}
					} finally {dbg.exitDecision(22);}

					switch (alt22) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:55: ws
							{
							dbg.location(327,55);
							pushFollow(FOLLOW_ws_in_imports419);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(22);}

					}

					}
					break;

				default :
					if ( cnt23 >= 1 ) break loop23;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(23, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt23++;
			}
			} finally {dbg.exitSubRule(23);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(329, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "imports");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "imports"



	// $ANTLR start "importItem"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:331:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );
	public final void importItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(331, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:5: ( IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? )
			int alt44=3;
			try { dbg.enterDecision(44, decisionCanBacktrack[44]);

			try {
				isCyclicDecision = true;
				alt44 = dfa44.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(44);}

			switch (alt44) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:9: IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(333,9);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem455); if (state.failed) return;dbg.location(333,20);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:20: ( ws )?
					int alt24=2;
					try { dbg.enterSubRule(24);
					try { dbg.enterDecision(24, decisionCanBacktrack[24]);

					int LA24_0 = input.LA(1);
					if ( (LA24_0==COMMENT||LA24_0==NL||LA24_0==WS) ) {
						alt24=1;
					}
					} finally {dbg.exitDecision(24);}

					switch (alt24) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:20: ws
							{
							dbg.location(333,20);
							pushFollow(FOLLOW_ws_in_importItem457);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(24);}
					dbg.location(333,24);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem460);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(333,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:43: ( ws )?
					int alt25=2;
					try { dbg.enterSubRule(25);
					try { dbg.enterDecision(25, decisionCanBacktrack[25]);

					int LA25_0 = input.LA(1);
					if ( (LA25_0==COMMENT||LA25_0==NL||LA25_0==WS) ) {
						alt25=1;
					}
					} finally {dbg.exitDecision(25);}

					switch (alt25) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:43: ws
							{
							dbg.location(333,43);
							pushFollow(FOLLOW_ws_in_importItem462);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(25);}
					dbg.location(333,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:47: ( importLayer )?
					int alt26=2;
					try { dbg.enterSubRule(26);
					try { dbg.enterDecision(26, decisionCanBacktrack[26]);

					int LA26_0 = input.LA(1);
					if ( (LA26_0==IDENT) ) {
						int LA26_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
							alt26=1;
						}
					}
					} finally {dbg.exitDecision(26);}

					switch (alt26) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:47: importLayer
							{
							dbg.location(333,47);
							pushFollow(FOLLOW_importLayer_in_importItem465);
							importLayer();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(26);}
					dbg.location(333,60);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:60: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt28=2;
					try { dbg.enterSubRule(28);
					try { dbg.enterDecision(28, decisionCanBacktrack[28]);

					int LA28_0 = input.LA(1);
					if ( (LA28_0==COMMENT||LA28_0==NL||LA28_0==WS) ) {
						int LA28_1 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==IDENT) ) {
						int LA28_2 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==NOT) && (synpred1_Css3())) {
						alt28=1;
					}
					else if ( (LA28_0==GEN) ) {
						int LA28_4 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==HASH_SYMBOL) ) {
						int LA28_5 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==LPAREN) && (synpred1_Css3())) {
						alt28=1;
					}
					else if ( (LA28_0==SASS_MIXIN) ) {
						int LA28_7 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_VAR) ) {
						int LA28_8 = input.LA(2);
						if ( (((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==AT_IDENT) ) {
						int LA28_14 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_INCLUDE) ) {
						int LA28_15 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_AT_ROOT) ) {
						int LA28_16 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_DEBUG||LA28_0==SASS_WARN) ) {
						int LA28_17 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_IF) ) {
						int LA28_28 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_FOR) ) {
						int LA28_29 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_EACH) ) {
						int LA28_30 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_WHILE) ) {
						int LA28_31 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_CONTENT) ) {
						int LA28_32 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==IMPORT_SYM) ) {
						int LA28_33 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==PAGE_SYM) ) {
						int LA28_34 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==FONT_FACE_SYM) ) {
						int LA28_35 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==MOZ_DOCUMENT_SYM) ) {
						int LA28_36 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA28_37 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==MEDIA_SYM) ) {
						int LA28_38 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_EXTEND) ) {
						int LA28_39 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==COUNTER_STYLE_SYM) ) {
						int LA28_41 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_FUNCTION) ) {
						int LA28_43 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( ((LA28_0 >= BOTTOMCENTER_SYM && LA28_0 <= BOTTOMRIGHT_SYM)||LA28_0==CHARSET_SYM||(LA28_0 >= LEFTBOTTOM_SYM && LA28_0 <= LEFTTOP_SYM)||LA28_0==NAMESPACE_SYM||(LA28_0 >= RIGHTBOTTOM_SYM && LA28_0 <= RIGHTTOP_SYM)||LA28_0==SASS_ELSE||LA28_0==SASS_FORWARD||(LA28_0 >= SASS_RETURN && LA28_0 <= SASS_USE)||(LA28_0 >= TOPCENTER_SYM && LA28_0 <= TOPRIGHT_SYM)) ) {
						int LA28_46 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					} finally {dbg.exitDecision(28);}

					switch (alt28) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:61: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(333,83);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:83: ( ws )?
							int alt27=2;
							try { dbg.enterSubRule(27);
							try { dbg.enterDecision(27, decisionCanBacktrack[27]);

							int LA27_0 = input.LA(1);
							if ( (LA27_0==COMMENT||LA27_0==NL||LA27_0==WS) ) {
								alt27=1;
							}
							} finally {dbg.exitDecision(27);}

							switch (alt27) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:83: ws
									{
									dbg.location(333,83);
									pushFollow(FOLLOW_ws_in_importItem476);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(27);}
							dbg.location(333,87);
							pushFollow(FOLLOW_mediaQueryList_in_importItem479);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(28);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:9: {...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(336,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isScssSource()");
					}dbg.location(336,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem512); if (state.failed) return;dbg.location(336,38);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:38: ( ws )?
					int alt29=2;
					try { dbg.enterSubRule(29);
					try { dbg.enterDecision(29, decisionCanBacktrack[29]);

					int LA29_0 = input.LA(1);
					if ( (LA29_0==COMMENT||LA29_0==NL||LA29_0==WS) ) {
						alt29=1;
					}
					} finally {dbg.exitDecision(29);}

					switch (alt29) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:38: ws
							{
							dbg.location(336,38);
							pushFollow(FOLLOW_ws_in_importItem514);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(29);}
					dbg.location(336,42);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem517);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(336,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*
					try { dbg.enterSubRule(32);

					loop32:
					while (true) {
						int alt32=2;
						try { dbg.enterDecision(32, decisionCanBacktrack[32]);

						try {
							isCyclicDecision = true;
							alt32 = dfa32.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(32);}

						switch (alt32) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:62: ( ws )? COMMA ( ws )? resourceIdentifier
							{
							dbg.location(336,62);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:62: ( ws )?
							int alt30=2;
							try { dbg.enterSubRule(30);
							try { dbg.enterDecision(30, decisionCanBacktrack[30]);

							int LA30_0 = input.LA(1);
							if ( (LA30_0==COMMENT||LA30_0==NL||LA30_0==WS) ) {
								alt30=1;
							}
							} finally {dbg.exitDecision(30);}

							switch (alt30) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:62: ws
									{
									dbg.location(336,62);
									pushFollow(FOLLOW_ws_in_importItem520);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(30);}
							dbg.location(336,66);
							match(input,COMMA,FOLLOW_COMMA_in_importItem523); if (state.failed) return;dbg.location(336,72);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:72: ( ws )?
							int alt31=2;
							try { dbg.enterSubRule(31);
							try { dbg.enterDecision(31, decisionCanBacktrack[31]);

							int LA31_0 = input.LA(1);
							if ( (LA31_0==COMMENT||LA31_0==NL||LA31_0==WS) ) {
								alt31=1;
							}
							} finally {dbg.exitDecision(31);}

							switch (alt31) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:72: ws
									{
									dbg.location(336,72);
									pushFollow(FOLLOW_ws_in_importItem525);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(31);}
							dbg.location(336,76);
							pushFollow(FOLLOW_resourceIdentifier_in_importItem528);
							resourceIdentifier();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop32;
						}
					}
					} finally {dbg.exitSubRule(32);}
					dbg.location(336,97);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:97: ( ws )?
					int alt33=2;
					try { dbg.enterSubRule(33);
					try { dbg.enterDecision(33, decisionCanBacktrack[33]);

					int LA33_0 = input.LA(1);
					if ( (LA33_0==COMMENT||LA33_0==NL||LA33_0==WS) ) {
						alt33=1;
					}
					} finally {dbg.exitDecision(33);}

					switch (alt33) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:97: ws
							{
							dbg.location(336,97);
							pushFollow(FOLLOW_ws_in_importItem532);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(33);}
					dbg.location(336,101);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:101: ( importLayer )?
					int alt34=2;
					try { dbg.enterSubRule(34);
					try { dbg.enterDecision(34, decisionCanBacktrack[34]);

					int LA34_0 = input.LA(1);
					if ( (LA34_0==IDENT) ) {
						int LA34_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
							alt34=1;
						}
					}
					} finally {dbg.exitDecision(34);}

					switch (alt34) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:101: importLayer
							{
							dbg.location(336,101);
							pushFollow(FOLLOW_importLayer_in_importItem535);
							importLayer();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(34);}
					dbg.location(336,114);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:114: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt36=2;
					try { dbg.enterSubRule(36);
					try { dbg.enterDecision(36, decisionCanBacktrack[36]);

					int LA36_0 = input.LA(1);
					if ( (LA36_0==COMMENT||LA36_0==NL||LA36_0==WS) ) {
						int LA36_1 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==IDENT) ) {
						int LA36_2 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==NOT) && (synpred2_Css3())) {
						alt36=1;
					}
					else if ( (LA36_0==GEN) ) {
						int LA36_4 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==HASH_SYMBOL) ) {
						int LA36_5 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==LPAREN) && (synpred2_Css3())) {
						alt36=1;
					}
					else if ( (LA36_0==SASS_MIXIN) ) {
						int LA36_7 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_VAR) ) {
						int LA36_8 = input.LA(2);
						if ( (((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==AT_IDENT) ) {
						int LA36_14 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_INCLUDE) ) {
						int LA36_15 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_AT_ROOT) ) {
						int LA36_16 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_DEBUG||LA36_0==SASS_WARN) ) {
						int LA36_17 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_IF) ) {
						int LA36_28 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_FOR) ) {
						int LA36_29 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_EACH) ) {
						int LA36_30 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_WHILE) ) {
						int LA36_31 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_CONTENT) ) {
						int LA36_32 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==IMPORT_SYM) ) {
						int LA36_33 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==PAGE_SYM) ) {
						int LA36_34 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==FONT_FACE_SYM) ) {
						int LA36_35 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==MOZ_DOCUMENT_SYM) ) {
						int LA36_36 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA36_37 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==MEDIA_SYM) ) {
						int LA36_38 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_EXTEND) ) {
						int LA36_39 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==COUNTER_STYLE_SYM) ) {
						int LA36_41 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_FUNCTION) ) {
						int LA36_43 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( ((LA36_0 >= BOTTOMCENTER_SYM && LA36_0 <= BOTTOMRIGHT_SYM)||LA36_0==CHARSET_SYM||(LA36_0 >= LEFTBOTTOM_SYM && LA36_0 <= LEFTTOP_SYM)||LA36_0==NAMESPACE_SYM||(LA36_0 >= RIGHTBOTTOM_SYM && LA36_0 <= RIGHTTOP_SYM)||LA36_0==SASS_ELSE||LA36_0==SASS_FORWARD||(LA36_0 >= SASS_RETURN && LA36_0 <= SASS_USE)||(LA36_0 >= TOPCENTER_SYM && LA36_0 <= TOPRIGHT_SYM)) ) {
						int LA36_46 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					} finally {dbg.exitDecision(36);}

					switch (alt36) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:115: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(336,137);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:137: ( ws )?
							int alt35=2;
							try { dbg.enterSubRule(35);
							try { dbg.enterDecision(35, decisionCanBacktrack[35]);

							int LA35_0 = input.LA(1);
							if ( (LA35_0==COMMENT||LA35_0==NL||LA35_0==WS) ) {
								alt35=1;
							}
							} finally {dbg.exitDecision(35);}

							switch (alt35) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:137: ws
									{
									dbg.location(336,137);
									pushFollow(FOLLOW_ws_in_importItem546);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(35);}
							dbg.location(336,141);
							pushFollow(FOLLOW_mediaQueryList_in_importItem549);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(36);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:9: {...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(338,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isLessSource()");
					}dbg.location(338,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem573); if (state.failed) return;dbg.location(338,38);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:38: ( ws )?
					int alt37=2;
					try { dbg.enterSubRule(37);
					try { dbg.enterDecision(37, decisionCanBacktrack[37]);

					int LA37_0 = input.LA(1);
					if ( (LA37_0==COMMENT||LA37_0==NL||LA37_0==WS) ) {
						alt37=1;
					}
					} finally {dbg.exitDecision(37);}

					switch (alt37) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:38: ws
							{
							dbg.location(338,38);
							pushFollow(FOLLOW_ws_in_importItem575);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(37);}
					dbg.location(338,42);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:42: ( LPAREN less_import_types RPAREN ( ws )? )?
					int alt39=2;
					try { dbg.enterSubRule(39);
					try { dbg.enterDecision(39, decisionCanBacktrack[39]);

					int LA39_0 = input.LA(1);
					if ( (LA39_0==LPAREN) ) {
						alt39=1;
					}
					} finally {dbg.exitDecision(39);}

					switch (alt39) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:43: LPAREN less_import_types RPAREN ( ws )?
							{
							dbg.location(338,43);
							match(input,LPAREN,FOLLOW_LPAREN_in_importItem579); if (state.failed) return;dbg.location(338,50);
							pushFollow(FOLLOW_less_import_types_in_importItem581);
							less_import_types();
							state._fsp--;
							if (state.failed) return;dbg.location(338,68);
							match(input,RPAREN,FOLLOW_RPAREN_in_importItem583); if (state.failed) return;dbg.location(338,75);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:75: ( ws )?
							int alt38=2;
							try { dbg.enterSubRule(38);
							try { dbg.enterDecision(38, decisionCanBacktrack[38]);

							int LA38_0 = input.LA(1);
							if ( (LA38_0==COMMENT||LA38_0==NL||LA38_0==WS) ) {
								alt38=1;
							}
							} finally {dbg.exitDecision(38);}

							switch (alt38) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:75: ws
									{
									dbg.location(338,75);
									pushFollow(FOLLOW_ws_in_importItem585);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(38);}

							}
							break;

					}
					} finally {dbg.exitSubRule(39);}
					dbg.location(338,81);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem590);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(338,100);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:100: ( ws )?
					int alt40=2;
					try { dbg.enterSubRule(40);
					try { dbg.enterDecision(40, decisionCanBacktrack[40]);

					int LA40_0 = input.LA(1);
					if ( (LA40_0==COMMENT||LA40_0==NL||LA40_0==WS) ) {
						alt40=1;
					}
					} finally {dbg.exitDecision(40);}

					switch (alt40) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:100: ws
							{
							dbg.location(338,100);
							pushFollow(FOLLOW_ws_in_importItem592);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(40);}
					dbg.location(338,104);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:104: ( importLayer )?
					int alt41=2;
					try { dbg.enterSubRule(41);
					try { dbg.enterDecision(41, decisionCanBacktrack[41]);

					int LA41_0 = input.LA(1);
					if ( (LA41_0==IDENT) ) {
						int LA41_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
							alt41=1;
						}
					}
					} finally {dbg.exitDecision(41);}

					switch (alt41) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:104: importLayer
							{
							dbg.location(338,104);
							pushFollow(FOLLOW_importLayer_in_importItem595);
							importLayer();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(41);}
					dbg.location(338,117);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:117: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt43=2;
					try { dbg.enterSubRule(43);
					try { dbg.enterDecision(43, decisionCanBacktrack[43]);

					int LA43_0 = input.LA(1);
					if ( (LA43_0==COMMENT||LA43_0==NL||LA43_0==WS) ) {
						int LA43_1 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==IDENT) ) {
						int LA43_2 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==NOT) && (synpred3_Css3())) {
						alt43=1;
					}
					else if ( (LA43_0==GEN) ) {
						int LA43_4 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==HASH_SYMBOL) ) {
						int LA43_5 = input.LA(2);
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==LPAREN) && (synpred3_Css3())) {
						alt43=1;
					}
					else if ( (LA43_0==SASS_MIXIN) ) {
						int LA43_7 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_VAR) ) {
						int LA43_8 = input.LA(2);
						if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==AT_IDENT) ) {
						int LA43_14 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_INCLUDE) ) {
						int LA43_15 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_AT_ROOT) ) {
						int LA43_16 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_DEBUG||LA43_0==SASS_WARN) ) {
						int LA43_17 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_IF) ) {
						int LA43_28 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_FOR) ) {
						int LA43_29 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_EACH) ) {
						int LA43_30 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_WHILE) ) {
						int LA43_31 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_CONTENT) ) {
						int LA43_32 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==IMPORT_SYM) ) {
						int LA43_33 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==PAGE_SYM) ) {
						int LA43_34 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==FONT_FACE_SYM) ) {
						int LA43_35 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==MOZ_DOCUMENT_SYM) ) {
						int LA43_36 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA43_37 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==MEDIA_SYM) ) {
						int LA43_38 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_EXTEND) ) {
						int LA43_39 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==COUNTER_STYLE_SYM) ) {
						int LA43_41 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_FUNCTION) ) {
						int LA43_43 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( ((LA43_0 >= BOTTOMCENTER_SYM && LA43_0 <= BOTTOMRIGHT_SYM)||LA43_0==CHARSET_SYM||(LA43_0 >= LEFTBOTTOM_SYM && LA43_0 <= LEFTTOP_SYM)||LA43_0==NAMESPACE_SYM||(LA43_0 >= RIGHTBOTTOM_SYM && LA43_0 <= RIGHTTOP_SYM)||LA43_0==SASS_ELSE||LA43_0==SASS_FORWARD||(LA43_0 >= SASS_RETURN && LA43_0 <= SASS_USE)||(LA43_0 >= TOPCENTER_SYM && LA43_0 <= TOPRIGHT_SYM)) ) {
						int LA43_46 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					} finally {dbg.exitDecision(43);}

					switch (alt43) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:118: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(338,140);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:140: ( ws )?
							int alt42=2;
							try { dbg.enterSubRule(42);
							try { dbg.enterDecision(42, decisionCanBacktrack[42]);

							int LA42_0 = input.LA(1);
							if ( (LA42_0==COMMENT||LA42_0==NL||LA42_0==WS) ) {
								alt42=1;
							}
							} finally {dbg.exitDecision(42);}

							switch (alt42) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:140: ws
									{
									dbg.location(338,140);
									pushFollow(FOLLOW_ws_in_importItem606);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(42);}
							dbg.location(338,144);
							pushFollow(FOLLOW_mediaQueryList_in_importItem609);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(43);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(339, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importItem"



	// $ANTLR start "importLayer"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:341:1: importLayer :{...}? IDENT ( LPAREN ( ws )? layerName ( ws )? RPAREN )? ;
	public final void importLayer() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importLayer");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(341, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:5: ({...}? IDENT ( LPAREN ( ws )? layerName ( ws )? RPAREN )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:5: {...}? IDENT ( LPAREN ( ws )? layerName ( ws )? RPAREN )?
			{
			dbg.location(343,5);
			if ( !(evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "importLayer", "tokenNameEquals(\"layer\")");
			}dbg.location(343,33);
			match(input,IDENT,FOLLOW_IDENT_in_importLayer634); if (state.failed) return;dbg.location(343,39);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:39: ( LPAREN ( ws )? layerName ( ws )? RPAREN )?
			int alt47=2;
			try { dbg.enterSubRule(47);
			try { dbg.enterDecision(47, decisionCanBacktrack[47]);

			try {
				isCyclicDecision = true;
				alt47 = dfa47.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(47);}

			switch (alt47) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:40: LPAREN ( ws )? layerName ( ws )? RPAREN
					{
					dbg.location(343,40);
					match(input,LPAREN,FOLLOW_LPAREN_in_importLayer637); if (state.failed) return;dbg.location(343,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:47: ( ws )?
					int alt45=2;
					try { dbg.enterSubRule(45);
					try { dbg.enterDecision(45, decisionCanBacktrack[45]);

					int LA45_0 = input.LA(1);
					if ( (LA45_0==COMMENT||LA45_0==NL||LA45_0==WS) ) {
						alt45=1;
					}
					} finally {dbg.exitDecision(45);}

					switch (alt45) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:47: ws
							{
							dbg.location(343,47);
							pushFollow(FOLLOW_ws_in_importLayer639);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(45);}
					dbg.location(343,51);
					pushFollow(FOLLOW_layerName_in_importLayer642);
					layerName();
					state._fsp--;
					if (state.failed) return;dbg.location(343,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:61: ( ws )?
					int alt46=2;
					try { dbg.enterSubRule(46);
					try { dbg.enterDecision(46, decisionCanBacktrack[46]);

					int LA46_0 = input.LA(1);
					if ( (LA46_0==COMMENT||LA46_0==NL||LA46_0==WS) ) {
						alt46=1;
					}
					} finally {dbg.exitDecision(46);}

					switch (alt46) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:61: ws
							{
							dbg.location(343,61);
							pushFollow(FOLLOW_ws_in_importLayer644);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(46);}
					dbg.location(343,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_importLayer647); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(47);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(344, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importLayer");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importLayer"



	// $ANTLR start "sass_use"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:1: sass_use : SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )? ;
	public final void sass_use() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(346, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:5: ( SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:9: SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )?
			{
			dbg.location(348,9);
			match(input,SASS_USE,FOLLOW_SASS_USE_in_sass_use674); if (state.failed) return;dbg.location(348,18);
			pushFollow(FOLLOW_ws_in_sass_use676);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(348,21);
			pushFollow(FOLLOW_resourceIdentifier_in_sass_use678);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(348,40);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:40: ( ws sass_use_as )?
			int alt48=2;
			try { dbg.enterSubRule(48);
			try { dbg.enterDecision(48, decisionCanBacktrack[48]);

			try {
				isCyclicDecision = true;
				alt48 = dfa48.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(48);}

			switch (alt48) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:41: ws sass_use_as
					{
					dbg.location(348,41);
					pushFollow(FOLLOW_ws_in_sass_use681);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(348,44);
					pushFollow(FOLLOW_sass_use_as_in_sass_use683);
					sass_use_as();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(48);}
			dbg.location(348,58);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:58: ( ws sass_use_with )?
			int alt49=2;
			try { dbg.enterSubRule(49);
			try { dbg.enterDecision(49, decisionCanBacktrack[49]);

			try {
				isCyclicDecision = true;
				alt49 = dfa49.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(49);}

			switch (alt49) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:59: ws sass_use_with
					{
					dbg.location(348,59);
					pushFollow(FOLLOW_ws_in_sass_use688);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(348,62);
					pushFollow(FOLLOW_sass_use_with_in_sass_use690);
					sass_use_with();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(49);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(349, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use"



	// $ANTLR start "sass_use_as"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:351:1: sass_use_as :{...}? IDENT ws IDENT ;
	public final void sass_use_as() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_as");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(351, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:352:5: ({...}? IDENT ws IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:353:5: {...}? IDENT ws IDENT
			{
			dbg.location(353,5);
			if ( !(evalPredicate(tokenNameEquals("as"),"tokenNameEquals(\"as\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_use_as", "tokenNameEquals(\"as\")");
			}dbg.location(353,30);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_as715); if (state.failed) return;dbg.location(353,36);
			pushFollow(FOLLOW_ws_in_sass_use_as717);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(353,39);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_as719); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(354, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_as");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_as"



	// $ANTLR start "sass_use_with"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:1: sass_use_with :{...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN ;
	public final void sass_use_with() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_with");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(356, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:357:5: ({...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:5: {...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN
			{
			dbg.location(358,5);
			if ( !(evalPredicate(tokenNameEquals("with"),"tokenNameEquals(\"with\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_use_with", "tokenNameEquals(\"with\")");
			}dbg.location(358,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_with742); if (state.failed) return;dbg.location(358,38);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:38: ( ws )?
			int alt50=2;
			try { dbg.enterSubRule(50);
			try { dbg.enterDecision(50, decisionCanBacktrack[50]);

			int LA50_0 = input.LA(1);
			if ( (LA50_0==COMMENT||LA50_0==NL||LA50_0==WS) ) {
				alt50=1;
			}
			} finally {dbg.exitDecision(50);}

			switch (alt50) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:38: ws
					{
					dbg.location(358,38);
					pushFollow(FOLLOW_ws_in_sass_use_with744);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(50);}
			dbg.location(358,42);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_use_with747); if (state.failed) return;dbg.location(358,49);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:49: ( ws )?
			int alt51=2;
			try { dbg.enterSubRule(51);
			try { dbg.enterDecision(51, decisionCanBacktrack[51]);

			int LA51_0 = input.LA(1);
			if ( (LA51_0==COMMENT||LA51_0==NL||LA51_0==WS) ) {
				alt51=1;
			}
			} finally {dbg.exitDecision(51);}

			switch (alt51) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:49: ws
					{
					dbg.location(358,49);
					pushFollow(FOLLOW_ws_in_sass_use_with749);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(51);}
			dbg.location(358,53);
			pushFollow(FOLLOW_sass_use_with_declaration_in_sass_use_with752);
			sass_use_with_declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(358,80);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:80: ( ( ws )? COMMA ( ws )? sass_use_with_declaration )*
			try { dbg.enterSubRule(54);

			loop54:
			while (true) {
				int alt54=2;
				try { dbg.enterDecision(54, decisionCanBacktrack[54]);

				try {
					isCyclicDecision = true;
					alt54 = dfa54.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(54);}

				switch (alt54) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:81: ( ws )? COMMA ( ws )? sass_use_with_declaration
					{
					dbg.location(358,81);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:81: ( ws )?
					int alt52=2;
					try { dbg.enterSubRule(52);
					try { dbg.enterDecision(52, decisionCanBacktrack[52]);

					int LA52_0 = input.LA(1);
					if ( (LA52_0==COMMENT||LA52_0==NL||LA52_0==WS) ) {
						alt52=1;
					}
					} finally {dbg.exitDecision(52);}

					switch (alt52) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:81: ws
							{
							dbg.location(358,81);
							pushFollow(FOLLOW_ws_in_sass_use_with756);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(52);}
					dbg.location(358,85);
					match(input,COMMA,FOLLOW_COMMA_in_sass_use_with759); if (state.failed) return;dbg.location(358,91);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:91: ( ws )?
					int alt53=2;
					try { dbg.enterSubRule(53);
					try { dbg.enterDecision(53, decisionCanBacktrack[53]);

					int LA53_0 = input.LA(1);
					if ( (LA53_0==COMMENT||LA53_0==NL||LA53_0==WS) ) {
						alt53=1;
					}
					} finally {dbg.exitDecision(53);}

					switch (alt53) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:91: ws
							{
							dbg.location(358,91);
							pushFollow(FOLLOW_ws_in_sass_use_with761);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(53);}
					dbg.location(358,95);
					pushFollow(FOLLOW_sass_use_with_declaration_in_sass_use_with764);
					sass_use_with_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop54;
				}
			}
			} finally {dbg.exitSubRule(54);}
			dbg.location(358,124);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:124: ( ws )?
			int alt55=2;
			try { dbg.enterSubRule(55);
			try { dbg.enterDecision(55, decisionCanBacktrack[55]);

			int LA55_0 = input.LA(1);
			if ( (LA55_0==COMMENT||LA55_0==NL||LA55_0==WS) ) {
				alt55=1;
			}
			} finally {dbg.exitDecision(55);}

			switch (alt55) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:124: ws
					{
					dbg.location(358,124);
					pushFollow(FOLLOW_ws_in_sass_use_with769);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(55);}
			dbg.location(358,128);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_use_with772); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(359, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_with");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_with"



	// $ANTLR start "sass_use_with_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:361:1: sass_use_with_declaration : cp_variable ( ws )? COLON ( ws )? cp_expression ;
	public final void sass_use_with_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_with_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(361, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:362:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:5: cp_variable ( ws )? COLON ( ws )? cp_expression
			{
			dbg.location(363,5);
			pushFollow(FOLLOW_cp_variable_in_sass_use_with_declaration793);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(363,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:17: ( ws )?
			int alt56=2;
			try { dbg.enterSubRule(56);
			try { dbg.enterDecision(56, decisionCanBacktrack[56]);

			int LA56_0 = input.LA(1);
			if ( (LA56_0==COMMENT||LA56_0==NL||LA56_0==WS) ) {
				alt56=1;
			}
			} finally {dbg.exitDecision(56);}

			switch (alt56) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:17: ws
					{
					dbg.location(363,17);
					pushFollow(FOLLOW_ws_in_sass_use_with_declaration795);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(56);}
			dbg.location(363,21);
			match(input,COLON,FOLLOW_COLON_in_sass_use_with_declaration798); if (state.failed) return;dbg.location(363,27);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:27: ( ws )?
			int alt57=2;
			try { dbg.enterSubRule(57);
			try { dbg.enterDecision(57, decisionCanBacktrack[57]);

			int LA57_0 = input.LA(1);
			if ( (LA57_0==COMMENT||LA57_0==NL||LA57_0==WS) ) {
				alt57=1;
			}
			} finally {dbg.exitDecision(57);}

			switch (alt57) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:27: ws
					{
					dbg.location(363,27);
					pushFollow(FOLLOW_ws_in_sass_use_with_declaration800);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(57);}
			dbg.location(363,31);
			pushFollow(FOLLOW_cp_expression_in_sass_use_with_declaration803);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(364, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_with_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_with_declaration"



	// $ANTLR start "sass_forward"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:1: sass_forward : SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )? ;
	public final void sass_forward() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(367, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:368:5: ( SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:9: SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )?
			{
			dbg.location(369,9);
			match(input,SASS_FORWARD,FOLLOW_SASS_FORWARD_in_sass_forward829); if (state.failed) return;dbg.location(369,22);
			pushFollow(FOLLOW_ws_in_sass_forward831);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(369,25);
			pushFollow(FOLLOW_resourceIdentifier_in_sass_forward833);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(369,44);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:44: ( ws ( sass_forward_hide | sass_forward_show ) )?
			int alt59=2;
			try { dbg.enterSubRule(59);
			try { dbg.enterDecision(59, decisionCanBacktrack[59]);

			try {
				isCyclicDecision = true;
				alt59 = dfa59.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(59);}

			switch (alt59) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:46: ws ( sass_forward_hide | sass_forward_show )
					{
					dbg.location(369,46);
					pushFollow(FOLLOW_ws_in_sass_forward837);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(369,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:49: ( sass_forward_hide | sass_forward_show )
					int alt58=2;
					try { dbg.enterSubRule(58);
					try { dbg.enterDecision(58, decisionCanBacktrack[58]);

					try {
						isCyclicDecision = true;
						alt58 = dfa58.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(58);}

					switch (alt58) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:51: sass_forward_hide
							{
							dbg.location(369,51);
							pushFollow(FOLLOW_sass_forward_hide_in_sass_forward841);
							sass_forward_hide();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:72: sass_forward_show
							{
							dbg.location(369,72);
							pushFollow(FOLLOW_sass_forward_show_in_sass_forward846);
							sass_forward_show();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(58);}

					}
					break;

			}
			} finally {dbg.exitSubRule(59);}
			dbg.location(369,93);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:93: ({...}? ws sass_forward_as )?
			int alt60=2;
			try { dbg.enterSubRule(60);
			try { dbg.enterDecision(60, decisionCanBacktrack[60]);

			try {
				isCyclicDecision = true;
				alt60 = dfa60.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(60);}

			switch (alt60) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:94: {...}? ws sass_forward_as
					{
					dbg.location(369,94);
					if ( !(evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "sass_forward", "tokenNameEquals2(\"as\")");
					}dbg.location(369,120);
					pushFollow(FOLLOW_ws_in_sass_forward854);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(369,123);
					pushFollow(FOLLOW_sass_forward_as_in_sass_forward856);
					sass_forward_as();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(60);}
			dbg.location(369,141);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:141: ({...}? ws sass_forward_with )?
			int alt61=2;
			try { dbg.enterSubRule(61);
			try { dbg.enterDecision(61, decisionCanBacktrack[61]);

			try {
				isCyclicDecision = true;
				alt61 = dfa61.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(61);}

			switch (alt61) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:142: {...}? ws sass_forward_with
					{
					dbg.location(369,142);
					if ( !(evalPredicate(tokenNameEquals2("with"),"tokenNameEquals2(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "sass_forward", "tokenNameEquals2(\"with\")");
					}dbg.location(369,170);
					pushFollow(FOLLOW_ws_in_sass_forward863);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(369,173);
					pushFollow(FOLLOW_sass_forward_with_in_sass_forward865);
					sass_forward_with();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(61);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(370, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward"



	// $ANTLR start "sass_forward_as"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:1: sass_forward_as :{...}? IDENT ws IDENT ;
	public final void sass_forward_as() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_as");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(372, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:373:5: ({...}? IDENT ws IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:374:5: {...}? IDENT ws IDENT
			{
			dbg.location(374,5);
			if ( !(evalPredicate(tokenNameEquals("as"),"tokenNameEquals(\"as\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_as", "tokenNameEquals(\"as\")");
			}dbg.location(374,30);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_as890); if (state.failed) return;dbg.location(374,36);
			pushFollow(FOLLOW_ws_in_sass_forward_as892);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(374,39);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_as894); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(375, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_as");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_as"



	// $ANTLR start "sass_forward_with"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:1: sass_forward_with :{...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN ;
	public final void sass_forward_with() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_with");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(377, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:378:5: ({...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:5: {...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN
			{
			dbg.location(379,5);
			if ( !(evalPredicate(tokenNameEquals("with"),"tokenNameEquals(\"with\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_with", "tokenNameEquals(\"with\")");
			}dbg.location(379,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_with917); if (state.failed) return;dbg.location(379,38);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:38: ( ws )?
			int alt62=2;
			try { dbg.enterSubRule(62);
			try { dbg.enterDecision(62, decisionCanBacktrack[62]);

			int LA62_0 = input.LA(1);
			if ( (LA62_0==COMMENT||LA62_0==NL||LA62_0==WS) ) {
				alt62=1;
			}
			} finally {dbg.exitDecision(62);}

			switch (alt62) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:38: ws
					{
					dbg.location(379,38);
					pushFollow(FOLLOW_ws_in_sass_forward_with919);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(62);}
			dbg.location(379,42);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_forward_with922); if (state.failed) return;dbg.location(379,49);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:49: ( ws )?
			int alt63=2;
			try { dbg.enterSubRule(63);
			try { dbg.enterDecision(63, decisionCanBacktrack[63]);

			int LA63_0 = input.LA(1);
			if ( (LA63_0==COMMENT||LA63_0==NL||LA63_0==WS) ) {
				alt63=1;
			}
			} finally {dbg.exitDecision(63);}

			switch (alt63) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:49: ws
					{
					dbg.location(379,49);
					pushFollow(FOLLOW_ws_in_sass_forward_with924);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(63);}
			dbg.location(379,53);
			pushFollow(FOLLOW_sass_forward_with_declaration_in_sass_forward_with927);
			sass_forward_with_declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(379,84);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:84: ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )*
			try { dbg.enterSubRule(66);

			loop66:
			while (true) {
				int alt66=2;
				try { dbg.enterDecision(66, decisionCanBacktrack[66]);

				try {
					isCyclicDecision = true;
					alt66 = dfa66.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(66);}

				switch (alt66) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:85: ( ws )? COMMA ( ws )? sass_forward_with_declaration
					{
					dbg.location(379,85);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:85: ( ws )?
					int alt64=2;
					try { dbg.enterSubRule(64);
					try { dbg.enterDecision(64, decisionCanBacktrack[64]);

					int LA64_0 = input.LA(1);
					if ( (LA64_0==COMMENT||LA64_0==NL||LA64_0==WS) ) {
						alt64=1;
					}
					} finally {dbg.exitDecision(64);}

					switch (alt64) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:85: ws
							{
							dbg.location(379,85);
							pushFollow(FOLLOW_ws_in_sass_forward_with931);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(64);}
					dbg.location(379,89);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_with934); if (state.failed) return;dbg.location(379,95);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:95: ( ws )?
					int alt65=2;
					try { dbg.enterSubRule(65);
					try { dbg.enterDecision(65, decisionCanBacktrack[65]);

					int LA65_0 = input.LA(1);
					if ( (LA65_0==COMMENT||LA65_0==NL||LA65_0==WS) ) {
						alt65=1;
					}
					} finally {dbg.exitDecision(65);}

					switch (alt65) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:95: ws
							{
							dbg.location(379,95);
							pushFollow(FOLLOW_ws_in_sass_forward_with936);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(65);}
					dbg.location(379,99);
					pushFollow(FOLLOW_sass_forward_with_declaration_in_sass_forward_with939);
					sass_forward_with_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop66;
				}
			}
			} finally {dbg.exitSubRule(66);}
			dbg.location(379,132);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:132: ( ws )?
			int alt67=2;
			try { dbg.enterSubRule(67);
			try { dbg.enterDecision(67, decisionCanBacktrack[67]);

			int LA67_0 = input.LA(1);
			if ( (LA67_0==COMMENT||LA67_0==NL||LA67_0==WS) ) {
				alt67=1;
			}
			} finally {dbg.exitDecision(67);}

			switch (alt67) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:132: ws
					{
					dbg.location(379,132);
					pushFollow(FOLLOW_ws_in_sass_forward_with944);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(67);}
			dbg.location(379,136);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_forward_with947); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(380, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_with");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_with"



	// $ANTLR start "sass_forward_with_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:382:1: sass_forward_with_declaration : cp_variable ( ws )? COLON ( ws )? cp_expression ;
	public final void sass_forward_with_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_with_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(382, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:383:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:5: cp_variable ( ws )? COLON ( ws )? cp_expression
			{
			dbg.location(384,5);
			pushFollow(FOLLOW_cp_variable_in_sass_forward_with_declaration968);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(384,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:17: ( ws )?
			int alt68=2;
			try { dbg.enterSubRule(68);
			try { dbg.enterDecision(68, decisionCanBacktrack[68]);

			int LA68_0 = input.LA(1);
			if ( (LA68_0==COMMENT||LA68_0==NL||LA68_0==WS) ) {
				alt68=1;
			}
			} finally {dbg.exitDecision(68);}

			switch (alt68) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:17: ws
					{
					dbg.location(384,17);
					pushFollow(FOLLOW_ws_in_sass_forward_with_declaration970);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(68);}
			dbg.location(384,21);
			match(input,COLON,FOLLOW_COLON_in_sass_forward_with_declaration973); if (state.failed) return;dbg.location(384,27);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:27: ( ws )?
			int alt69=2;
			try { dbg.enterSubRule(69);
			try { dbg.enterDecision(69, decisionCanBacktrack[69]);

			int LA69_0 = input.LA(1);
			if ( (LA69_0==COMMENT||LA69_0==NL||LA69_0==WS) ) {
				alt69=1;
			}
			} finally {dbg.exitDecision(69);}

			switch (alt69) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:27: ws
					{
					dbg.location(384,27);
					pushFollow(FOLLOW_ws_in_sass_forward_with_declaration975);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(69);}
			dbg.location(384,31);
			pushFollow(FOLLOW_cp_expression_in_sass_forward_with_declaration978);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(385, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_with_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_with_declaration"



	// $ANTLR start "sass_forward_hide"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:387:1: sass_forward_hide :{...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* ;
	public final void sass_forward_hide() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_hide");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(387, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:388:5: ({...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:5: {...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )*
			{
			dbg.location(389,5);
			if ( !(evalPredicate(tokenNameEquals("hide"),"tokenNameEquals(\"hide\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_hide", "tokenNameEquals(\"hide\")");
			}dbg.location(389,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide1001); if (state.failed) return;dbg.location(389,38);
			pushFollow(FOLLOW_ws_in_sass_forward_hide1003);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(389,41);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide1005); if (state.failed) return;dbg.location(389,47);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:47: ( ( ws )? COMMA ( ws )? IDENT )*
			try { dbg.enterSubRule(72);

			loop72:
			while (true) {
				int alt72=2;
				try { dbg.enterDecision(72, decisionCanBacktrack[72]);

				try {
					isCyclicDecision = true;
					alt72 = dfa72.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(72);}

				switch (alt72) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:48: ( ws )? COMMA ( ws )? IDENT
					{
					dbg.location(389,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:48: ( ws )?
					int alt70=2;
					try { dbg.enterSubRule(70);
					try { dbg.enterDecision(70, decisionCanBacktrack[70]);

					int LA70_0 = input.LA(1);
					if ( (LA70_0==COMMENT||LA70_0==NL||LA70_0==WS) ) {
						alt70=1;
					}
					} finally {dbg.exitDecision(70);}

					switch (alt70) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:48: ws
							{
							dbg.location(389,48);
							pushFollow(FOLLOW_ws_in_sass_forward_hide1008);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(70);}
					dbg.location(389,52);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_hide1011); if (state.failed) return;dbg.location(389,58);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:58: ( ws )?
					int alt71=2;
					try { dbg.enterSubRule(71);
					try { dbg.enterDecision(71, decisionCanBacktrack[71]);

					int LA71_0 = input.LA(1);
					if ( (LA71_0==COMMENT||LA71_0==NL||LA71_0==WS) ) {
						alt71=1;
					}
					} finally {dbg.exitDecision(71);}

					switch (alt71) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:58: ws
							{
							dbg.location(389,58);
							pushFollow(FOLLOW_ws_in_sass_forward_hide1013);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(71);}
					dbg.location(389,62);
					match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide1016); if (state.failed) return;
					}
					break;

				default :
					break loop72;
				}
			}
			} finally {dbg.exitSubRule(72);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(390, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_hide");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_hide"



	// $ANTLR start "sass_forward_show"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:1: sass_forward_show :{...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* ;
	public final void sass_forward_show() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_show");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(392, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:393:5: ({...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:5: {...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )*
			{
			dbg.location(394,5);
			if ( !(evalPredicate(tokenNameEquals("show"),"tokenNameEquals(\"show\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_show", "tokenNameEquals(\"show\")");
			}dbg.location(394,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show1041); if (state.failed) return;dbg.location(394,38);
			pushFollow(FOLLOW_ws_in_sass_forward_show1043);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(394,41);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show1045); if (state.failed) return;dbg.location(394,47);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:47: ( ( ws )? COMMA ( ws )? IDENT )*
			try { dbg.enterSubRule(75);

			loop75:
			while (true) {
				int alt75=2;
				try { dbg.enterDecision(75, decisionCanBacktrack[75]);

				try {
					isCyclicDecision = true;
					alt75 = dfa75.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(75);}

				switch (alt75) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:48: ( ws )? COMMA ( ws )? IDENT
					{
					dbg.location(394,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:48: ( ws )?
					int alt73=2;
					try { dbg.enterSubRule(73);
					try { dbg.enterDecision(73, decisionCanBacktrack[73]);

					int LA73_0 = input.LA(1);
					if ( (LA73_0==COMMENT||LA73_0==NL||LA73_0==WS) ) {
						alt73=1;
					}
					} finally {dbg.exitDecision(73);}

					switch (alt73) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:48: ws
							{
							dbg.location(394,48);
							pushFollow(FOLLOW_ws_in_sass_forward_show1048);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(73);}
					dbg.location(394,52);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_show1051); if (state.failed) return;dbg.location(394,58);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:58: ( ws )?
					int alt74=2;
					try { dbg.enterSubRule(74);
					try { dbg.enterDecision(74, decisionCanBacktrack[74]);

					int LA74_0 = input.LA(1);
					if ( (LA74_0==COMMENT||LA74_0==NL||LA74_0==WS) ) {
						alt74=1;
					}
					} finally {dbg.exitDecision(74);}

					switch (alt74) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:58: ws
							{
							dbg.location(394,58);
							pushFollow(FOLLOW_ws_in_sass_forward_show1053);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(74);}
					dbg.location(394,62);
					match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show1056); if (state.failed) return;
					}
					break;

				default :
					break loop75;
				}
			}
			} finally {dbg.exitSubRule(75);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(395, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_show");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_show"



	// $ANTLR start "media"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:397:1: media : MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void media() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "media");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(397, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:5: ( MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:7: MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(398,7);
			match(input,MEDIA_SYM,FOLLOW_MEDIA_SYM_in_media1075); if (state.failed) return;dbg.location(398,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:17: ( ws )?
			int alt76=2;
			try { dbg.enterSubRule(76);
			try { dbg.enterDecision(76, decisionCanBacktrack[76]);

			int LA76_0 = input.LA(1);
			if ( (LA76_0==COMMENT||LA76_0==NL||LA76_0==WS) ) {
				alt76=1;
			}
			} finally {dbg.exitDecision(76);}

			switch (alt76) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:17: ws
					{
					dbg.location(398,17);
					pushFollow(FOLLOW_ws_in_media1077);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(76);}
			dbg.location(399,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:5: ( mediaQueryList )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:10: mediaQueryList
			{
			dbg.location(400,10);
			pushFollow(FOLLOW_mediaQueryList_in_media1095);
			mediaQueryList();
			state._fsp--;
			if (state.failed) return;
			}
			dbg.location(401,7);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:7: ( ws )?
			int alt77=2;
			try { dbg.enterSubRule(77);
			try { dbg.enterDecision(77, decisionCanBacktrack[77]);

			int LA77_0 = input.LA(1);
			if ( (LA77_0==COMMENT||LA77_0==NL||LA77_0==WS) ) {
				alt77=1;
			}
			} finally {dbg.exitDecision(77);}

			switch (alt77) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:7: ws
					{
					dbg.location(401,7);
					pushFollow(FOLLOW_ws_in_media1103);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(77);}
			dbg.location(402,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_media1110); if (state.failed) return;dbg.location(402,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:12: ( ws )?
			int alt78=2;
			try { dbg.enterSubRule(78);
			try { dbg.enterDecision(78, decisionCanBacktrack[78]);

			int LA78_0 = input.LA(1);
			if ( (LA78_0==COMMENT||LA78_0==NL||LA78_0==WS) ) {
				alt78=1;
			}
			} finally {dbg.exitDecision(78);}

			switch (alt78) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:12: ws
					{
					dbg.location(402,12);
					pushFollow(FOLLOW_ws_in_media1112);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(78);}
			dbg.location(402,16);
			pushFollow(FOLLOW_syncToFollow_in_media1115);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(403,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:9: ( mediaBody )?
			int alt79=2;
			try { dbg.enterSubRule(79);
			try { dbg.enterDecision(79, decisionCanBacktrack[79]);

			int LA79_0 = input.LA(1);
			if ( ((LA79_0 >= AT_IDENT && LA79_0 <= AT_SIGN)||(LA79_0 >= BOTTOMCENTER_SYM && LA79_0 <= BOTTOMRIGHT_SYM)||(LA79_0 >= CHARSET_SYM && LA79_0 <= COLON)||LA79_0==COUNTER_STYLE_SYM||(LA79_0 >= DCOLON && LA79_0 <= DOT)||LA79_0==FONT_FACE_SYM||(LA79_0 >= GEN && LA79_0 <= GREATER)||(LA79_0 >= HASH && LA79_0 <= HASH_SYMBOL)||LA79_0==IDENT||LA79_0==IMPORT_SYM||(LA79_0 >= LBRACKET && LA79_0 <= LEFTTOP_SYM)||LA79_0==LESS_AND||(LA79_0 >= MEDIA_SYM && LA79_0 <= MOZ_DOCUMENT_SYM)||LA79_0==NAMESPACE_SYM||LA79_0==PAGE_SYM||(LA79_0 >= PIPE && LA79_0 <= PLUS)||(LA79_0 >= RIGHTBOTTOM_SYM && LA79_0 <= RIGHTTOP_SYM)||(LA79_0 >= SASS_AT_ROOT && LA79_0 <= SASS_DEBUG)||(LA79_0 >= SASS_EACH && LA79_0 <= SASS_ELSE)||(LA79_0 >= SASS_EXTEND && LA79_0 <= SASS_FUNCTION)||(LA79_0 >= SASS_IF && LA79_0 <= SASS_MIXIN)||(LA79_0 >= SASS_RETURN && LA79_0 <= SEMI)||LA79_0==STAR||LA79_0==SUPPORTS_SYM||LA79_0==TILDE||(LA79_0 >= TOPCENTER_SYM && LA79_0 <= TOPRIGHT_SYM)||LA79_0==VARIABLE||LA79_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt79=1;
			}
			} finally {dbg.exitDecision(79);}

			switch (alt79) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:9: mediaBody
					{
					dbg.location(403,9);
					pushFollow(FOLLOW_mediaBody_in_media1125);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(79);}
			dbg.location(404,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_media1132); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(405, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "media");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "media"



	// $ANTLR start "mediaBody"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:407:1: mediaBody : ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ ;
	public final void mediaBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(407, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:5: ( ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			{
			dbg.location(409,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			int cnt85=0;
			try { dbg.enterSubRule(85);

			loop85:
			while (true) {
				int alt85=4;
				try { dbg.enterDecision(85, decisionCanBacktrack[85]);

				switch ( input.LA(1) ) {
				case AT_IDENT:
				case AT_SIGN:
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case CHARSET_SYM:
				case COLON:
				case COUNTER_STYLE_SYM:
				case DCOLON:
				case DIMENSION:
				case DOT:
				case FONT_FACE_SYM:
				case GEN:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case IDENT:
				case IMPORT_SYM:
				case LBRACKET:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case LESS_AND:
				case MEDIA_SYM:
				case MINUS:
				case MOZ_DOCUMENT_SYM:
				case NAMESPACE_SYM:
				case PAGE_SYM:
				case PIPE:
				case PLUS:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case SASS_AT_ROOT:
				case SASS_CONTENT:
				case SASS_DEBUG:
				case SASS_EACH:
				case SASS_ELSE:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SASS_FOR:
				case SASS_FORWARD:
				case SASS_FUNCTION:
				case SASS_IF:
				case SASS_INCLUDE:
				case SASS_MIXIN:
				case SASS_RETURN:
				case SASS_USE:
				case SASS_VAR:
				case SASS_WARN:
				case SASS_WHILE:
				case STAR:
				case SUPPORTS_SYM:
				case TILDE:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
				case VARIABLE:
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt85=1;
					}
					break;
				case SASS_EXTEND:
					{
					int LA85_35 = input.LA(2);
					if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
						alt85=1;
					}
					else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt85=3;
					}

					}
					break;
				case SEMI:
					{
					alt85=2;
					}
					break;
				}
				} finally {dbg.exitDecision(85);}

				switch (alt85) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(410,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:12: mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(410,12);
					pushFollow(FOLLOW_mediaBodyItem_in_mediaBody1166);
					mediaBodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(410,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt81=2;
					try { dbg.enterSubRule(81);
					try { dbg.enterDecision(81, decisionCanBacktrack[81]);

					try {
						isCyclicDecision = true;
						alt81 = dfa81.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(81);}

					switch (alt81) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:27: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(410,39);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:39: ( ws )?
							int alt80=2;
							try { dbg.enterSubRule(80);
							try { dbg.enterDecision(80, decisionCanBacktrack[80]);

							int LA80_0 = input.LA(1);
							if ( (LA80_0==COMMENT||LA80_0==NL||LA80_0==WS) ) {
								alt80=1;
							}
							} finally {dbg.exitDecision(80);}

							switch (alt80) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:39: ws
									{
									dbg.location(410,39);
									pushFollow(FOLLOW_ws_in_mediaBody1176);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(80);}
							dbg.location(410,43);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody1179); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(81);}
					dbg.location(410,50);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:50: ( ws )?
					int alt82=2;
					try { dbg.enterSubRule(82);
					try { dbg.enterDecision(82, decisionCanBacktrack[82]);

					int LA82_0 = input.LA(1);
					if ( (LA82_0==COMMENT||LA82_0==NL||LA82_0==WS) ) {
						alt82=1;
					}
					} finally {dbg.exitDecision(82);}

					switch (alt82) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:50: ws
							{
							dbg.location(410,50);
							pushFollow(FOLLOW_ws_in_mediaBody1183);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(82);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:10: ( SEMI ( ws )? )
					{
					dbg.location(412,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:12: SEMI ( ws )?
					{
					dbg.location(412,12);
					match(input,SEMI,FOLLOW_SEMI_in_mediaBody1210); if (state.failed) return;dbg.location(412,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:17: ( ws )?
					int alt83=2;
					try { dbg.enterSubRule(83);
					try { dbg.enterDecision(83, decisionCanBacktrack[83]);

					int LA83_0 = input.LA(1);
					if ( (LA83_0==COMMENT||LA83_0==NL||LA83_0==WS) ) {
						alt83=1;
					}
					} finally {dbg.exitDecision(83);}

					switch (alt83) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:17: ws
							{
							dbg.location(412,17);
							pushFollow(FOLLOW_ws_in_mediaBody1212);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(83);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					{
					dbg.location(413,12);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:13: {...}? sass_extend ( ws | ( SEMI ) )
					{
					dbg.location(413,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBody", "isScssSource()");
					}dbg.location(413,31);
					pushFollow(FOLLOW_sass_extend_in_mediaBody1231);
					sass_extend();
					state._fsp--;
					if (state.failed) return;dbg.location(413,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:43: ( ws | ( SEMI ) )
					int alt84=2;
					try { dbg.enterSubRule(84);
					try { dbg.enterDecision(84, decisionCanBacktrack[84]);

					int LA84_0 = input.LA(1);
					if ( (LA84_0==COMMENT||LA84_0==NL||LA84_0==WS) ) {
						alt84=1;
					}
					else if ( (LA84_0==SEMI) ) {
						alt84=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 84, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(84);}

					switch (alt84) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:44: ws
							{
							dbg.location(413,44);
							pushFollow(FOLLOW_ws_in_mediaBody1234);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:49: ( SEMI )
							{
							dbg.location(413,49);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:49: ( SEMI )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:50: SEMI
							{
							dbg.location(413,50);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody1239); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(84);}

					}

					}
					break;

				default :
					if ( cnt85 >= 1 ) break loop85;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(85, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt85++;
			}
			} finally {dbg.exitSubRule(85);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(415, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBody"



	// $ANTLR start "mediaBodyItem"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:1: mediaBodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media | supportsAtRule );
	public final void mediaBodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(417, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media | supportsAtRule )
			int alt90=15;
			try { dbg.enterDecision(90, decisionCanBacktrack[90]);

			int LA90_0 = input.LA(1);
			if ( (LA90_0==LESS_AND) ) {
				int LA90_1 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==DOT) ) {
				int LA90_2 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==HASH) ) {
				int LA90_3 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==SASS_MIXIN) ) {
				int LA90_4 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==AT_IDENT) ) {
				int LA90_5 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=13;
				}

			}
			else if ( (LA90_0==SASS_INCLUDE) ) {
				int LA90_6 = input.LA(2);
				if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=2;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_AT_ROOT) ) {
				int LA90_7 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==GREATER||LA90_0==PLUS||LA90_0==TILDE) ) {
				int LA90_8 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				int LA90_9 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==HASH_SYMBOL) ) {
				int LA90_10 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( ((synpred9_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==DIMENSION) ) {
				int LA90_11 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"))) ) {
					alt90=4;
				}
				else if ( (evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==LBRACKET) ) {
				int LA90_12 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==COLON||LA90_0==DCOLON) ) {
				int LA90_13 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==IDENT) ) {
				int LA90_14 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==AT_SIGN) ) {
				int LA90_15 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==MINUS) ) {
				int LA90_16 = input.LA(2);
				if ( ((synpred8_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt90=4;
				}
				else if ( ((synpred9_Css3()&&((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))||(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt90=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==STAR) ) {
				int LA90_17 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==PIPE) ) {
				int LA90_18 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==GEN) ) {
				int LA90_19 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==VARIABLE) && (synpred9_Css3())) {
				alt90=5;
			}
			else if ( (LA90_0==SASS_DEBUG||LA90_0==SASS_WARN) ) {
				int LA90_21 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_VAR) && (synpred9_Css3())) {
				alt90=5;
			}
			else if ( (LA90_0==SASS_IF) ) {
				int LA90_23 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_FOR) ) {
				int LA90_24 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_EACH) ) {
				int LA90_25 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_WHILE) ) {
				int LA90_26 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_CONTENT) ) {
				int LA90_27 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==IMPORT_SYM) ) {
				int LA90_28 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt90=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==PAGE_SYM) ) {
				int LA90_29 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=11;
				}

			}
			else if ( (LA90_0==FONT_FACE_SYM) ) {
				int LA90_30 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=12;
				}

			}
			else if ( (LA90_0==MOZ_DOCUMENT_SYM) ) {
				int LA90_31 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=13;
				}

			}
			else if ( (LA90_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA90_32 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=13;
				}

			}
			else if ( (LA90_0==MEDIA_SYM) ) {
				int LA90_33 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=14;
				}

			}
			else if ( ((LA90_0 >= BOTTOMCENTER_SYM && LA90_0 <= BOTTOMRIGHT_SYM)||LA90_0==CHARSET_SYM||LA90_0==COUNTER_STYLE_SYM||(LA90_0 >= LEFTBOTTOM_SYM && LA90_0 <= LEFTTOP_SYM)||LA90_0==NAMESPACE_SYM||(LA90_0 >= RIGHTBOTTOM_SYM && LA90_0 <= RIGHTTOP_SYM)||LA90_0==SASS_ELSE||LA90_0==SASS_EXTEND||(LA90_0 >= SASS_FORWARD && LA90_0 <= SASS_FUNCTION)||(LA90_0 >= SASS_RETURN && LA90_0 <= SASS_USE)||(LA90_0 >= TOPCENTER_SYM && LA90_0 <= TOPRIGHT_SYM)) && (synpred9_Css3())) {
				alt90=5;
			}
			else if ( (LA90_0==SUPPORTS_SYM) ) {
				alt90=15;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 90, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(90);}

			switch (alt90) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(419,96);
					pushFollow(FOLLOW_cp_mixin_declaration_in_mediaBodyItem1313);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(421,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isLessSource()");
					}dbg.location(421,73);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem1346);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(421,87);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:87: ( ( ws )? IMPORTANT_SYM )?
					int alt87=2;
					try { dbg.enterSubRule(87);
					try { dbg.enterDecision(87, decisionCanBacktrack[87]);

					try {
						isCyclicDecision = true;
						alt87 = dfa87.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(87);}

					switch (alt87) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(421,88);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:88: ( ws )?
							int alt86=2;
							try { dbg.enterSubRule(86);
							try { dbg.enterDecision(86, decisionCanBacktrack[86]);

							int LA86_0 = input.LA(1);
							if ( (LA86_0==COMMENT||LA86_0==NL||LA86_0==WS) ) {
								alt86=1;
							}
							} finally {dbg.exitDecision(86);}

							switch (alt86) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:88: ws
									{
									dbg.location(421,88);
									pushFollow(FOLLOW_ws_in_mediaBodyItem1349);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(86);}
							dbg.location(421,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1352); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(87);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(422,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(422,43);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem1369);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(422,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:57: ( ( ws )? IMPORTANT_SYM )?
					int alt89=2;
					try { dbg.enterSubRule(89);
					try { dbg.enterDecision(89, decisionCanBacktrack[89]);

					try {
						isCyclicDecision = true;
						alt89 = dfa89.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(89);}

					switch (alt89) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(422,58);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:58: ( ws )?
							int alt88=2;
							try { dbg.enterSubRule(88);
							try { dbg.enterDecision(88, decisionCanBacktrack[88]);

							int LA88_0 = input.LA(1);
							if ( (LA88_0==COMMENT||LA88_0==NL||LA88_0==WS) ) {
								alt88=1;
							}
							} finally {dbg.exitDecision(88);}

							switch (alt88) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:58: ws
									{
									dbg.location(422,58);
									pushFollow(FOLLOW_ws_in_mediaBodyItem1372);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(88);}
							dbg.location(422,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1375); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(89);}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(423,145);
					pushFollow(FOLLOW_rule_in_mediaBodyItem1440);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(424,30);
					pushFollow(FOLLOW_propertyDeclaration_in_mediaBodyItem1452);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:7: {...}? sass_debug
					{
					dbg.location(425,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(425,25);
					pushFollow(FOLLOW_sass_debug_in_mediaBodyItem1462);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:7: {...}? sass_control
					{
					dbg.location(426,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(426,25);
					pushFollow(FOLLOW_sass_control_in_mediaBodyItem1472);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:427:7: {...}? sass_content
					{
					dbg.location(427,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(427,25);
					pushFollow(FOLLOW_sass_content_in_mediaBodyItem1482);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:428:7: {...}? importItem
					{
					dbg.location(428,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isCssPreprocessorSource()");
					}dbg.location(428,36);
					pushFollow(FOLLOW_importItem_in_mediaBodyItem1492);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:429:7: rule
					{
					dbg.location(429,7);
					pushFollow(FOLLOW_rule_in_mediaBodyItem1500);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:7: page
					{
					dbg.location(430,7);
					pushFollow(FOLLOW_page_in_mediaBodyItem1508);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:431:7: fontFace
					{
					dbg.location(431,7);
					pushFollow(FOLLOW_fontFace_in_mediaBodyItem1516);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:432:7: vendorAtRule
					{
					dbg.location(432,7);
					pushFollow(FOLLOW_vendorAtRule_in_mediaBodyItem1524);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:7: media
					{
					dbg.location(434,7);
					pushFollow(FOLLOW_media_in_mediaBodyItem1537);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:7: supportsAtRule
					{
					dbg.location(435,7);
					pushFollow(FOLLOW_supportsAtRule_in_mediaBodyItem1545);
					supportsAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(436, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBodyItem"



	// $ANTLR start "mediaQueryList"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:1: mediaQueryList : mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* ;
	public final void mediaQueryList() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(438, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:2: ( mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:4: mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			{
			dbg.location(439,4);
			pushFollow(FOLLOW_mediaQuery_in_mediaQueryList1559);
			mediaQuery();
			state._fsp--;
			if (state.failed) return;dbg.location(439,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			try { dbg.enterSubRule(93);

			loop93:
			while (true) {
				int alt93=2;
				try { dbg.enterDecision(93, decisionCanBacktrack[93]);

				try {
					isCyclicDecision = true;
					alt93 = dfa93.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(93);}

				switch (alt93) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:17: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery
					{
					dbg.location(439,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:31: ( ws )?
					int alt91=2;
					try { dbg.enterSubRule(91);
					try { dbg.enterDecision(91, decisionCanBacktrack[91]);

					int LA91_0 = input.LA(1);
					if ( (LA91_0==COMMENT||LA91_0==NL||LA91_0==WS) ) {
						alt91=1;
					}
					} finally {dbg.exitDecision(91);}

					switch (alt91) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:31: ws
							{
							dbg.location(439,31);
							pushFollow(FOLLOW_ws_in_mediaQueryList1571);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(91);}
					dbg.location(439,35);
					match(input,COMMA,FOLLOW_COMMA_in_mediaQueryList1574); if (state.failed) return;dbg.location(439,41);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:41: ( ws )?
					int alt92=2;
					try { dbg.enterSubRule(92);
					try { dbg.enterDecision(92, decisionCanBacktrack[92]);

					int LA92_0 = input.LA(1);
					if ( (LA92_0==COMMENT||LA92_0==NL||LA92_0==WS) ) {
						alt92=1;
					}
					} finally {dbg.exitDecision(92);}

					switch (alt92) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:41: ws
							{
							dbg.location(439,41);
							pushFollow(FOLLOW_ws_in_mediaQueryList1576);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(92);}
					dbg.location(439,45);
					pushFollow(FOLLOW_mediaQuery_in_mediaQueryList1579);
					mediaQuery();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop93;
				}
			}
			} finally {dbg.exitSubRule(93);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(440, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryList"



	// $ANTLR start "mediaQuery"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:442:1: mediaQuery : ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable );
	public final void mediaQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(442, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:443:2: ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable )
			int alt102=3;
			try { dbg.enterDecision(102, decisionCanBacktrack[102]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA102_1 = input.LA(2);
				if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()")),""))) ) {
					alt102=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt102=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 102, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
			case NOT:
				{
				alt102=1;
				}
				break;
			case HASH_SYMBOL:
				{
				int LA102_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt102=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt102=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 102, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LPAREN:
				{
				alt102=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt102=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 102, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(102);}

			switch (alt102) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(444,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: ( mediaQueryOperator ( ws )? )?
					int alt95=2;
					try { dbg.enterSubRule(95);
					try { dbg.enterDecision(95, decisionCanBacktrack[95]);

					int LA95_0 = input.LA(1);
					if ( (LA95_0==IDENT) ) {
						int LA95_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
							alt95=1;
						}
					}
					else if ( (LA95_0==NOT) ) {
						alt95=1;
					}
					} finally {dbg.exitDecision(95);}

					switch (alt95) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:6: mediaQueryOperator ( ws )?
							{
							dbg.location(444,6);
							pushFollow(FOLLOW_mediaQueryOperator_in_mediaQuery1598);
							mediaQueryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(444,25);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:25: ( ws )?
							int alt94=2;
							try { dbg.enterSubRule(94);
							try { dbg.enterDecision(94, decisionCanBacktrack[94]);

							int LA94_0 = input.LA(1);
							if ( (LA94_0==COMMENT||LA94_0==NL||LA94_0==WS) ) {
								alt94=1;
							}
							} finally {dbg.exitDecision(94);}

							switch (alt94) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:25: ws
									{
									dbg.location(444,25);
									pushFollow(FOLLOW_ws_in_mediaQuery1600);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(94);}

							}
							break;

					}
					} finally {dbg.exitSubRule(95);}
					dbg.location(444,33);
					pushFollow(FOLLOW_mediaType_in_mediaQuery1607);
					mediaType();
					state._fsp--;
					if (state.failed) return;dbg.location(444,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:43: ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(98);

					loop98:
					while (true) {
						int alt98=2;
						try { dbg.enterDecision(98, decisionCanBacktrack[98]);

						int LA98_0 = input.LA(1);
						if ( (LA98_0==COMMENT||LA98_0==NL||LA98_0==WS) ) {
							int LA98_1 = input.LA(2);
							if ( (synpred11_Css3()) ) {
								alt98=1;
							}

						}
						else if ( (LA98_0==IDENT) ) {
							int LA98_18 = input.LA(2);
							if ( ((synpred11_Css3()&&evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")"))) ) {
								alt98=1;
							}

						}

						} finally {dbg.exitDecision(98);}

						switch (alt98) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:44: ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(444,60);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:60: ( ws )?
							int alt96=2;
							try { dbg.enterSubRule(96);
							try { dbg.enterDecision(96, decisionCanBacktrack[96]);

							int LA96_0 = input.LA(1);
							if ( (LA96_0==COMMENT||LA96_0==NL||LA96_0==WS) ) {
								alt96=1;
							}
							} finally {dbg.exitDecision(96);}

							switch (alt96) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:60: ws
									{
									dbg.location(444,60);
									pushFollow(FOLLOW_ws_in_mediaQuery1618);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(96);}
							dbg.location(444,64);
							pushFollow(FOLLOW_key_and_in_mediaQuery1621);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(444,72);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:72: ( ws )?
							int alt97=2;
							try { dbg.enterSubRule(97);
							try { dbg.enterDecision(97, decisionCanBacktrack[97]);

							int LA97_0 = input.LA(1);
							if ( (LA97_0==COMMENT||LA97_0==NL||LA97_0==WS) ) {
								alt97=1;
							}
							} finally {dbg.exitDecision(97);}

							switch (alt97) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:72: ws
									{
									dbg.location(444,72);
									pushFollow(FOLLOW_ws_in_mediaQuery1623);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(97);}
							dbg.location(444,76);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1626);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop98;
						}
					}
					} finally {dbg.exitSubRule(98);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:7: mediaExpression ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(445,7);
					pushFollow(FOLLOW_mediaExpression_in_mediaQuery1637);
					mediaExpression();
					state._fsp--;
					if (state.failed) return;dbg.location(445,23);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:23: ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(101);

					loop101:
					while (true) {
						int alt101=2;
						try { dbg.enterDecision(101, decisionCanBacktrack[101]);

						int LA101_0 = input.LA(1);
						if ( (LA101_0==COMMENT||LA101_0==NL||LA101_0==WS) ) {
							int LA101_1 = input.LA(2);
							if ( (synpred12_Css3()) ) {
								alt101=1;
							}

						}
						else if ( (LA101_0==IDENT) ) {
							int LA101_18 = input.LA(2);
							if ( ((evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")&&synpred12_Css3())) ) {
								alt101=1;
							}

						}

						} finally {dbg.exitDecision(101);}

						switch (alt101) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:24: ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(445,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:40: ( ws )?
							int alt99=2;
							try { dbg.enterSubRule(99);
							try { dbg.enterDecision(99, decisionCanBacktrack[99]);

							int LA99_0 = input.LA(1);
							if ( (LA99_0==COMMENT||LA99_0==NL||LA99_0==WS) ) {
								alt99=1;
							}
							} finally {dbg.exitDecision(99);}

							switch (alt99) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:40: ws
									{
									dbg.location(445,40);
									pushFollow(FOLLOW_ws_in_mediaQuery1648);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(99);}
							dbg.location(445,44);
							pushFollow(FOLLOW_key_and_in_mediaQuery1651);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(445,52);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:52: ( ws )?
							int alt100=2;
							try { dbg.enterSubRule(100);
							try { dbg.enterDecision(100, decisionCanBacktrack[100]);

							int LA100_0 = input.LA(1);
							if ( (LA100_0==COMMENT||LA100_0==NL||LA100_0==WS) ) {
								alt100=1;
							}
							} finally {dbg.exitDecision(100);}

							switch (alt100) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:52: ws
									{
									dbg.location(445,52);
									pushFollow(FOLLOW_ws_in_mediaQuery1653);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(100);}
							dbg.location(445,56);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1656);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop101;
						}
					}
					} finally {dbg.exitSubRule(101);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:446:7: {...}? cp_variable
					{
					dbg.location(446,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaQuery", "isLessSource()");
					}dbg.location(446,25);
					pushFollow(FOLLOW_cp_variable_in_mediaQuery1669);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(447, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQuery"



	// $ANTLR start "mediaQueryOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:449:1: mediaQueryOperator : ( key_only | NOT );
	public final void mediaQueryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(449, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:3: ( key_only | NOT )
			int alt103=2;
			try { dbg.enterDecision(103, decisionCanBacktrack[103]);

			int LA103_0 = input.LA(1);
			if ( (LA103_0==IDENT) ) {
				alt103=1;
			}
			else if ( (LA103_0==NOT) ) {
				alt103=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 103, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(103);}

			switch (alt103) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:5: key_only
					{
					dbg.location(450,5);
					pushFollow(FOLLOW_key_only_in_mediaQueryOperator1681);
					key_only();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:16: NOT
					{
					dbg.location(450,16);
					match(input,NOT,FOLLOW_NOT_in_mediaQueryOperator1685); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(451, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryOperator"



	// $ANTLR start "mediaType"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:1: mediaType : ( IDENT | GEN |{...}? sass_interpolation_expression_var );
	public final void mediaType() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(453, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:2: ( IDENT | GEN |{...}? sass_interpolation_expression_var )
			int alt104=3;
			try { dbg.enterDecision(104, decisionCanBacktrack[104]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt104=1;
				}
				break;
			case GEN:
				{
				alt104=2;
				}
				break;
			case HASH_SYMBOL:
				{
				alt104=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 104, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(104);}

			switch (alt104) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:4: IDENT
					{
					dbg.location(454,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaType1697); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:12: GEN
					{
					dbg.location(454,12);
					match(input,GEN,FOLLOW_GEN_in_mediaType1701); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:18: {...}? sass_interpolation_expression_var
					{
					dbg.location(454,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaType", "isCssPreprocessorSource()");
					}dbg.location(454,47);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaType1707);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(455, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaType"



	// $ANTLR start "mediaExpression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:457:1: mediaExpression : ( ( LPAREN )=> ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ) | ( HASH )=>{...}? sass_interpolation_expression_var );
	public final void mediaExpression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(457, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:5: ( ( LPAREN )=> ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ) | ( HASH )=>{...}? sass_interpolation_expression_var )
			int alt108=2;
			try { dbg.enterDecision(108, decisionCanBacktrack[108]);

			int LA108_0 = input.LA(1);
			if ( (LA108_0==LPAREN) && (synpred13_Css3())) {
				alt108=1;
			}
			else if ( (LA108_0==HASH_SYMBOL) && (synpred14_Css3())) {
				alt108=2;
			}

			} finally {dbg.exitDecision(108);}

			switch (alt108) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: ( LPAREN )=> ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
					{
					dbg.location(459,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:17: ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:18: LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN
					{
					dbg.location(459,18);
					match(input,LPAREN,FOLLOW_LPAREN_in_mediaExpression1732); if (state.failed) return;dbg.location(459,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:25: ( ws )?
					int alt105=2;
					try { dbg.enterSubRule(105);
					try { dbg.enterDecision(105, decisionCanBacktrack[105]);

					int LA105_0 = input.LA(1);
					if ( (LA105_0==COMMENT||LA105_0==NL||LA105_0==WS) ) {
						alt105=1;
					}
					} finally {dbg.exitDecision(105);}

					switch (alt105) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:25: ws
							{
							dbg.location(459,25);
							pushFollow(FOLLOW_ws_in_mediaExpression1734);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(105);}
					dbg.location(459,29);
					pushFollow(FOLLOW_mediaFeature_in_mediaExpression1737);
					mediaFeature();
					state._fsp--;
					if (state.failed) return;dbg.location(459,42);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:42: ( mediaFeatureValue )?
					int alt106=2;
					try { dbg.enterSubRule(106);
					try { dbg.enterDecision(106, decisionCanBacktrack[106]);

					try {
						isCyclicDecision = true;
						alt106 = dfa106.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(106);}

					switch (alt106) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:42: mediaFeatureValue
							{
							dbg.location(459,42);
							pushFollow(FOLLOW_mediaFeatureValue_in_mediaExpression1739);
							mediaFeatureValue();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(106);}
					dbg.location(459,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:61: ( ws )?
					int alt107=2;
					try { dbg.enterSubRule(107);
					try { dbg.enterDecision(107, decisionCanBacktrack[107]);

					int LA107_0 = input.LA(1);
					if ( (LA107_0==COMMENT||LA107_0==NL||LA107_0==WS) ) {
						alt107=1;
					}
					} finally {dbg.exitDecision(107);}

					switch (alt107) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:61: ws
							{
							dbg.location(459,61);
							pushFollow(FOLLOW_ws_in_mediaExpression1742);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(107);}
					dbg.location(459,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_mediaExpression1745); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:7: ( HASH )=>{...}? sass_interpolation_expression_var
					{
					dbg.location(460,17);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaExpression", "isCssPreprocessorSource()");
					}dbg.location(460,46);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaExpression1762);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(461, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaExpression"



	// $ANTLR start "mediaFeatureValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:463:1: mediaFeatureValue : ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) ;
	public final void mediaFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(463, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:464:5: ( ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:5: ( ws )? COLON ( ws )? ({...}? cp_expression | expression )
			{
			dbg.location(465,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:5: ( ws )?
			int alt109=2;
			try { dbg.enterSubRule(109);
			try { dbg.enterDecision(109, decisionCanBacktrack[109]);

			int LA109_0 = input.LA(1);
			if ( (LA109_0==COMMENT||LA109_0==NL||LA109_0==WS) ) {
				alt109=1;
			}
			} finally {dbg.exitDecision(109);}

			switch (alt109) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:5: ws
					{
					dbg.location(465,5);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1783);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(109);}
			dbg.location(465,9);
			match(input,COLON,FOLLOW_COLON_in_mediaFeatureValue1786); if (state.failed) return;dbg.location(465,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:15: ( ws )?
			int alt110=2;
			try { dbg.enterSubRule(110);
			try { dbg.enterDecision(110, decisionCanBacktrack[110]);

			int LA110_0 = input.LA(1);
			if ( (LA110_0==COMMENT||LA110_0==NL||LA110_0==WS) ) {
				alt110=1;
			}
			} finally {dbg.exitDecision(110);}

			switch (alt110) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:15: ws
					{
					dbg.location(465,15);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1788);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(110);}
			dbg.location(466,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:466:5: ({...}? cp_expression | expression )
			int alt111=2;
			try { dbg.enterSubRule(111);
			try { dbg.enterDecision(111, decisionCanBacktrack[111]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt111=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA111_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case IDENT:
				{
				int LA111_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case VARIABLE:
				{
				int LA111_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case LBRACKET:
				{
				int LA111_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA111_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case URANGE:
				{
				int LA111_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA111_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA111_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case EMS:
				{
				int LA111_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case REM:
				{
				int LA111_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case EXS:
				{
				int LA111_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA111_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case TIME:
				{
				int LA111_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case FREQ:
				{
				int LA111_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA111_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA111_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case STRING:
				{
				int LA111_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case TILDE:
				{
				int LA111_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA111_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case GEN:
				{
				int LA111_22 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case URI:
				{
				int LA111_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case HASH:
				{
				int LA111_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA111_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt111=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA111_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt111=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA111_27 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt111=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA111_28 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt111=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA111_29 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt111=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA111_30 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 111, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(111);}

			switch (alt111) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:9: {...}? cp_expression
					{
					dbg.location(467,9);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeatureValue", "isCssPreprocessorSource()");
					}dbg.location(467,38);
					pushFollow(FOLLOW_cp_expression_in_mediaFeatureValue1807);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:469:9: expression
					{
					dbg.location(469,9);
					pushFollow(FOLLOW_expression_in_mediaFeatureValue1827);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(111);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(471, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeatureValue"



	// $ANTLR start "mediaFeature"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:1: mediaFeature : ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void mediaFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(473, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:2: ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt113=3;
			try { dbg.enterDecision(113, decisionCanBacktrack[113]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA113_1 = input.LA(2);
				if ( (LA113_1==DOT) ) {
					alt113=3;
				}
				else if ( (LA113_1==COLON||LA113_1==COMMENT||LA113_1==NL||LA113_1==RPAREN||LA113_1==WS) ) {
					alt113=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 113, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				alt113=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt113=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 113, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(113);}

			switch (alt113) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:4: IDENT
					{
					dbg.location(474,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaFeature1847); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:12: GEN
					{
					dbg.location(474,12);
					match(input,GEN,FOLLOW_GEN_in_mediaFeature1851); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:18: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(474,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeature", "isCssPreprocessorSource()");
					}dbg.location(474,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:47: ( cp_variable | sass_interpolation_expression_var )
					int alt112=2;
					try { dbg.enterSubRule(112);
					try { dbg.enterDecision(112, decisionCanBacktrack[112]);

					int LA112_0 = input.LA(1);
					if ( (LA112_0==AT_IDENT||(LA112_0 >= BOTTOMCENTER_SYM && LA112_0 <= BOTTOMRIGHT_SYM)||LA112_0==CHARSET_SYM||LA112_0==COUNTER_STYLE_SYM||LA112_0==FONT_FACE_SYM||LA112_0==IDENT||LA112_0==IMPORT_SYM||(LA112_0 >= LEFTBOTTOM_SYM && LA112_0 <= LEFTTOP_SYM)||LA112_0==MEDIA_SYM||LA112_0==MOZ_DOCUMENT_SYM||LA112_0==NAMESPACE_SYM||LA112_0==PAGE_SYM||(LA112_0 >= RIGHTBOTTOM_SYM && LA112_0 <= RIGHTTOP_SYM)||(LA112_0 >= SASS_AT_ROOT && LA112_0 <= SASS_DEBUG)||(LA112_0 >= SASS_EACH && LA112_0 <= SASS_ELSE)||LA112_0==SASS_EXTEND||(LA112_0 >= SASS_FOR && LA112_0 <= SASS_FUNCTION)||(LA112_0 >= SASS_IF && LA112_0 <= SASS_MIXIN)||(LA112_0 >= SASS_RETURN && LA112_0 <= SASS_WHILE)||(LA112_0 >= TOPCENTER_SYM && LA112_0 <= TOPRIGHT_SYM)||LA112_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt112=1;
					}
					else if ( (LA112_0==HASH_SYMBOL) ) {
						alt112=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 112, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(112);}

					switch (alt112) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:49: cp_variable
							{
							dbg.location(474,49);
							pushFollow(FOLLOW_cp_variable_in_mediaFeature1859);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:63: sass_interpolation_expression_var
							{
							dbg.location(474,63);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaFeature1863);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(112);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(475, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeature"



	// $ANTLR start "body"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:477:2: body : ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void body() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "body");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(477, 1);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:478:5: ( ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(479,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt118=0;
			try { dbg.enterSubRule(118);

			loop118:
			while (true) {
				int alt118=3;
				try { dbg.enterDecision(118, decisionCanBacktrack[118]);

				int LA118_0 = input.LA(1);
				if ( ((LA118_0 >= AT_IDENT && LA118_0 <= AT_SIGN)||(LA118_0 >= BOTTOMCENTER_SYM && LA118_0 <= BOTTOMRIGHT_SYM)||(LA118_0 >= CHARSET_SYM && LA118_0 <= COLON)||LA118_0==CONTAINER_SYM||LA118_0==COUNTER_STYLE_SYM||(LA118_0 >= DCOLON && LA118_0 <= DOT)||LA118_0==FONT_FACE_SYM||(LA118_0 >= GEN && LA118_0 <= GREATER)||(LA118_0 >= HASH && LA118_0 <= HASH_SYMBOL)||LA118_0==IDENT||LA118_0==IMPORT_SYM||LA118_0==LAYER_SYM||(LA118_0 >= LBRACKET && LA118_0 <= LEFTTOP_SYM)||LA118_0==LESS_AND||(LA118_0 >= MEDIA_SYM && LA118_0 <= MOZ_DOCUMENT_SYM)||LA118_0==NAMESPACE_SYM||LA118_0==PAGE_SYM||(LA118_0 >= PIPE && LA118_0 <= PLUS)||(LA118_0 >= RIGHTBOTTOM_SYM && LA118_0 <= RIGHTTOP_SYM)||(LA118_0 >= SASS_AT_ROOT && LA118_0 <= SASS_DEBUG)||(LA118_0 >= SASS_EACH && LA118_0 <= SASS_ELSE)||(LA118_0 >= SASS_EXTEND && LA118_0 <= SASS_FUNCTION)||(LA118_0 >= SASS_IF && LA118_0 <= SASS_MIXIN)||(LA118_0 >= SASS_RETURN && LA118_0 <= SASS_WHILE)||LA118_0==STAR||LA118_0==SUPPORTS_SYM||LA118_0==TILDE||(LA118_0 >= TOPCENTER_SYM && LA118_0 <= TOPRIGHT_SYM)||LA118_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt118=1;
				}
				else if ( (LA118_0==SEMI) ) {
					alt118=2;
				}

				} finally {dbg.exitDecision(118);}

				switch (alt118) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(480,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:12: bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(480,12);
					pushFollow(FOLLOW_bodyItem_in_body1897);
					bodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(480,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt115=2;
					try { dbg.enterSubRule(115);
					try { dbg.enterDecision(115, decisionCanBacktrack[115]);

					try {
						isCyclicDecision = true;
						alt115 = dfa115.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(115);}

					switch (alt115) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:22: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(480,34);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:34: ( ws )?
							int alt114=2;
							try { dbg.enterSubRule(114);
							try { dbg.enterDecision(114, decisionCanBacktrack[114]);

							int LA114_0 = input.LA(1);
							if ( (LA114_0==COMMENT||LA114_0==NL||LA114_0==WS) ) {
								alt114=1;
							}
							} finally {dbg.exitDecision(114);}

							switch (alt114) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:34: ws
									{
									dbg.location(480,34);
									pushFollow(FOLLOW_ws_in_body1907);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(114);}
							dbg.location(480,38);
							match(input,SEMI,FOLLOW_SEMI_in_body1910); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(115);}
					dbg.location(480,45);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:45: ( ws )?
					int alt116=2;
					try { dbg.enterSubRule(116);
					try { dbg.enterDecision(116, decisionCanBacktrack[116]);

					int LA116_0 = input.LA(1);
					if ( (LA116_0==COMMENT||LA116_0==NL||LA116_0==WS) ) {
						alt116=1;
					}
					} finally {dbg.exitDecision(116);}

					switch (alt116) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:45: ws
							{
							dbg.location(480,45);
							pushFollow(FOLLOW_ws_in_body1914);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(116);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:10: ( SEMI ( ws )? )
					{
					dbg.location(482,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:12: SEMI ( ws )?
					{
					dbg.location(482,12);
					match(input,SEMI,FOLLOW_SEMI_in_body1941); if (state.failed) return;dbg.location(482,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:17: ( ws )?
					int alt117=2;
					try { dbg.enterSubRule(117);
					try { dbg.enterDecision(117, decisionCanBacktrack[117]);

					int LA117_0 = input.LA(1);
					if ( (LA117_0==COMMENT||LA117_0==NL||LA117_0==WS) ) {
						alt117=1;
					}
					} finally {dbg.exitDecision(117);}

					switch (alt117) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:17: ws
							{
							dbg.location(482,17);
							pushFollow(FOLLOW_ws_in_body1943);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(117);}

					}

					}
					break;

				default :
					if ( cnt118 >= 1 ) break loop118;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(118, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt118++;
			}
			} finally {dbg.exitSubRule(118);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(484, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "body");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "body"



	// $ANTLR start "bodyItem"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:1: bodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration );
	public final void bodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(486, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration )
			int alt119=11;
			try { dbg.enterDecision(119, decisionCanBacktrack[119]);

			switch ( input.LA(1) ) {
			case LESS_AND:
				{
				int LA119_1 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt119=1;
				}
				else if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=3;
				}
				else if ( (true) ) {
					alt119=4;
				}

				}
				break;
			case DOT:
				{
				int LA119_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt119=1;
				}
				else if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=3;
				}
				else if ( (true) ) {
					alt119=4;
				}

				}
				break;
			case HASH:
				{
				int LA119_3 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt119=1;
				}
				else if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=3;
				}
				else if ( (true) ) {
					alt119=4;
				}

				}
				break;
			case SASS_MIXIN:
				{
				int LA119_4 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred16_Css3())) ) {
					alt119=1;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
				{
				int LA119_5 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=3;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case SASS_INCLUDE:
				{
				int LA119_6 = input.LA(2);
				if ( (((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=2;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=3;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_AT_ROOT:
				{
				int LA119_7 = input.LA(2);
				if ( (true) ) {
					alt119=4;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case COLON:
			case DCOLON:
			case DIMENSION:
			case GEN:
			case GREATER:
			case HASH_SYMBOL:
			case LBRACKET:
			case MINUS:
			case PIPE:
			case PLUS:
			case SASS_EXTEND_ONLY_SELECTOR:
			case STAR:
			case TILDE:
				{
				alt119=4;
				}
				break;
			case IDENT:
				{
				int LA119_14 = input.LA(2);
				if ( (true) ) {
					alt119=4;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case MEDIA_SYM:
				{
				int LA119_20 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case SASS_VAR:
				{
				int LA119_21 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PAGE_SYM:
				{
				int LA119_22 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case COUNTER_STYLE_SYM:
				{
				int LA119_23 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case FONT_FACE_SYM:
				{
				int LA119_24 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case MOZ_DOCUMENT_SYM:
				{
				int LA119_25 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case CONTAINER_SYM:
			case LAYER_SYM:
			case SUPPORTS_SYM:
				{
				alt119=7;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA119_27 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case IMPORT_SYM:
				{
				int LA119_28 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt119=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_DEBUG:
			case SASS_WARN:
				{
				int LA119_31 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_IF:
				{
				int LA119_32 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FOR:
				{
				int LA119_33 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_EACH:
				{
				int LA119_34 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_WHILE:
				{
				int LA119_35 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FUNCTION:
				{
				int LA119_36 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case NAMESPACE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_CONTENT:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FORWARD:
			case SASS_RETURN:
			case SASS_USE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
				{
				int LA119_37 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 37, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 119, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(119);}

			switch (alt119) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(488,107);
					pushFollow(FOLLOW_cp_mixin_declaration_in_bodyItem2023);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:11: ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call
					{
					dbg.location(490,38);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isLessSource()");
					}dbg.location(490,56);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem2056);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:11: ( cp_mixin_call )=>{...}? cp_mixin_call
					{
					dbg.location(491,29);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(491,47);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem2075);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:492:8: rule
					{
					dbg.location(492,8);
					pushFollow(FOLLOW_rule_in_bodyItem2084);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:11: ( cp_variable ( ws )? COLON )=> cp_variable_declaration
					{
					dbg.location(493,37);
					pushFollow(FOLLOW_cp_variable_declaration_in_bodyItem2106);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:494:11: ( sass_map )=> sass_map
					{
					dbg.location(494,24);
					pushFollow(FOLLOW_sass_map_in_bodyItem2123);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:495:11: at_rule
					{
					dbg.location(495,11);
					pushFollow(FOLLOW_at_rule_in_bodyItem2135);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:497:11: {...}? importItem
					{
					dbg.location(497,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isCssPreprocessorSource()");
					}dbg.location(497,40);
					pushFollow(FOLLOW_importItem_in_bodyItem2158);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:498:11: {...}? sass_debug
					{
					dbg.location(498,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(498,29);
					pushFollow(FOLLOW_sass_debug_in_bodyItem2172);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:11: {...}? sass_control
					{
					dbg.location(499,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(499,29);
					pushFollow(FOLLOW_sass_control_in_bodyItem2186);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:500:11: {...}? sass_function_declaration
					{
					dbg.location(500,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(500,29);
					pushFollow(FOLLOW_sass_function_declaration_in_bodyItem2200);
					sass_function_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(NL));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(501, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bodyItem"



	// $ANTLR start "supportsAtRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:506:1: supportsAtRule : SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void supportsAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(506, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:507:2: ( SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:2: SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(508,2);
			match(input,SUPPORTS_SYM,FOLLOW_SUPPORTS_SYM_in_supportsAtRule2220); if (state.failed) return;dbg.location(508,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:15: ( ws )?
			int alt120=2;
			try { dbg.enterSubRule(120);
			try { dbg.enterDecision(120, decisionCanBacktrack[120]);

			int LA120_0 = input.LA(1);
			if ( (LA120_0==COMMENT||LA120_0==NL||LA120_0==WS) ) {
				alt120=1;
			}
			} finally {dbg.exitDecision(120);}

			switch (alt120) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:15: ws
					{
					dbg.location(508,15);
					pushFollow(FOLLOW_ws_in_supportsAtRule2222);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(120);}
			dbg.location(508,19);
			pushFollow(FOLLOW_supportsCondition_in_supportsAtRule2225);
			supportsCondition();
			state._fsp--;
			if (state.failed) return;dbg.location(508,37);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:37: ( ws )?
			int alt121=2;
			try { dbg.enterSubRule(121);
			try { dbg.enterDecision(121, decisionCanBacktrack[121]);

			int LA121_0 = input.LA(1);
			if ( (LA121_0==COMMENT||LA121_0==NL||LA121_0==WS) ) {
				alt121=1;
			}
			} finally {dbg.exitDecision(121);}

			switch (alt121) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:37: ws
					{
					dbg.location(508,37);
					pushFollow(FOLLOW_ws_in_supportsAtRule2227);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(121);}
			dbg.location(508,41);
			match(input,LBRACE,FOLLOW_LBRACE_in_supportsAtRule2230); if (state.failed) return;dbg.location(508,48);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:48: ( ws )?
			int alt122=2;
			try { dbg.enterSubRule(122);
			try { dbg.enterDecision(122, decisionCanBacktrack[122]);

			int LA122_0 = input.LA(1);
			if ( (LA122_0==COMMENT||LA122_0==NL||LA122_0==WS) ) {
				alt122=1;
			}
			} finally {dbg.exitDecision(122);}

			switch (alt122) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:48: ws
					{
					dbg.location(508,48);
					pushFollow(FOLLOW_ws_in_supportsAtRule2232);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(122);}
			dbg.location(508,52);
			pushFollow(FOLLOW_syncToFollow_in_supportsAtRule2235);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(508,65);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:65: ( mediaBody )?
			int alt123=2;
			try { dbg.enterSubRule(123);
			try { dbg.enterDecision(123, decisionCanBacktrack[123]);

			int LA123_0 = input.LA(1);
			if ( ((LA123_0 >= AT_IDENT && LA123_0 <= AT_SIGN)||(LA123_0 >= BOTTOMCENTER_SYM && LA123_0 <= BOTTOMRIGHT_SYM)||(LA123_0 >= CHARSET_SYM && LA123_0 <= COLON)||LA123_0==COUNTER_STYLE_SYM||(LA123_0 >= DCOLON && LA123_0 <= DOT)||LA123_0==FONT_FACE_SYM||(LA123_0 >= GEN && LA123_0 <= GREATER)||(LA123_0 >= HASH && LA123_0 <= HASH_SYMBOL)||LA123_0==IDENT||LA123_0==IMPORT_SYM||(LA123_0 >= LBRACKET && LA123_0 <= LEFTTOP_SYM)||LA123_0==LESS_AND||(LA123_0 >= MEDIA_SYM && LA123_0 <= MOZ_DOCUMENT_SYM)||LA123_0==NAMESPACE_SYM||LA123_0==PAGE_SYM||(LA123_0 >= PIPE && LA123_0 <= PLUS)||(LA123_0 >= RIGHTBOTTOM_SYM && LA123_0 <= RIGHTTOP_SYM)||(LA123_0 >= SASS_AT_ROOT && LA123_0 <= SASS_DEBUG)||(LA123_0 >= SASS_EACH && LA123_0 <= SASS_ELSE)||(LA123_0 >= SASS_EXTEND && LA123_0 <= SASS_FUNCTION)||(LA123_0 >= SASS_IF && LA123_0 <= SASS_MIXIN)||(LA123_0 >= SASS_RETURN && LA123_0 <= SEMI)||LA123_0==STAR||LA123_0==SUPPORTS_SYM||LA123_0==TILDE||(LA123_0 >= TOPCENTER_SYM && LA123_0 <= TOPRIGHT_SYM)||LA123_0==VARIABLE||LA123_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt123=1;
			}
			} finally {dbg.exitDecision(123);}

			switch (alt123) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:65: mediaBody
					{
					dbg.location(508,65);
					pushFollow(FOLLOW_mediaBody_in_supportsAtRule2237);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(123);}
			dbg.location(508,76);
			match(input,RBRACE,FOLLOW_RBRACE_in_supportsAtRule2240); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(509, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsAtRule"



	// $ANTLR start "supportsCondition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:1: supportsCondition : ( NOT ws supportsInParens | supportsInParens ( ws supportsWithOperator )? );
	public final void supportsCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(512, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:2: ( NOT ws supportsInParens | supportsInParens ( ws supportsWithOperator )? )
			int alt125=2;
			try { dbg.enterDecision(125, decisionCanBacktrack[125]);

			int LA125_0 = input.LA(1);
			if ( (LA125_0==NOT) ) {
				alt125=1;
			}
			else if ( (LA125_0==IDENT||LA125_0==LPAREN) ) {
				alt125=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 125, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(125);}

			switch (alt125) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:514:2: NOT ws supportsInParens
					{
					dbg.location(514,2);
					match(input,NOT,FOLLOW_NOT_in_supportsCondition2253); if (state.failed) return;dbg.location(514,6);
					pushFollow(FOLLOW_ws_in_supportsCondition2255);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(514,9);
					pushFollow(FOLLOW_supportsInParens_in_supportsCondition2257);
					supportsInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:4: supportsInParens ( ws supportsWithOperator )?
					{
					dbg.location(515,4);
					pushFollow(FOLLOW_supportsInParens_in_supportsCondition2262);
					supportsInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(515,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:21: ( ws supportsWithOperator )?
					int alt124=2;
					try { dbg.enterSubRule(124);
					try { dbg.enterDecision(124, decisionCanBacktrack[124]);

					try {
						isCyclicDecision = true;
						alt124 = dfa124.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(124);}

					switch (alt124) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:22: ws supportsWithOperator
							{
							dbg.location(515,22);
							pushFollow(FOLLOW_ws_in_supportsCondition2265);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(515,25);
							pushFollow(FOLLOW_supportsWithOperator_in_supportsCondition2267);
							supportsWithOperator();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(124);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(516, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsCondition"



	// $ANTLR start "supportsWithOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:1: supportsWithOperator : ( supportsConjunction ( ws supportsConjunction )* | supportsDisjunction ( ws supportsDisjunction )* );
	public final void supportsWithOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsWithOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(518, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:519:9: ( supportsConjunction ( ws supportsConjunction )* | supportsDisjunction ( ws supportsDisjunction )* )
			int alt128=2;
			try { dbg.enterDecision(128, decisionCanBacktrack[128]);

			int LA128_0 = input.LA(1);
			if ( (LA128_0==IDENT) ) {
				int LA128_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt128=1;
				}
				else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt128=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 128, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 128, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(128);}

			switch (alt128) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:520:9: supportsConjunction ( ws supportsConjunction )*
					{
					dbg.location(520,9);
					pushFollow(FOLLOW_supportsConjunction_in_supportsWithOperator2295);
					supportsConjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(520,29);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:520:29: ( ws supportsConjunction )*
					try { dbg.enterSubRule(126);

					loop126:
					while (true) {
						int alt126=2;
						try { dbg.enterDecision(126, decisionCanBacktrack[126]);

						try {
							isCyclicDecision = true;
							alt126 = dfa126.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(126);}

						switch (alt126) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:520:30: ws supportsConjunction
							{
							dbg.location(520,30);
							pushFollow(FOLLOW_ws_in_supportsWithOperator2298);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(520,33);
							pushFollow(FOLLOW_supportsConjunction_in_supportsWithOperator2300);
							supportsConjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop126;
						}
					}
					} finally {dbg.exitSubRule(126);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:521:11: supportsDisjunction ( ws supportsDisjunction )*
					{
					dbg.location(521,11);
					pushFollow(FOLLOW_supportsDisjunction_in_supportsWithOperator2314);
					supportsDisjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(521,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:521:31: ( ws supportsDisjunction )*
					try { dbg.enterSubRule(127);

					loop127:
					while (true) {
						int alt127=2;
						try { dbg.enterDecision(127, decisionCanBacktrack[127]);

						try {
							isCyclicDecision = true;
							alt127 = dfa127.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(127);}

						switch (alt127) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:521:32: ws supportsDisjunction
							{
							dbg.location(521,32);
							pushFollow(FOLLOW_ws_in_supportsWithOperator2317);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(521,35);
							pushFollow(FOLLOW_supportsDisjunction_in_supportsWithOperator2319);
							supportsDisjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop127;
						}
					}
					} finally {dbg.exitSubRule(127);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(522, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsWithOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsWithOperator"



	// $ANTLR start "supportsConjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:1: supportsConjunction : ( key_and ws supportsInParens ) ;
	public final void supportsConjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsConjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(524, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:9: ( ( key_and ws supportsInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:11: ( key_and ws supportsInParens )
			{
			dbg.location(525,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:11: ( key_and ws supportsInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:12: key_and ws supportsInParens
			{
			dbg.location(525,12);
			pushFollow(FOLLOW_key_and_in_supportsConjunction2347);
			key_and();
			state._fsp--;
			if (state.failed) return;dbg.location(525,20);
			pushFollow(FOLLOW_ws_in_supportsConjunction2349);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(525,23);
			pushFollow(FOLLOW_supportsInParens_in_supportsConjunction2351);
			supportsInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(526, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsConjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsConjunction"



	// $ANTLR start "supportsDisjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:528:1: supportsDisjunction : ( key_or ws supportsInParens ) ;
	public final void supportsDisjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsDisjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(528, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:529:9: ( ( key_or ws supportsInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:529:11: ( key_or ws supportsInParens )
			{
			dbg.location(529,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:529:11: ( key_or ws supportsInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:529:12: key_or ws supportsInParens
			{
			dbg.location(529,12);
			pushFollow(FOLLOW_key_or_in_supportsDisjunction2378);
			key_or();
			state._fsp--;
			if (state.failed) return;dbg.location(529,19);
			pushFollow(FOLLOW_ws_in_supportsDisjunction2380);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(529,22);
			pushFollow(FOLLOW_supportsInParens_in_supportsDisjunction2382);
			supportsInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(530, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsDisjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsDisjunction"



	// $ANTLR start "supportsInParens"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:532:1: supportsInParens options {backtrack=true; } : ( LPAREN ( ws )? supportsCondition ( ws )? RPAREN | supportsFeature | function );
	public final void supportsInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(532, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:533:2: ( LPAREN ( ws )? supportsCondition ( ws )? RPAREN | supportsFeature | function )
			int alt131=3;
			try { dbg.enterDecision(131, decisionCanBacktrack[131]);

			int LA131_0 = input.LA(1);
			if ( (LA131_0==LPAREN) ) {
				int LA131_1 = input.LA(2);
				if ( (synpred21_Css3()) ) {
					alt131=1;
				}
				else if ( (synpred22_Css3()) ) {
					alt131=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 131, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA131_0==IDENT) ) {
				alt131=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 131, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(131);}

			switch (alt131) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:2: LPAREN ( ws )? supportsCondition ( ws )? RPAREN
					{
					dbg.location(534,2);
					match(input,LPAREN,FOLLOW_LPAREN_in_supportsInParens2409); if (state.failed) return;dbg.location(534,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:9: ( ws )?
					int alt129=2;
					try { dbg.enterSubRule(129);
					try { dbg.enterDecision(129, decisionCanBacktrack[129]);

					int LA129_0 = input.LA(1);
					if ( (LA129_0==COMMENT||LA129_0==NL||LA129_0==WS) ) {
						alt129=1;
					}
					} finally {dbg.exitDecision(129);}

					switch (alt129) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:9: ws
							{
							dbg.location(534,9);
							pushFollow(FOLLOW_ws_in_supportsInParens2411);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(129);}
					dbg.location(534,13);
					pushFollow(FOLLOW_supportsCondition_in_supportsInParens2414);
					supportsCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(534,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:31: ( ws )?
					int alt130=2;
					try { dbg.enterSubRule(130);
					try { dbg.enterDecision(130, decisionCanBacktrack[130]);

					int LA130_0 = input.LA(1);
					if ( (LA130_0==COMMENT||LA130_0==NL||LA130_0==WS) ) {
						alt130=1;
					}
					} finally {dbg.exitDecision(130);}

					switch (alt130) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:31: ws
							{
							dbg.location(534,31);
							pushFollow(FOLLOW_ws_in_supportsInParens2416);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(130);}
					dbg.location(534,35);
					match(input,RPAREN,FOLLOW_RPAREN_in_supportsInParens2419); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:535:4: supportsFeature
					{
					dbg.location(535,4);
					pushFollow(FOLLOW_supportsFeature_in_supportsInParens2424);
					supportsFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:536:11: function
					{
					dbg.location(536,11);
					pushFollow(FOLLOW_function_in_supportsInParens2436);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(539, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsInParens"



	// $ANTLR start "supportsFeature"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:1: supportsFeature : supportsDecl ;
	public final void supportsFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(541, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:542:2: ( supportsDecl )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:543:2: supportsDecl
			{
			dbg.location(543,2);
			pushFollow(FOLLOW_supportsDecl_in_supportsFeature2466);
			supportsDecl();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(544, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsFeature"



	// $ANTLR start "supportsDecl"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:1: supportsDecl : LPAREN ( ws )? declaration ( ws )? RPAREN ;
	public final void supportsDecl() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsDecl");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(546, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:547:2: ( LPAREN ( ws )? declaration ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:2: LPAREN ( ws )? declaration ( ws )? RPAREN
			{
			dbg.location(548,2);
			match(input,LPAREN,FOLLOW_LPAREN_in_supportsDecl2478); if (state.failed) return;dbg.location(548,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:9: ( ws )?
			int alt132=2;
			try { dbg.enterSubRule(132);
			try { dbg.enterDecision(132, decisionCanBacktrack[132]);

			int LA132_0 = input.LA(1);
			if ( (LA132_0==COMMENT||LA132_0==NL||LA132_0==WS) ) {
				alt132=1;
			}
			} finally {dbg.exitDecision(132);}

			switch (alt132) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:9: ws
					{
					dbg.location(548,9);
					pushFollow(FOLLOW_ws_in_supportsDecl2480);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(132);}
			dbg.location(548,13);
			pushFollow(FOLLOW_declaration_in_supportsDecl2483);
			declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(548,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:25: ( ws )?
			int alt133=2;
			try { dbg.enterSubRule(133);
			try { dbg.enterDecision(133, decisionCanBacktrack[133]);

			int LA133_0 = input.LA(1);
			if ( (LA133_0==COMMENT||LA133_0==NL||LA133_0==WS) ) {
				alt133=1;
			}
			} finally {dbg.exitDecision(133);}

			switch (alt133) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:25: ws
					{
					dbg.location(548,25);
					pushFollow(FOLLOW_ws_in_supportsDecl2485);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(133);}
			dbg.location(548,29);
			match(input,RPAREN,FOLLOW_RPAREN_in_supportsDecl2488); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(549, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsDecl");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsDecl"



	// $ANTLR start "containerAtRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:551:1: containerAtRule options {backtrack=true; } : ( ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )=> CONTAINER_SYM ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE | CONTAINER_SYM ws containerName ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE );
	public final void containerAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(551, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:552:2: ( ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )=> CONTAINER_SYM ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE | CONTAINER_SYM ws containerName ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE )
			int alt140=2;
			try { dbg.enterDecision(140, decisionCanBacktrack[140]);

			int LA140_0 = input.LA(1);
			if ( (LA140_0==CONTAINER_SYM) ) {
				int LA140_1 = input.LA(2);
				if ( (synpred23_Css3()) ) {
					alt140=1;
				}
				else if ( (true) ) {
					alt140=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 140, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(140);}

			switch (alt140) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:2: ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )=> CONTAINER_SYM ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE
					{
					dbg.location(553,54);
					match(input,CONTAINER_SYM,FOLLOW_CONTAINER_SYM_in_containerAtRule2522); if (state.failed) return;dbg.location(553,68);
					pushFollow(FOLLOW_ws_in_containerAtRule2524);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(553,71);
					pushFollow(FOLLOW_containerCondition_in_containerAtRule2526);
					containerCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(553,90);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:90: ( ws )?
					int alt134=2;
					try { dbg.enterSubRule(134);
					try { dbg.enterDecision(134, decisionCanBacktrack[134]);

					int LA134_0 = input.LA(1);
					if ( (LA134_0==COMMENT||LA134_0==NL||LA134_0==WS) ) {
						alt134=1;
					}
					} finally {dbg.exitDecision(134);}

					switch (alt134) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:90: ws
							{
							dbg.location(553,90);
							pushFollow(FOLLOW_ws_in_containerAtRule2528);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(134);}
					dbg.location(553,94);
					match(input,LBRACE,FOLLOW_LBRACE_in_containerAtRule2531); if (state.failed) return;dbg.location(553,101);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:101: ( ws )?
					int alt135=2;
					try { dbg.enterSubRule(135);
					try { dbg.enterDecision(135, decisionCanBacktrack[135]);

					int LA135_0 = input.LA(1);
					if ( (LA135_0==COMMENT||LA135_0==NL||LA135_0==WS) ) {
						alt135=1;
					}
					} finally {dbg.exitDecision(135);}

					switch (alt135) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:101: ws
							{
							dbg.location(553,101);
							pushFollow(FOLLOW_ws_in_containerAtRule2533);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(135);}
					dbg.location(553,105);
					pushFollow(FOLLOW_syncToFollow_in_containerAtRule2536);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(553,118);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:118: ( body )?
					int alt136=2;
					try { dbg.enterSubRule(136);
					try { dbg.enterDecision(136, decisionCanBacktrack[136]);

					int LA136_0 = input.LA(1);
					if ( ((LA136_0 >= AT_IDENT && LA136_0 <= AT_SIGN)||(LA136_0 >= BOTTOMCENTER_SYM && LA136_0 <= BOTTOMRIGHT_SYM)||(LA136_0 >= CHARSET_SYM && LA136_0 <= COLON)||LA136_0==CONTAINER_SYM||LA136_0==COUNTER_STYLE_SYM||(LA136_0 >= DCOLON && LA136_0 <= DOT)||LA136_0==FONT_FACE_SYM||(LA136_0 >= GEN && LA136_0 <= GREATER)||(LA136_0 >= HASH && LA136_0 <= HASH_SYMBOL)||LA136_0==IDENT||LA136_0==IMPORT_SYM||LA136_0==LAYER_SYM||(LA136_0 >= LBRACKET && LA136_0 <= LEFTTOP_SYM)||LA136_0==LESS_AND||(LA136_0 >= MEDIA_SYM && LA136_0 <= MOZ_DOCUMENT_SYM)||LA136_0==NAMESPACE_SYM||LA136_0==PAGE_SYM||(LA136_0 >= PIPE && LA136_0 <= PLUS)||(LA136_0 >= RIGHTBOTTOM_SYM && LA136_0 <= RIGHTTOP_SYM)||(LA136_0 >= SASS_AT_ROOT && LA136_0 <= SASS_DEBUG)||(LA136_0 >= SASS_EACH && LA136_0 <= SASS_ELSE)||(LA136_0 >= SASS_EXTEND && LA136_0 <= SASS_FUNCTION)||(LA136_0 >= SASS_IF && LA136_0 <= SASS_MIXIN)||(LA136_0 >= SASS_RETURN && LA136_0 <= SEMI)||LA136_0==STAR||LA136_0==SUPPORTS_SYM||LA136_0==TILDE||(LA136_0 >= TOPCENTER_SYM && LA136_0 <= TOPRIGHT_SYM)||LA136_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt136=1;
					}
					} finally {dbg.exitDecision(136);}

					switch (alt136) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:118: body
							{
							dbg.location(553,118);
							pushFollow(FOLLOW_body_in_containerAtRule2538);
							body();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(136);}
					dbg.location(553,124);
					match(input,RBRACE,FOLLOW_RBRACE_in_containerAtRule2541); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:4: CONTAINER_SYM ws containerName ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE
					{
					dbg.location(554,4);
					match(input,CONTAINER_SYM,FOLLOW_CONTAINER_SYM_in_containerAtRule2546); if (state.failed) return;dbg.location(554,18);
					pushFollow(FOLLOW_ws_in_containerAtRule2548);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(554,21);
					pushFollow(FOLLOW_containerName_in_containerAtRule2550);
					containerName();
					state._fsp--;
					if (state.failed) return;dbg.location(554,35);
					pushFollow(FOLLOW_ws_in_containerAtRule2552);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(554,38);
					pushFollow(FOLLOW_containerCondition_in_containerAtRule2554);
					containerCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(554,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:57: ( ws )?
					int alt137=2;
					try { dbg.enterSubRule(137);
					try { dbg.enterDecision(137, decisionCanBacktrack[137]);

					int LA137_0 = input.LA(1);
					if ( (LA137_0==COMMENT||LA137_0==NL||LA137_0==WS) ) {
						alt137=1;
					}
					} finally {dbg.exitDecision(137);}

					switch (alt137) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:57: ws
							{
							dbg.location(554,57);
							pushFollow(FOLLOW_ws_in_containerAtRule2556);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(137);}
					dbg.location(554,61);
					match(input,LBRACE,FOLLOW_LBRACE_in_containerAtRule2559); if (state.failed) return;dbg.location(554,68);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:68: ( ws )?
					int alt138=2;
					try { dbg.enterSubRule(138);
					try { dbg.enterDecision(138, decisionCanBacktrack[138]);

					int LA138_0 = input.LA(1);
					if ( (LA138_0==COMMENT||LA138_0==NL||LA138_0==WS) ) {
						alt138=1;
					}
					} finally {dbg.exitDecision(138);}

					switch (alt138) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:68: ws
							{
							dbg.location(554,68);
							pushFollow(FOLLOW_ws_in_containerAtRule2561);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(138);}
					dbg.location(554,72);
					pushFollow(FOLLOW_syncToFollow_in_containerAtRule2564);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(554,85);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:85: ( body )?
					int alt139=2;
					try { dbg.enterSubRule(139);
					try { dbg.enterDecision(139, decisionCanBacktrack[139]);

					int LA139_0 = input.LA(1);
					if ( ((LA139_0 >= AT_IDENT && LA139_0 <= AT_SIGN)||(LA139_0 >= BOTTOMCENTER_SYM && LA139_0 <= BOTTOMRIGHT_SYM)||(LA139_0 >= CHARSET_SYM && LA139_0 <= COLON)||LA139_0==CONTAINER_SYM||LA139_0==COUNTER_STYLE_SYM||(LA139_0 >= DCOLON && LA139_0 <= DOT)||LA139_0==FONT_FACE_SYM||(LA139_0 >= GEN && LA139_0 <= GREATER)||(LA139_0 >= HASH && LA139_0 <= HASH_SYMBOL)||LA139_0==IDENT||LA139_0==IMPORT_SYM||LA139_0==LAYER_SYM||(LA139_0 >= LBRACKET && LA139_0 <= LEFTTOP_SYM)||LA139_0==LESS_AND||(LA139_0 >= MEDIA_SYM && LA139_0 <= MOZ_DOCUMENT_SYM)||LA139_0==NAMESPACE_SYM||LA139_0==PAGE_SYM||(LA139_0 >= PIPE && LA139_0 <= PLUS)||(LA139_0 >= RIGHTBOTTOM_SYM && LA139_0 <= RIGHTTOP_SYM)||(LA139_0 >= SASS_AT_ROOT && LA139_0 <= SASS_DEBUG)||(LA139_0 >= SASS_EACH && LA139_0 <= SASS_ELSE)||(LA139_0 >= SASS_EXTEND && LA139_0 <= SASS_FUNCTION)||(LA139_0 >= SASS_IF && LA139_0 <= SASS_MIXIN)||(LA139_0 >= SASS_RETURN && LA139_0 <= SEMI)||LA139_0==STAR||LA139_0==SUPPORTS_SYM||LA139_0==TILDE||(LA139_0 >= TOPCENTER_SYM && LA139_0 <= TOPRIGHT_SYM)||LA139_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt139=1;
					}
					} finally {dbg.exitDecision(139);}

					switch (alt139) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:85: body
							{
							dbg.location(554,85);
							pushFollow(FOLLOW_body_in_containerAtRule2566);
							body();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(139);}
					dbg.location(554,91);
					match(input,RBRACE,FOLLOW_RBRACE_in_containerAtRule2569); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(555, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerAtRule"



	// $ANTLR start "containerCondition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:557:1: containerCondition : ( NOT ws containerQueryInParens | containerQueryInParens ( ws containerQueryWithOperator )? );
	public final void containerCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(557, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:558:9: ( NOT ws containerQueryInParens | containerQueryInParens ( ws containerQueryWithOperator )? )
			int alt142=2;
			try { dbg.enterDecision(142, decisionCanBacktrack[142]);

			int LA142_0 = input.LA(1);
			if ( (LA142_0==NOT) ) {
				alt142=1;
			}
			else if ( (LA142_0==IDENT||LA142_0==LPAREN) ) {
				alt142=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 142, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(142);}

			switch (alt142) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:9: NOT ws containerQueryInParens
					{
					dbg.location(559,9);
					match(input,NOT,FOLLOW_NOT_in_containerCondition2595); if (state.failed) return;dbg.location(559,13);
					pushFollow(FOLLOW_ws_in_containerCondition2597);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(559,16);
					pushFollow(FOLLOW_containerQueryInParens_in_containerCondition2599);
					containerQueryInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:11: containerQueryInParens ( ws containerQueryWithOperator )?
					{
					dbg.location(560,11);
					pushFollow(FOLLOW_containerQueryInParens_in_containerCondition2611);
					containerQueryInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(560,34);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:34: ( ws containerQueryWithOperator )?
					int alt141=2;
					try { dbg.enterSubRule(141);
					try { dbg.enterDecision(141, decisionCanBacktrack[141]);

					try {
						isCyclicDecision = true;
						alt141 = dfa141.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(141);}

					switch (alt141) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:35: ws containerQueryWithOperator
							{
							dbg.location(560,35);
							pushFollow(FOLLOW_ws_in_containerCondition2614);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(560,38);
							pushFollow(FOLLOW_containerQueryWithOperator_in_containerCondition2616);
							containerQueryWithOperator();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(141);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(561, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerCondition"



	// $ANTLR start "containerQueryWithOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:1: containerQueryWithOperator : ( containerQueryConjunction ( ws containerQueryConjunction )* | containerQueryDisjunction ( ws containerQueryDisjunction )* );
	public final void containerQueryWithOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryWithOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(563, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:9: ( containerQueryConjunction ( ws containerQueryConjunction )* | containerQueryDisjunction ( ws containerQueryDisjunction )* )
			int alt145=2;
			try { dbg.enterDecision(145, decisionCanBacktrack[145]);

			int LA145_0 = input.LA(1);
			if ( (LA145_0==IDENT) ) {
				int LA145_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt145=1;
				}
				else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt145=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 145, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 145, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(145);}

			switch (alt145) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:9: containerQueryConjunction ( ws containerQueryConjunction )*
					{
					dbg.location(565,9);
					pushFollow(FOLLOW_containerQueryConjunction_in_containerQueryWithOperator2651);
					containerQueryConjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(565,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:35: ( ws containerQueryConjunction )*
					try { dbg.enterSubRule(143);

					loop143:
					while (true) {
						int alt143=2;
						try { dbg.enterDecision(143, decisionCanBacktrack[143]);

						try {
							isCyclicDecision = true;
							alt143 = dfa143.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(143);}

						switch (alt143) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:36: ws containerQueryConjunction
							{
							dbg.location(565,36);
							pushFollow(FOLLOW_ws_in_containerQueryWithOperator2654);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(565,39);
							pushFollow(FOLLOW_containerQueryConjunction_in_containerQueryWithOperator2656);
							containerQueryConjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop143;
						}
					}
					} finally {dbg.exitSubRule(143);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:11: containerQueryDisjunction ( ws containerQueryDisjunction )*
					{
					dbg.location(566,11);
					pushFollow(FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator2670);
					containerQueryDisjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(566,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:37: ( ws containerQueryDisjunction )*
					try { dbg.enterSubRule(144);

					loop144:
					while (true) {
						int alt144=2;
						try { dbg.enterDecision(144, decisionCanBacktrack[144]);

						try {
							isCyclicDecision = true;
							alt144 = dfa144.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(144);}

						switch (alt144) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:38: ws containerQueryDisjunction
							{
							dbg.location(566,38);
							pushFollow(FOLLOW_ws_in_containerQueryWithOperator2673);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(566,41);
							pushFollow(FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator2675);
							containerQueryDisjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop144;
						}
					}
					} finally {dbg.exitSubRule(144);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(567, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryWithOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryWithOperator"



	// $ANTLR start "containerQueryConjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:1: containerQueryConjunction : ( key_and ws containerQueryInParens ) ;
	public final void containerQueryConjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryConjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(569, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:9: ( ( key_and ws containerQueryInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:11: ( key_and ws containerQueryInParens )
			{
			dbg.location(570,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:11: ( key_and ws containerQueryInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:12: key_and ws containerQueryInParens
			{
			dbg.location(570,12);
			pushFollow(FOLLOW_key_and_in_containerQueryConjunction2703);
			key_and();
			state._fsp--;
			if (state.failed) return;dbg.location(570,20);
			pushFollow(FOLLOW_ws_in_containerQueryConjunction2705);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(570,23);
			pushFollow(FOLLOW_containerQueryInParens_in_containerQueryConjunction2707);
			containerQueryInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(571, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryConjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryConjunction"



	// $ANTLR start "containerQueryDisjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:573:1: containerQueryDisjunction : ( key_or ws containerQueryInParens ) ;
	public final void containerQueryDisjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryDisjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(573, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:9: ( ( key_or ws containerQueryInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:11: ( key_or ws containerQueryInParens )
			{
			dbg.location(574,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:11: ( key_or ws containerQueryInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:12: key_or ws containerQueryInParens
			{
			dbg.location(574,12);
			pushFollow(FOLLOW_key_or_in_containerQueryDisjunction2734);
			key_or();
			state._fsp--;
			if (state.failed) return;dbg.location(574,19);
			pushFollow(FOLLOW_ws_in_containerQueryDisjunction2736);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(574,22);
			pushFollow(FOLLOW_containerQueryInParens_in_containerQueryDisjunction2738);
			containerQueryInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(575, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryDisjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryDisjunction"



	// $ANTLR start "containerQueryInParens"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:577:1: containerQueryInParens options {backtrack=true; } : ( LPAREN ( ws )? containerCondition ( ws )? RPAREN | sizeFeature |{...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN | function );
	public final void containerQueryInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(577, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:578:2: ( LPAREN ( ws )? containerCondition ( ws )? RPAREN | sizeFeature |{...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN | function )
			int alt151=4;
			try { dbg.enterDecision(151, decisionCanBacktrack[151]);

			int LA151_0 = input.LA(1);
			if ( (LA151_0==LPAREN) ) {
				int LA151_1 = input.LA(2);
				if ( (synpred24_Css3()) ) {
					alt151=1;
				}
				else if ( (synpred25_Css3()) ) {
					alt151=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 151, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA151_0==IDENT) ) {
				int LA151_2 = input.LA(2);
				if ( ((synpred26_Css3()&&evalPredicate(tokenNameEquals("style"),"tokenNameEquals(\"style\")"))) ) {
					alt151=3;
				}
				else if ( (true) ) {
					alt151=4;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 151, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(151);}

			switch (alt151) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:2: LPAREN ( ws )? containerCondition ( ws )? RPAREN
					{
					dbg.location(579,2);
					match(input,LPAREN,FOLLOW_LPAREN_in_containerQueryInParens2765); if (state.failed) return;dbg.location(579,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:9: ( ws )?
					int alt146=2;
					try { dbg.enterSubRule(146);
					try { dbg.enterDecision(146, decisionCanBacktrack[146]);

					int LA146_0 = input.LA(1);
					if ( (LA146_0==COMMENT||LA146_0==NL||LA146_0==WS) ) {
						alt146=1;
					}
					} finally {dbg.exitDecision(146);}

					switch (alt146) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:9: ws
							{
							dbg.location(579,9);
							pushFollow(FOLLOW_ws_in_containerQueryInParens2767);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(146);}
					dbg.location(579,13);
					pushFollow(FOLLOW_containerCondition_in_containerQueryInParens2770);
					containerCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(579,32);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:32: ( ws )?
					int alt147=2;
					try { dbg.enterSubRule(147);
					try { dbg.enterDecision(147, decisionCanBacktrack[147]);

					int LA147_0 = input.LA(1);
					if ( (LA147_0==COMMENT||LA147_0==NL||LA147_0==WS) ) {
						alt147=1;
					}
					} finally {dbg.exitDecision(147);}

					switch (alt147) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:32: ws
							{
							dbg.location(579,32);
							pushFollow(FOLLOW_ws_in_containerQueryInParens2772);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(147);}
					dbg.location(579,36);
					match(input,RPAREN,FOLLOW_RPAREN_in_containerQueryInParens2775); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:4: sizeFeature
					{
					dbg.location(580,4);
					pushFollow(FOLLOW_sizeFeature_in_containerQueryInParens2780);
					sizeFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:4: {...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN
					{
					dbg.location(581,4);
					if ( !(evalPredicate(tokenNameEquals("style"),"tokenNameEquals(\"style\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "containerQueryInParens", "tokenNameEquals(\"style\")");
					}dbg.location(581,32);
					match(input,IDENT,FOLLOW_IDENT_in_containerQueryInParens2787); if (state.failed) return;dbg.location(581,38);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:38: ( ws )?
					int alt148=2;
					try { dbg.enterSubRule(148);
					try { dbg.enterDecision(148, decisionCanBacktrack[148]);

					int LA148_0 = input.LA(1);
					if ( (LA148_0==COMMENT||LA148_0==NL||LA148_0==WS) ) {
						alt148=1;
					}
					} finally {dbg.exitDecision(148);}

					switch (alt148) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:38: ws
							{
							dbg.location(581,38);
							pushFollow(FOLLOW_ws_in_containerQueryInParens2789);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(148);}
					dbg.location(581,42);
					match(input,LPAREN,FOLLOW_LPAREN_in_containerQueryInParens2792); if (state.failed) return;dbg.location(581,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:49: ( ws )?
					int alt149=2;
					try { dbg.enterSubRule(149);
					try { dbg.enterDecision(149, decisionCanBacktrack[149]);

					int LA149_0 = input.LA(1);
					if ( (LA149_0==COMMENT||LA149_0==NL||LA149_0==WS) ) {
						alt149=1;
					}
					} finally {dbg.exitDecision(149);}

					switch (alt149) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:49: ws
							{
							dbg.location(581,49);
							pushFollow(FOLLOW_ws_in_containerQueryInParens2794);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(149);}
					dbg.location(581,53);
					pushFollow(FOLLOW_styleQuery_in_containerQueryInParens2797);
					styleQuery();
					state._fsp--;
					if (state.failed) return;dbg.location(581,64);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:64: ( ws )?
					int alt150=2;
					try { dbg.enterSubRule(150);
					try { dbg.enterDecision(150, decisionCanBacktrack[150]);

					int LA150_0 = input.LA(1);
					if ( (LA150_0==COMMENT||LA150_0==NL||LA150_0==WS) ) {
						alt150=1;
					}
					} finally {dbg.exitDecision(150);}

					switch (alt150) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:64: ws
							{
							dbg.location(581,64);
							pushFollow(FOLLOW_ws_in_containerQueryInParens2799);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(150);}
					dbg.location(581,68);
					match(input,RPAREN,FOLLOW_RPAREN_in_containerQueryInParens2802); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:11: function
					{
					dbg.location(582,11);
					pushFollow(FOLLOW_function_in_containerQueryInParens2814);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(585, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryInParens"



	// $ANTLR start "containerName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:587:1: containerName : IDENT ;
	public final void containerName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(587, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:9: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:11: IDENT
			{
			dbg.location(588,11);
			match(input,IDENT,FOLLOW_IDENT_in_containerName2850); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(589, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerName"



	// $ANTLR start "styleQuery"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:591:1: styleQuery : ( styleCondition | styleFeature );
	public final void styleQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(591, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:591:11: ( styleCondition | styleFeature )
			int alt152=2;
			try { dbg.enterDecision(152, decisionCanBacktrack[152]);

			switch ( input.LA(1) ) {
			case LPAREN:
			case NOT:
				{
				alt152=1;
				}
				break;
			case IDENT:
				{
				alt152=1;
				}
				break;
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COLON:
			case CONTAINER_SYM:
			case COUNTER_STYLE_SYM:
			case DCOLON:
			case DIMENSION:
			case DOT:
			case FONT_FACE_SYM:
			case GEN:
			case GREATER:
			case HASH:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LAYER_SYM:
			case LBRACKET:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LESS_AND:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case PIPE:
			case PLUS:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_ERROR:
			case SASS_EXTEND:
			case SASS_EXTEND_ONLY_SELECTOR:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case STAR:
			case SUPPORTS_SYM:
			case TILDE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case VARIABLE:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt152=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 152, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(152);}

			switch (alt152) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:592:9: styleCondition
					{
					dbg.location(592,9);
					pushFollow(FOLLOW_styleCondition_in_styleQuery2874);
					styleCondition();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:593:11: styleFeature
					{
					dbg.location(593,11);
					pushFollow(FOLLOW_styleFeature_in_styleQuery2886);
					styleFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(594, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleQuery"



	// $ANTLR start "styleCondition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:596:1: styleCondition : ( NOT ws styleInParens | styleInParens ( ws styleConditionWithOperator ) );
	public final void styleCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(596, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:596:15: ( NOT ws styleInParens | styleInParens ( ws styleConditionWithOperator ) )
			int alt153=2;
			try { dbg.enterDecision(153, decisionCanBacktrack[153]);

			int LA153_0 = input.LA(1);
			if ( (LA153_0==NOT) ) {
				alt153=1;
			}
			else if ( (LA153_0==IDENT||LA153_0==LPAREN) ) {
				alt153=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 153, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(153);}

			switch (alt153) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:597:9: NOT ws styleInParens
					{
					dbg.location(597,9);
					match(input,NOT,FOLLOW_NOT_in_styleCondition2910); if (state.failed) return;dbg.location(597,13);
					pushFollow(FOLLOW_ws_in_styleCondition2912);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(597,16);
					pushFollow(FOLLOW_styleInParens_in_styleCondition2914);
					styleInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:598:11: styleInParens ( ws styleConditionWithOperator )
					{
					dbg.location(598,11);
					pushFollow(FOLLOW_styleInParens_in_styleCondition2926);
					styleInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(598,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:598:25: ( ws styleConditionWithOperator )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:598:26: ws styleConditionWithOperator
					{
					dbg.location(598,26);
					pushFollow(FOLLOW_ws_in_styleCondition2929);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(598,29);
					pushFollow(FOLLOW_styleConditionWithOperator_in_styleCondition2931);
					styleConditionWithOperator();
					state._fsp--;
					if (state.failed) return;
					}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(599, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleCondition"



	// $ANTLR start "styleConditionWithOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:601:1: styleConditionWithOperator : ( styleQueryConjunction ( ws styleQueryConjunction )* | styleQueryDisjunction ( ws styleQueryDisjunction )* );
	public final void styleConditionWithOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleConditionWithOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(601, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:9: ( styleQueryConjunction ( ws styleQueryConjunction )* | styleQueryDisjunction ( ws styleQueryDisjunction )* )
			int alt156=2;
			try { dbg.enterDecision(156, decisionCanBacktrack[156]);

			int LA156_0 = input.LA(1);
			if ( (LA156_0==IDENT) ) {
				int LA156_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt156=1;
				}
				else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt156=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 156, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 156, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(156);}

			switch (alt156) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:603:9: styleQueryConjunction ( ws styleQueryConjunction )*
					{
					dbg.location(603,9);
					pushFollow(FOLLOW_styleQueryConjunction_in_styleConditionWithOperator2965);
					styleQueryConjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(603,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:603:31: ( ws styleQueryConjunction )*
					try { dbg.enterSubRule(154);

					loop154:
					while (true) {
						int alt154=2;
						try { dbg.enterDecision(154, decisionCanBacktrack[154]);

						try {
							isCyclicDecision = true;
							alt154 = dfa154.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(154);}

						switch (alt154) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:603:32: ws styleQueryConjunction
							{
							dbg.location(603,32);
							pushFollow(FOLLOW_ws_in_styleConditionWithOperator2968);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(603,35);
							pushFollow(FOLLOW_styleQueryConjunction_in_styleConditionWithOperator2970);
							styleQueryConjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop154;
						}
					}
					} finally {dbg.exitSubRule(154);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:604:11: styleQueryDisjunction ( ws styleQueryDisjunction )*
					{
					dbg.location(604,11);
					pushFollow(FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator2984);
					styleQueryDisjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(604,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:604:33: ( ws styleQueryDisjunction )*
					try { dbg.enterSubRule(155);

					loop155:
					while (true) {
						int alt155=2;
						try { dbg.enterDecision(155, decisionCanBacktrack[155]);

						try {
							isCyclicDecision = true;
							alt155 = dfa155.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(155);}

						switch (alt155) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:604:34: ws styleQueryDisjunction
							{
							dbg.location(604,34);
							pushFollow(FOLLOW_ws_in_styleConditionWithOperator2987);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(604,37);
							pushFollow(FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator2989);
							styleQueryDisjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop155;
						}
					}
					} finally {dbg.exitSubRule(155);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(605, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleConditionWithOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleConditionWithOperator"



	// $ANTLR start "styleQueryConjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:607:1: styleQueryConjunction : ( key_and ws styleInParens ) ;
	public final void styleQueryConjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleQueryConjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(607, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:608:9: ( ( key_and ws styleInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:608:11: ( key_and ws styleInParens )
			{
			dbg.location(608,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:608:11: ( key_and ws styleInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:608:12: key_and ws styleInParens
			{
			dbg.location(608,12);
			pushFollow(FOLLOW_key_and_in_styleQueryConjunction3017);
			key_and();
			state._fsp--;
			if (state.failed) return;dbg.location(608,20);
			pushFollow(FOLLOW_ws_in_styleQueryConjunction3019);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(608,23);
			pushFollow(FOLLOW_styleInParens_in_styleQueryConjunction3021);
			styleInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(609, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleQueryConjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleQueryConjunction"



	// $ANTLR start "styleQueryDisjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:611:1: styleQueryDisjunction : ( key_or ws styleInParens ) ;
	public final void styleQueryDisjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleQueryDisjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(611, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:9: ( ( key_or ws styleInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:11: ( key_or ws styleInParens )
			{
			dbg.location(612,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:11: ( key_or ws styleInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:12: key_or ws styleInParens
			{
			dbg.location(612,12);
			pushFollow(FOLLOW_key_or_in_styleQueryDisjunction3048);
			key_or();
			state._fsp--;
			if (state.failed) return;dbg.location(612,19);
			pushFollow(FOLLOW_ws_in_styleQueryDisjunction3050);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(612,22);
			pushFollow(FOLLOW_styleInParens_in_styleQueryDisjunction3052);
			styleInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(613, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleQueryDisjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleQueryDisjunction"



	// $ANTLR start "styleInParens"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:615:1: styleInParens options {backtrack=true; } : ( LPAREN ( ws )? styleCondition ( ws )? RPAREN | LPAREN ( ws )? styleFeature ( ws )? RPAREN | function );
	public final void styleInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(615, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:616:9: ( LPAREN ( ws )? styleCondition ( ws )? RPAREN | LPAREN ( ws )? styleFeature ( ws )? RPAREN | function )
			int alt161=3;
			try { dbg.enterDecision(161, decisionCanBacktrack[161]);

			int LA161_0 = input.LA(1);
			if ( (LA161_0==LPAREN) ) {
				int LA161_1 = input.LA(2);
				if ( (synpred27_Css3()) ) {
					alt161=1;
				}
				else if ( (synpred28_Css3()) ) {
					alt161=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 161, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA161_0==IDENT) ) {
				alt161=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 161, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(161);}

			switch (alt161) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:9: LPAREN ( ws )? styleCondition ( ws )? RPAREN
					{
					dbg.location(617,9);
					match(input,LPAREN,FOLLOW_LPAREN_in_styleInParens3093); if (state.failed) return;dbg.location(617,16);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:16: ( ws )?
					int alt157=2;
					try { dbg.enterSubRule(157);
					try { dbg.enterDecision(157, decisionCanBacktrack[157]);

					int LA157_0 = input.LA(1);
					if ( (LA157_0==COMMENT||LA157_0==NL||LA157_0==WS) ) {
						alt157=1;
					}
					} finally {dbg.exitDecision(157);}

					switch (alt157) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:16: ws
							{
							dbg.location(617,16);
							pushFollow(FOLLOW_ws_in_styleInParens3095);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(157);}
					dbg.location(617,20);
					pushFollow(FOLLOW_styleCondition_in_styleInParens3098);
					styleCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(617,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:35: ( ws )?
					int alt158=2;
					try { dbg.enterSubRule(158);
					try { dbg.enterDecision(158, decisionCanBacktrack[158]);

					int LA158_0 = input.LA(1);
					if ( (LA158_0==COMMENT||LA158_0==NL||LA158_0==WS) ) {
						alt158=1;
					}
					} finally {dbg.exitDecision(158);}

					switch (alt158) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:35: ws
							{
							dbg.location(617,35);
							pushFollow(FOLLOW_ws_in_styleInParens3100);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(158);}
					dbg.location(617,39);
					match(input,RPAREN,FOLLOW_RPAREN_in_styleInParens3103); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:11: LPAREN ( ws )? styleFeature ( ws )? RPAREN
					{
					dbg.location(618,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_styleInParens3115); if (state.failed) return;dbg.location(618,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:18: ( ws )?
					int alt159=2;
					try { dbg.enterSubRule(159);
					try { dbg.enterDecision(159, decisionCanBacktrack[159]);

					int LA159_0 = input.LA(1);
					if ( (LA159_0==COMMENT||LA159_0==NL||LA159_0==WS) ) {
						alt159=1;
					}
					} finally {dbg.exitDecision(159);}

					switch (alt159) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:18: ws
							{
							dbg.location(618,18);
							pushFollow(FOLLOW_ws_in_styleInParens3117);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(159);}
					dbg.location(618,22);
					pushFollow(FOLLOW_styleFeature_in_styleInParens3120);
					styleFeature();
					state._fsp--;
					if (state.failed) return;dbg.location(618,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:35: ( ws )?
					int alt160=2;
					try { dbg.enterSubRule(160);
					try { dbg.enterDecision(160, decisionCanBacktrack[160]);

					int LA160_0 = input.LA(1);
					if ( (LA160_0==COMMENT||LA160_0==NL||LA160_0==WS) ) {
						alt160=1;
					}
					} finally {dbg.exitDecision(160);}

					switch (alt160) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:35: ws
							{
							dbg.location(618,35);
							pushFollow(FOLLOW_ws_in_styleInParens3122);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(160);}
					dbg.location(618,39);
					match(input,RPAREN,FOLLOW_RPAREN_in_styleInParens3125); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:619:11: function
					{
					dbg.location(619,11);
					pushFollow(FOLLOW_function_in_styleInParens3137);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(622, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleInParens"



	// $ANTLR start "sizeFeature"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:1: sizeFeature options {backtrack=true; } : ( LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenGt ( ws )? RPAREN );
	public final void sizeFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(624, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:625:9: ( LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenGt ( ws )? RPAREN )
			int alt170=4;
			try { dbg.enterDecision(170, decisionCanBacktrack[170]);

			int LA170_0 = input.LA(1);
			if ( (LA170_0==LPAREN) ) {
				int LA170_1 = input.LA(2);
				if ( (synpred29_Css3()) ) {
					alt170=1;
				}
				else if ( (synpred30_Css3()) ) {
					alt170=2;
				}
				else if ( (synpred31_Css3()) ) {
					alt170=3;
				}
				else if ( (true) ) {
					alt170=4;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 170, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(170);}

			switch (alt170) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:9: LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN
					{
					dbg.location(626,9);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3195); if (state.failed) return;dbg.location(626,16);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:16: ( ws )?
					int alt162=2;
					try { dbg.enterSubRule(162);
					try { dbg.enterDecision(162, decisionCanBacktrack[162]);

					int LA162_0 = input.LA(1);
					if ( (LA162_0==COMMENT||LA162_0==NL||LA162_0==WS) ) {
						alt162=1;
					}
					} finally {dbg.exitDecision(162);}

					switch (alt162) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:16: ws
							{
							dbg.location(626,16);
							pushFollow(FOLLOW_ws_in_sizeFeature3197);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(162);}
					dbg.location(626,20);
					pushFollow(FOLLOW_sizeFeatureFixedValue_in_sizeFeature3200);
					sizeFeatureFixedValue();
					state._fsp--;
					if (state.failed) return;dbg.location(626,42);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:42: ( ws )?
					int alt163=2;
					try { dbg.enterSubRule(163);
					try { dbg.enterDecision(163, decisionCanBacktrack[163]);

					int LA163_0 = input.LA(1);
					if ( (LA163_0==COMMENT||LA163_0==NL||LA163_0==WS) ) {
						alt163=1;
					}
					} finally {dbg.exitDecision(163);}

					switch (alt163) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:42: ws
							{
							dbg.location(626,42);
							pushFollow(FOLLOW_ws_in_sizeFeature3202);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(163);}
					dbg.location(626,46);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3205); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:11: LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN
					{
					dbg.location(627,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3217); if (state.failed) return;dbg.location(627,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:18: ( ws )?
					int alt164=2;
					try { dbg.enterSubRule(164);
					try { dbg.enterDecision(164, decisionCanBacktrack[164]);

					int LA164_0 = input.LA(1);
					if ( (LA164_0==COMMENT||LA164_0==NL||LA164_0==WS) ) {
						alt164=1;
					}
					} finally {dbg.exitDecision(164);}

					switch (alt164) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:18: ws
							{
							dbg.location(627,18);
							pushFollow(FOLLOW_ws_in_sizeFeature3219);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(164);}
					dbg.location(627,22);
					pushFollow(FOLLOW_sizeFeatureRangeSingle_in_sizeFeature3222);
					sizeFeatureRangeSingle();
					state._fsp--;
					if (state.failed) return;dbg.location(627,45);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:45: ( ws )?
					int alt165=2;
					try { dbg.enterSubRule(165);
					try { dbg.enterDecision(165, decisionCanBacktrack[165]);

					int LA165_0 = input.LA(1);
					if ( (LA165_0==COMMENT||LA165_0==NL||LA165_0==WS) ) {
						alt165=1;
					}
					} finally {dbg.exitDecision(165);}

					switch (alt165) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:45: ws
							{
							dbg.location(627,45);
							pushFollow(FOLLOW_ws_in_sizeFeature3224);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(165);}
					dbg.location(627,49);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3227); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:11: LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN
					{
					dbg.location(628,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3239); if (state.failed) return;dbg.location(628,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:18: ( ws )?
					int alt166=2;
					try { dbg.enterSubRule(166);
					try { dbg.enterDecision(166, decisionCanBacktrack[166]);

					int LA166_0 = input.LA(1);
					if ( (LA166_0==COMMENT||LA166_0==NL||LA166_0==WS) ) {
						alt166=1;
					}
					} finally {dbg.exitDecision(166);}

					switch (alt166) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:18: ws
							{
							dbg.location(628,18);
							pushFollow(FOLLOW_ws_in_sizeFeature3241);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(166);}
					dbg.location(628,22);
					pushFollow(FOLLOW_sizeFeatureRangeBetweenLt_in_sizeFeature3244);
					sizeFeatureRangeBetweenLt();
					state._fsp--;
					if (state.failed) return;dbg.location(628,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:48: ( ws )?
					int alt167=2;
					try { dbg.enterSubRule(167);
					try { dbg.enterDecision(167, decisionCanBacktrack[167]);

					int LA167_0 = input.LA(1);
					if ( (LA167_0==COMMENT||LA167_0==NL||LA167_0==WS) ) {
						alt167=1;
					}
					} finally {dbg.exitDecision(167);}

					switch (alt167) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:48: ws
							{
							dbg.location(628,48);
							pushFollow(FOLLOW_ws_in_sizeFeature3246);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(167);}
					dbg.location(628,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3249); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:11: LPAREN ( ws )? sizeFeatureRangeBetweenGt ( ws )? RPAREN
					{
					dbg.location(629,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3261); if (state.failed) return;dbg.location(629,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:18: ( ws )?
					int alt168=2;
					try { dbg.enterSubRule(168);
					try { dbg.enterDecision(168, decisionCanBacktrack[168]);

					int LA168_0 = input.LA(1);
					if ( (LA168_0==COMMENT||LA168_0==NL||LA168_0==WS) ) {
						alt168=1;
					}
					} finally {dbg.exitDecision(168);}

					switch (alt168) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:18: ws
							{
							dbg.location(629,18);
							pushFollow(FOLLOW_ws_in_sizeFeature3263);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(168);}
					dbg.location(629,22);
					pushFollow(FOLLOW_sizeFeatureRangeBetweenGt_in_sizeFeature3266);
					sizeFeatureRangeBetweenGt();
					state._fsp--;
					if (state.failed) return;dbg.location(629,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:48: ( ws )?
					int alt169=2;
					try { dbg.enterSubRule(169);
					try { dbg.enterDecision(169, decisionCanBacktrack[169]);

					int LA169_0 = input.LA(1);
					if ( (LA169_0==COMMENT||LA169_0==NL||LA169_0==WS) ) {
						alt169=1;
					}
					} finally {dbg.exitDecision(169);}

					switch (alt169) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:48: ws
							{
							dbg.location(629,48);
							pushFollow(FOLLOW_ws_in_sizeFeature3268);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(169);}
					dbg.location(629,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3271); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(630, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeature"



	// $ANTLR start "sizeFeatureFixedValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:632:1: sizeFeatureFixedValue : sizeFeatureName ( ( ws )? COLON ( ws )? sizeFeatureValue )? ;
	public final void sizeFeatureFixedValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureFixedValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(632, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:633:9: ( sizeFeatureName ( ( ws )? COLON ( ws )? sizeFeatureValue )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:9: sizeFeatureName ( ( ws )? COLON ( ws )? sizeFeatureValue )?
			{
			dbg.location(634,9);
			pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureFixedValue3304);
			sizeFeatureName();
			state._fsp--;
			if (state.failed) return;dbg.location(634,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:25: ( ( ws )? COLON ( ws )? sizeFeatureValue )?
			int alt173=2;
			try { dbg.enterSubRule(173);
			try { dbg.enterDecision(173, decisionCanBacktrack[173]);

			try {
				isCyclicDecision = true;
				alt173 = dfa173.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(173);}

			switch (alt173) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:27: ( ws )? COLON ( ws )? sizeFeatureValue
					{
					dbg.location(634,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:27: ( ws )?
					int alt171=2;
					try { dbg.enterSubRule(171);
					try { dbg.enterDecision(171, decisionCanBacktrack[171]);

					int LA171_0 = input.LA(1);
					if ( (LA171_0==COMMENT||LA171_0==NL||LA171_0==WS) ) {
						alt171=1;
					}
					} finally {dbg.exitDecision(171);}

					switch (alt171) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:27: ws
							{
							dbg.location(634,27);
							pushFollow(FOLLOW_ws_in_sizeFeatureFixedValue3308);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(171);}
					dbg.location(634,31);
					match(input,COLON,FOLLOW_COLON_in_sizeFeatureFixedValue3311); if (state.failed) return;dbg.location(634,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:37: ( ws )?
					int alt172=2;
					try { dbg.enterSubRule(172);
					try { dbg.enterDecision(172, decisionCanBacktrack[172]);

					int LA172_0 = input.LA(1);
					if ( (LA172_0==COMMENT||LA172_0==NL||LA172_0==WS) ) {
						alt172=1;
					}
					} finally {dbg.exitDecision(172);}

					switch (alt172) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:37: ws
							{
							dbg.location(634,37);
							pushFollow(FOLLOW_ws_in_sizeFeatureFixedValue3313);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(172);}
					dbg.location(634,41);
					pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureFixedValue3316);
					sizeFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(173);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(635, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureFixedValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureFixedValue"



	// $ANTLR start "sizeFeatureRangeSingle"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:637:1: sizeFeatureRangeSingle : ( sizeFeatureName | sizeFeatureValue ) ( ws )? ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ ) ( ws )? ( sizeFeatureName | sizeFeatureValue ) ;
	public final void sizeFeatureRangeSingle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureRangeSingle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(637, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:9: ( ( sizeFeatureName | sizeFeatureValue ) ( ws )? ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ ) ( ws )? ( sizeFeatureName | sizeFeatureValue ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:9: ( sizeFeatureName | sizeFeatureValue ) ( ws )? ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ ) ( ws )? ( sizeFeatureName | sizeFeatureValue )
			{
			dbg.location(639,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:9: ( sizeFeatureName | sizeFeatureValue )
			int alt174=2;
			try { dbg.enterSubRule(174);
			try { dbg.enterDecision(174, decisionCanBacktrack[174]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt174=1;
				}
				break;
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case DIMENSION:
			case EMS:
			case EXS:
			case FONT_FACE_SYM:
			case FREQ:
			case GEN:
			case HASH:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LBRACKET:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS_AND:
			case LESS_JS_STRING:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case NUMBER:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PLUS:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case STRING:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case URANGE:
			case URI:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt174=2;
				}
				break;
			case VARIABLE:
				{
				alt174=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 174, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(174);}

			switch (alt174) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:10: sizeFeatureName
					{
					dbg.location(639,10);
					pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3352);
					sizeFeatureName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:28: sizeFeatureValue
					{
					dbg.location(639,28);
					pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3356);
					sizeFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(174);}
			dbg.location(639,46);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:46: ( ws )?
			int alt175=2;
			try { dbg.enterSubRule(175);
			try { dbg.enterDecision(175, decisionCanBacktrack[175]);

			int LA175_0 = input.LA(1);
			if ( (LA175_0==COMMENT||LA175_0==NL||LA175_0==WS) ) {
				alt175=1;
			}
			} finally {dbg.exitDecision(175);}

			switch (alt175) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:46: ws
					{
					dbg.location(639,46);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeSingle3359);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(175);}
			dbg.location(639,50);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(639,103);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:103: ( ws )?
			int alt176=2;
			try { dbg.enterSubRule(176);
			try { dbg.enterDecision(176, decisionCanBacktrack[176]);

			int LA176_0 = input.LA(1);
			if ( (LA176_0==COMMENT||LA176_0==NL||LA176_0==WS) ) {
				alt176=1;
			}
			} finally {dbg.exitDecision(176);}

			switch (alt176) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:103: ws
					{
					dbg.location(639,103);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeSingle3382);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(176);}
			dbg.location(639,107);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:107: ( sizeFeatureName | sizeFeatureValue )
			int alt177=2;
			try { dbg.enterSubRule(177);
			try { dbg.enterDecision(177, decisionCanBacktrack[177]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt177=1;
				}
				break;
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case DIMENSION:
			case EMS:
			case EXS:
			case FONT_FACE_SYM:
			case FREQ:
			case GEN:
			case HASH:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LBRACKET:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS_AND:
			case LESS_JS_STRING:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case NUMBER:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PLUS:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case STRING:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case URANGE:
			case URI:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt177=2;
				}
				break;
			case VARIABLE:
				{
				alt177=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 177, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(177);}

			switch (alt177) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:108: sizeFeatureName
					{
					dbg.location(639,108);
					pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3386);
					sizeFeatureName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:126: sizeFeatureValue
					{
					dbg.location(639,126);
					pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3390);
					sizeFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(177);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(640, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureRangeSingle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureRangeSingle"



	// $ANTLR start "sizeFeatureRangeBetweenLt"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:642:1: sizeFeatureRangeBetweenLt : sizeFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureValue ;
	public final void sizeFeatureRangeBetweenLt() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureRangeBetweenLt");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(642, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:9: ( sizeFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureValue )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:9: sizeFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureValue
			{
			dbg.location(644,9);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3424);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;dbg.location(644,26);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:26: ( ws )?
			int alt178=2;
			try { dbg.enterSubRule(178);
			try { dbg.enterDecision(178, decisionCanBacktrack[178]);

			int LA178_0 = input.LA(1);
			if ( (LA178_0==COMMENT||LA178_0==NL||LA178_0==WS) ) {
				alt178=1;
			}
			} finally {dbg.exitDecision(178);}

			switch (alt178) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:26: ws
					{
					dbg.location(644,26);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3426);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(178);}
			dbg.location(644,30);
			if ( input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(644,50);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:50: ( ws )?
			int alt179=2;
			try { dbg.enterSubRule(179);
			try { dbg.enterDecision(179, decisionCanBacktrack[179]);

			int LA179_0 = input.LA(1);
			if ( (LA179_0==COMMENT||LA179_0==NL||LA179_0==WS) ) {
				alt179=1;
			}
			} finally {dbg.exitDecision(179);}

			switch (alt179) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:50: ws
					{
					dbg.location(644,50);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3437);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(179);}
			dbg.location(644,54);
			pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenLt3440);
			sizeFeatureName();
			state._fsp--;
			if (state.failed) return;dbg.location(644,70);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:70: ( ws )?
			int alt180=2;
			try { dbg.enterSubRule(180);
			try { dbg.enterDecision(180, decisionCanBacktrack[180]);

			int LA180_0 = input.LA(1);
			if ( (LA180_0==COMMENT||LA180_0==NL||LA180_0==WS) ) {
				alt180=1;
			}
			} finally {dbg.exitDecision(180);}

			switch (alt180) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:70: ws
					{
					dbg.location(644,70);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3442);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(180);}
			dbg.location(644,74);
			if ( input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(644,94);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:94: ( ws )?
			int alt181=2;
			try { dbg.enterSubRule(181);
			try { dbg.enterDecision(181, decisionCanBacktrack[181]);

			int LA181_0 = input.LA(1);
			if ( (LA181_0==COMMENT||LA181_0==NL||LA181_0==WS) ) {
				alt181=1;
			}
			} finally {dbg.exitDecision(181);}

			switch (alt181) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:94: ws
					{
					dbg.location(644,94);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3453);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(181);}
			dbg.location(644,98);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3456);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(645, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureRangeBetweenLt");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureRangeBetweenLt"



	// $ANTLR start "sizeFeatureRangeBetweenGt"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:647:1: sizeFeatureRangeBetweenGt : sizeFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureValue ;
	public final void sizeFeatureRangeBetweenGt() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureRangeBetweenGt");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(647, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:9: ( sizeFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureValue )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:9: sizeFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureValue
			{
			dbg.location(649,9);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3489);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;dbg.location(649,26);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:26: ( ws )?
			int alt182=2;
			try { dbg.enterSubRule(182);
			try { dbg.enterDecision(182, decisionCanBacktrack[182]);

			int LA182_0 = input.LA(1);
			if ( (LA182_0==COMMENT||LA182_0==NL||LA182_0==WS) ) {
				alt182=1;
			}
			} finally {dbg.exitDecision(182);}

			switch (alt182) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:26: ws
					{
					dbg.location(649,26);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3491);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(182);}
			dbg.location(649,30);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(649,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:56: ( ws )?
			int alt183=2;
			try { dbg.enterSubRule(183);
			try { dbg.enterDecision(183, decisionCanBacktrack[183]);

			int LA183_0 = input.LA(1);
			if ( (LA183_0==COMMENT||LA183_0==NL||LA183_0==WS) ) {
				alt183=1;
			}
			} finally {dbg.exitDecision(183);}

			switch (alt183) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:56: ws
					{
					dbg.location(649,56);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3502);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(183);}
			dbg.location(649,60);
			pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenGt3505);
			sizeFeatureName();
			state._fsp--;
			if (state.failed) return;dbg.location(649,76);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:76: ( ws )?
			int alt184=2;
			try { dbg.enterSubRule(184);
			try { dbg.enterDecision(184, decisionCanBacktrack[184]);

			int LA184_0 = input.LA(1);
			if ( (LA184_0==COMMENT||LA184_0==NL||LA184_0==WS) ) {
				alt184=1;
			}
			} finally {dbg.exitDecision(184);}

			switch (alt184) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:76: ws
					{
					dbg.location(649,76);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3507);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(184);}
			dbg.location(649,80);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(649,106);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:106: ( ws )?
			int alt185=2;
			try { dbg.enterSubRule(185);
			try { dbg.enterDecision(185, decisionCanBacktrack[185]);

			int LA185_0 = input.LA(1);
			if ( (LA185_0==COMMENT||LA185_0==NL||LA185_0==WS) ) {
				alt185=1;
			}
			} finally {dbg.exitDecision(185);}

			switch (alt185) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:106: ws
					{
					dbg.location(649,106);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3518);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(185);}
			dbg.location(649,110);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3521);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(650, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureRangeBetweenGt");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureRangeBetweenGt"



	// $ANTLR start "sizeFeatureName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:1: sizeFeatureName : ( IDENT | VARIABLE );
	public final void sizeFeatureName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(652, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:653:9: ( IDENT | VARIABLE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(653,9);
			if ( input.LA(1)==IDENT||input.LA(1)==VARIABLE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(656, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureName"



	// $ANTLR start "sizeFeatureValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:1: sizeFeatureValue : term ;
	public final void sizeFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(658, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:659:9: ( term )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:9: term
			{
			dbg.location(660,9);
			pushFollow(FOLLOW_term_in_sizeFeatureValue3599);
			term();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(661, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureValue"



	// $ANTLR start "styleFeature"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:1: styleFeature : declaration ;
	public final void styleFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(663, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:664:9: ( declaration )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:9: declaration
			{
			dbg.location(665,9);
			pushFollow(FOLLOW_declaration_in_styleFeature3632);
			declaration();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(666, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleFeature"



	// $ANTLR start "layerAtRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:668:1: layerAtRule : ( layerBlock | layerStatement );
	public final void layerAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(668, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:9: ( layerBlock | layerStatement )
			int alt186=2;
			try { dbg.enterDecision(186, decisionCanBacktrack[186]);

			try {
				isCyclicDecision = true;
				alt186 = dfa186.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(186);}

			switch (alt186) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:9: layerBlock
					{
					dbg.location(670,9);
					pushFollow(FOLLOW_layerBlock_in_layerAtRule3665);
					layerBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:9: layerStatement
					{
					dbg.location(672,9);
					pushFollow(FOLLOW_layerStatement_in_layerAtRule3685);
					layerStatement();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(673, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerAtRule"



	// $ANTLR start "layerBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:1: layerBlock : ( LAYER_SYM ws ( layerName )? ( ws )? layerBody ) ;
	public final void layerBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(675, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:9: ( ( LAYER_SYM ws ( layerName )? ( ws )? layerBody ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:9: ( LAYER_SYM ws ( layerName )? ( ws )? layerBody )
			{
			dbg.location(677,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:9: ( LAYER_SYM ws ( layerName )? ( ws )? layerBody )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:10: LAYER_SYM ws ( layerName )? ( ws )? layerBody
			{
			dbg.location(677,10);
			match(input,LAYER_SYM,FOLLOW_LAYER_SYM_in_layerBlock3719); if (state.failed) return;dbg.location(677,20);
			pushFollow(FOLLOW_ws_in_layerBlock3721);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(677,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:23: ( layerName )?
			int alt187=2;
			try { dbg.enterSubRule(187);
			try { dbg.enterDecision(187, decisionCanBacktrack[187]);

			int LA187_0 = input.LA(1);
			if ( (LA187_0==IDENT) ) {
				alt187=1;
			}
			} finally {dbg.exitDecision(187);}

			switch (alt187) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:23: layerName
					{
					dbg.location(677,23);
					pushFollow(FOLLOW_layerName_in_layerBlock3723);
					layerName();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(187);}
			dbg.location(677,34);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:34: ( ws )?
			int alt188=2;
			try { dbg.enterSubRule(188);
			try { dbg.enterDecision(188, decisionCanBacktrack[188]);

			int LA188_0 = input.LA(1);
			if ( (LA188_0==COMMENT||LA188_0==NL||LA188_0==WS) ) {
				alt188=1;
			}
			} finally {dbg.exitDecision(188);}

			switch (alt188) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:34: ws
					{
					dbg.location(677,34);
					pushFollow(FOLLOW_ws_in_layerBlock3726);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(188);}
			dbg.location(677,38);
			pushFollow(FOLLOW_layerBody_in_layerBlock3729);
			layerBody();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(678, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerBlock"



	// $ANTLR start "layerStatement"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:1: layerStatement : ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI ) ;
	public final void layerStatement() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerStatement");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(680, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:9: ( ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:9: ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI )
			{
			dbg.location(682,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:9: ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:10: LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI
			{
			dbg.location(682,10);
			match(input,LAYER_SYM,FOLLOW_LAYER_SYM_in_layerStatement3764); if (state.failed) return;dbg.location(682,20);
			pushFollow(FOLLOW_ws_in_layerStatement3766);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(682,23);
			pushFollow(FOLLOW_layerName_in_layerStatement3768);
			layerName();
			state._fsp--;
			if (state.failed) return;dbg.location(682,33);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:33: ( ( ws )? COMMA ( ws )? layerName )*
			try { dbg.enterSubRule(191);

			loop191:
			while (true) {
				int alt191=2;
				try { dbg.enterDecision(191, decisionCanBacktrack[191]);

				int LA191_0 = input.LA(1);
				if ( ((LA191_0 >= COMMA && LA191_0 <= COMMENT)||LA191_0==NL||LA191_0==WS) ) {
					alt191=1;
				}

				} finally {dbg.exitDecision(191);}

				switch (alt191) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:35: ( ws )? COMMA ( ws )? layerName
					{
					dbg.location(682,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:35: ( ws )?
					int alt189=2;
					try { dbg.enterSubRule(189);
					try { dbg.enterDecision(189, decisionCanBacktrack[189]);

					int LA189_0 = input.LA(1);
					if ( (LA189_0==COMMENT||LA189_0==NL||LA189_0==WS) ) {
						alt189=1;
					}
					} finally {dbg.exitDecision(189);}

					switch (alt189) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:35: ws
							{
							dbg.location(682,35);
							pushFollow(FOLLOW_ws_in_layerStatement3772);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(189);}
					dbg.location(682,39);
					match(input,COMMA,FOLLOW_COMMA_in_layerStatement3775); if (state.failed) return;dbg.location(682,45);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:45: ( ws )?
					int alt190=2;
					try { dbg.enterSubRule(190);
					try { dbg.enterDecision(190, decisionCanBacktrack[190]);

					int LA190_0 = input.LA(1);
					if ( (LA190_0==COMMENT||LA190_0==NL||LA190_0==WS) ) {
						alt190=1;
					}
					} finally {dbg.exitDecision(190);}

					switch (alt190) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:45: ws
							{
							dbg.location(682,45);
							pushFollow(FOLLOW_ws_in_layerStatement3777);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(190);}
					dbg.location(682,49);
					pushFollow(FOLLOW_layerName_in_layerStatement3780);
					layerName();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop191;
				}
			}
			} finally {dbg.exitSubRule(191);}
			dbg.location(682,61);
			match(input,SEMI,FOLLOW_SEMI_in_layerStatement3784); if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(683, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerStatement");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerStatement"



	// $ANTLR start "layerName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:685:1: layerName : IDENT ( DOT IDENT )* ;
	public final void layerName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(685, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:9: ( IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:9: IDENT ( DOT IDENT )*
			{
			dbg.location(687,9);
			match(input,IDENT,FOLLOW_IDENT_in_layerName3818); if (state.failed) return;dbg.location(687,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:15: ( DOT IDENT )*
			try { dbg.enterSubRule(192);

			loop192:
			while (true) {
				int alt192=2;
				try { dbg.enterDecision(192, decisionCanBacktrack[192]);

				int LA192_0 = input.LA(1);
				if ( (LA192_0==DOT) ) {
					alt192=1;
				}

				} finally {dbg.exitDecision(192);}

				switch (alt192) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:16: DOT IDENT
					{
					dbg.location(687,16);
					match(input,DOT,FOLLOW_DOT_in_layerName3821); if (state.failed) return;dbg.location(687,20);
					match(input,IDENT,FOLLOW_IDENT_in_layerName3823); if (state.failed) return;
					}
					break;

				default :
					break loop192;
				}
			}
			} finally {dbg.exitSubRule(192);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(688, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerName"



	// $ANTLR start "layerBody"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:690:1: layerBody : LBRACE ( ws )? ( body )? ( ws )? RBRACE ;
	public final void layerBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(690, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:9: ( LBRACE ( ws )? ( body )? ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:9: LBRACE ( ws )? ( body )? ( ws )? RBRACE
			{
			dbg.location(692,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_layerBody3858); if (state.failed) return;dbg.location(692,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:16: ( ws )?
			int alt193=2;
			try { dbg.enterSubRule(193);
			try { dbg.enterDecision(193, decisionCanBacktrack[193]);

			int LA193_0 = input.LA(1);
			if ( (LA193_0==COMMENT||LA193_0==NL||LA193_0==WS) ) {
				alt193=1;
			}
			} finally {dbg.exitDecision(193);}

			switch (alt193) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:16: ws
					{
					dbg.location(692,16);
					pushFollow(FOLLOW_ws_in_layerBody3860);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(193);}
			dbg.location(692,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:20: ( body )?
			int alt194=2;
			try { dbg.enterSubRule(194);
			try { dbg.enterDecision(194, decisionCanBacktrack[194]);

			int LA194_0 = input.LA(1);
			if ( ((LA194_0 >= AT_IDENT && LA194_0 <= AT_SIGN)||(LA194_0 >= BOTTOMCENTER_SYM && LA194_0 <= BOTTOMRIGHT_SYM)||(LA194_0 >= CHARSET_SYM && LA194_0 <= COLON)||LA194_0==CONTAINER_SYM||LA194_0==COUNTER_STYLE_SYM||(LA194_0 >= DCOLON && LA194_0 <= DOT)||LA194_0==FONT_FACE_SYM||(LA194_0 >= GEN && LA194_0 <= GREATER)||(LA194_0 >= HASH && LA194_0 <= HASH_SYMBOL)||LA194_0==IDENT||LA194_0==IMPORT_SYM||LA194_0==LAYER_SYM||(LA194_0 >= LBRACKET && LA194_0 <= LEFTTOP_SYM)||LA194_0==LESS_AND||(LA194_0 >= MEDIA_SYM && LA194_0 <= MOZ_DOCUMENT_SYM)||LA194_0==NAMESPACE_SYM||LA194_0==PAGE_SYM||(LA194_0 >= PIPE && LA194_0 <= PLUS)||(LA194_0 >= RIGHTBOTTOM_SYM && LA194_0 <= RIGHTTOP_SYM)||(LA194_0 >= SASS_AT_ROOT && LA194_0 <= SASS_DEBUG)||(LA194_0 >= SASS_EACH && LA194_0 <= SASS_ELSE)||(LA194_0 >= SASS_EXTEND && LA194_0 <= SASS_FUNCTION)||(LA194_0 >= SASS_IF && LA194_0 <= SASS_MIXIN)||(LA194_0 >= SASS_RETURN && LA194_0 <= SEMI)||LA194_0==STAR||LA194_0==SUPPORTS_SYM||LA194_0==TILDE||(LA194_0 >= TOPCENTER_SYM && LA194_0 <= TOPRIGHT_SYM)||LA194_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt194=1;
			}
			} finally {dbg.exitDecision(194);}

			switch (alt194) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:20: body
					{
					dbg.location(692,20);
					pushFollow(FOLLOW_body_in_layerBody3863);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(194);}
			dbg.location(692,26);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:26: ( ws )?
			int alt195=2;
			try { dbg.enterSubRule(195);
			try { dbg.enterDecision(195, decisionCanBacktrack[195]);

			int LA195_0 = input.LA(1);
			if ( (LA195_0==COMMENT||LA195_0==NL||LA195_0==WS) ) {
				alt195=1;
			}
			} finally {dbg.exitDecision(195);}

			switch (alt195) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:26: ws
					{
					dbg.location(692,26);
					pushFollow(FOLLOW_ws_in_layerBody3866);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(195);}
			dbg.location(692,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_layerBody3869); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(693, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerBody"



	// $ANTLR start "at_rule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:1: at_rule : ( media | page | counterStyle | fontFace | supportsAtRule | vendorAtRule | layerAtRule | containerAtRule );
	public final void at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(695, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:5: ( media | page | counterStyle | fontFace | supportsAtRule | vendorAtRule | layerAtRule | containerAtRule )
			int alt196=8;
			try { dbg.enterDecision(196, decisionCanBacktrack[196]);

			switch ( input.LA(1) ) {
			case MEDIA_SYM:
				{
				alt196=1;
				}
				break;
			case PAGE_SYM:
				{
				alt196=2;
				}
				break;
			case COUNTER_STYLE_SYM:
				{
				alt196=3;
				}
				break;
			case FONT_FACE_SYM:
				{
				alt196=4;
				}
				break;
			case SUPPORTS_SYM:
				{
				alt196=5;
				}
				break;
			case AT_IDENT:
			case MOZ_DOCUMENT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt196=6;
				}
				break;
			case LAYER_SYM:
				{
				alt196=7;
				}
				break;
			case CONTAINER_SYM:
				{
				alt196=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 196, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(196);}

			switch (alt196) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:5: media
					{
					dbg.location(697,5);
					pushFollow(FOLLOW_media_in_at_rule3894);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:7: page
					{
					dbg.location(698,7);
					pushFollow(FOLLOW_page_in_at_rule3902);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:7: counterStyle
					{
					dbg.location(699,7);
					pushFollow(FOLLOW_counterStyle_in_at_rule3910);
					counterStyle();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:700:7: fontFace
					{
					dbg.location(700,7);
					pushFollow(FOLLOW_fontFace_in_at_rule3918);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:7: supportsAtRule
					{
					dbg.location(701,7);
					pushFollow(FOLLOW_supportsAtRule_in_at_rule3926);
					supportsAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:7: vendorAtRule
					{
					dbg.location(702,7);
					pushFollow(FOLLOW_vendorAtRule_in_at_rule3934);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:703:7: layerAtRule
					{
					dbg.location(703,7);
					pushFollow(FOLLOW_layerAtRule_in_at_rule3942);
					layerAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:704:7: containerAtRule
					{
					dbg.location(704,7);
					pushFollow(FOLLOW_containerAtRule_in_at_rule3950);
					containerAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(705, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "at_rule"



	// $ANTLR start "vendorAtRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:707:1: vendorAtRule : ( moz_document | webkitKeyframes | generic_at_rule );
	public final void vendorAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "vendorAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(707, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:3: ( moz_document | webkitKeyframes | generic_at_rule )
			int alt197=3;
			try { dbg.enterDecision(197, decisionCanBacktrack[197]);

			switch ( input.LA(1) ) {
			case MOZ_DOCUMENT_SYM:
				{
				alt197=1;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt197=2;
				}
				break;
			case AT_IDENT:
				{
				alt197=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 197, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(197);}

			switch (alt197) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:3: moz_document
					{
					dbg.location(708,3);
					pushFollow(FOLLOW_moz_document_in_vendorAtRule3963);
					moz_document();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:18: webkitKeyframes
					{
					dbg.location(708,18);
					pushFollow(FOLLOW_webkitKeyframes_in_vendorAtRule3967);
					webkitKeyframes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:36: generic_at_rule
					{
					dbg.location(708,36);
					pushFollow(FOLLOW_generic_at_rule_in_vendorAtRule3971);
					generic_at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(708, 50);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "vendorAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "vendorAtRule"



	// $ANTLR start "atRuleId"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:710:1: atRuleId : ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void atRuleId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "atRuleId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(710, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:711:2: ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt199=3;
			try { dbg.enterDecision(199, decisionCanBacktrack[199]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA199_1 = input.LA(2);
				if ( (LA199_1==DOT) ) {
					alt199=3;
				}
				else if ( (LA199_1==COMMENT||LA199_1==LBRACE||LA199_1==NL||LA199_1==WS) ) {
					alt199=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 199, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				alt199=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt199=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 199, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(199);}

			switch (alt199) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:2: IDENT
					{
					dbg.location(712,2);
					match(input,IDENT,FOLLOW_IDENT_in_atRuleId3981); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:10: STRING
					{
					dbg.location(712,10);
					match(input,STRING,FOLLOW_STRING_in_atRuleId3985); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:19: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(712,19);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "atRuleId", "isCssPreprocessorSource()");
					}dbg.location(712,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:48: ( cp_variable | sass_interpolation_expression_var )
					int alt198=2;
					try { dbg.enterSubRule(198);
					try { dbg.enterDecision(198, decisionCanBacktrack[198]);

					int LA198_0 = input.LA(1);
					if ( (LA198_0==AT_IDENT||(LA198_0 >= BOTTOMCENTER_SYM && LA198_0 <= BOTTOMRIGHT_SYM)||LA198_0==CHARSET_SYM||LA198_0==COUNTER_STYLE_SYM||LA198_0==FONT_FACE_SYM||LA198_0==IDENT||LA198_0==IMPORT_SYM||(LA198_0 >= LEFTBOTTOM_SYM && LA198_0 <= LEFTTOP_SYM)||LA198_0==MEDIA_SYM||LA198_0==MOZ_DOCUMENT_SYM||LA198_0==NAMESPACE_SYM||LA198_0==PAGE_SYM||(LA198_0 >= RIGHTBOTTOM_SYM && LA198_0 <= RIGHTTOP_SYM)||(LA198_0 >= SASS_AT_ROOT && LA198_0 <= SASS_DEBUG)||(LA198_0 >= SASS_EACH && LA198_0 <= SASS_ELSE)||LA198_0==SASS_EXTEND||(LA198_0 >= SASS_FOR && LA198_0 <= SASS_FUNCTION)||(LA198_0 >= SASS_IF && LA198_0 <= SASS_MIXIN)||(LA198_0 >= SASS_RETURN && LA198_0 <= SASS_WHILE)||(LA198_0 >= TOPCENTER_SYM && LA198_0 <= TOPRIGHT_SYM)||LA198_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt198=1;
					}
					else if ( (LA198_0==HASH_SYMBOL) ) {
						alt198=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 198, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(198);}

					switch (alt198) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:50: cp_variable
							{
							dbg.location(712,50);
							pushFollow(FOLLOW_cp_variable_in_atRuleId3993);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:64: sass_interpolation_expression_var
							{
							dbg.location(712,64);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_atRuleId3997);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(198);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(713, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "atRuleId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "atRuleId"



	// $ANTLR start "generic_at_rule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:1: generic_at_rule : AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE ;
	public final void generic_at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "generic_at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(715, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:5: ( AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:7: AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE
			{
			dbg.location(716,7);
			match(input,AT_IDENT,FOLLOW_AT_IDENT_in_generic_at_rule4013); if (state.failed) return;dbg.location(716,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:16: ( ws )?
			int alt200=2;
			try { dbg.enterSubRule(200);
			try { dbg.enterDecision(200, decisionCanBacktrack[200]);

			int LA200_0 = input.LA(1);
			if ( (LA200_0==COMMENT||LA200_0==NL||LA200_0==WS) ) {
				alt200=1;
			}
			} finally {dbg.exitDecision(200);}

			switch (alt200) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:16: ws
					{
					dbg.location(716,16);
					pushFollow(FOLLOW_ws_in_generic_at_rule4015);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(200);}
			dbg.location(716,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:20: ( atRuleId ( ws )? )?
			int alt202=2;
			try { dbg.enterSubRule(202);
			try { dbg.enterDecision(202, decisionCanBacktrack[202]);

			int LA202_0 = input.LA(1);
			if ( (LA202_0==AT_IDENT||(LA202_0 >= BOTTOMCENTER_SYM && LA202_0 <= BOTTOMRIGHT_SYM)||LA202_0==CHARSET_SYM||LA202_0==COUNTER_STYLE_SYM||LA202_0==FONT_FACE_SYM||LA202_0==HASH_SYMBOL||LA202_0==IDENT||LA202_0==IMPORT_SYM||(LA202_0 >= LEFTBOTTOM_SYM && LA202_0 <= LEFTTOP_SYM)||LA202_0==MEDIA_SYM||LA202_0==MOZ_DOCUMENT_SYM||LA202_0==NAMESPACE_SYM||LA202_0==PAGE_SYM||(LA202_0 >= RIGHTBOTTOM_SYM && LA202_0 <= RIGHTTOP_SYM)||(LA202_0 >= SASS_AT_ROOT && LA202_0 <= SASS_DEBUG)||(LA202_0 >= SASS_EACH && LA202_0 <= SASS_ELSE)||LA202_0==SASS_EXTEND||(LA202_0 >= SASS_FOR && LA202_0 <= SASS_FUNCTION)||(LA202_0 >= SASS_IF && LA202_0 <= SASS_MIXIN)||(LA202_0 >= SASS_RETURN && LA202_0 <= SASS_WHILE)||LA202_0==STRING||(LA202_0 >= TOPCENTER_SYM && LA202_0 <= TOPRIGHT_SYM)||LA202_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt202=1;
			}
			} finally {dbg.exitDecision(202);}

			switch (alt202) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:22: atRuleId ( ws )?
					{
					dbg.location(716,22);
					pushFollow(FOLLOW_atRuleId_in_generic_at_rule4020);
					atRuleId();
					state._fsp--;
					if (state.failed) return;dbg.location(716,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:31: ( ws )?
					int alt201=2;
					try { dbg.enterSubRule(201);
					try { dbg.enterDecision(201, decisionCanBacktrack[201]);

					int LA201_0 = input.LA(1);
					if ( (LA201_0==COMMENT||LA201_0==NL||LA201_0==WS) ) {
						alt201=1;
					}
					} finally {dbg.exitDecision(201);}

					switch (alt201) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:31: ws
							{
							dbg.location(716,31);
							pushFollow(FOLLOW_ws_in_generic_at_rule4022);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(201);}

					}
					break;

			}
			} finally {dbg.exitSubRule(202);}
			dbg.location(717,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_generic_at_rule4036); if (state.failed) return;dbg.location(718,10);
			pushFollow(FOLLOW_syncTo_RBRACE_in_generic_at_rule4047);
			syncTo_RBRACE();
			state._fsp--;
			if (state.failed) return;dbg.location(719,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_generic_at_rule4057); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(720, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "generic_at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "generic_at_rule"



	// $ANTLR start "moz_document"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:721:1: moz_document : MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE ;
	public final void moz_document() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(721, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:722:2: ( MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:2: MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE
			{
			dbg.location(723,2);
			match(input,MOZ_DOCUMENT_SYM,FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document4068); if (state.failed) return;dbg.location(723,19);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:19: ( ws )?
			int alt203=2;
			try { dbg.enterSubRule(203);
			try { dbg.enterDecision(203, decisionCanBacktrack[203]);

			int LA203_0 = input.LA(1);
			if ( (LA203_0==COMMENT||LA203_0==NL||LA203_0==WS) ) {
				alt203=1;
			}
			} finally {dbg.exitDecision(203);}

			switch (alt203) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:19: ws
					{
					dbg.location(723,19);
					pushFollow(FOLLOW_ws_in_moz_document4070);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(203);}
			dbg.location(723,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:23: ( moz_document_function ( ws )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:25: moz_document_function ( ws )?
			{
			dbg.location(723,25);
			pushFollow(FOLLOW_moz_document_function_in_moz_document4075);
			moz_document_function();
			state._fsp--;
			if (state.failed) return;dbg.location(723,47);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:47: ( ws )?
			int alt204=2;
			try { dbg.enterSubRule(204);
			try { dbg.enterDecision(204, decisionCanBacktrack[204]);

			int LA204_0 = input.LA(1);
			if ( (LA204_0==COMMENT||LA204_0==NL||LA204_0==WS) ) {
				alt204=1;
			}
			} finally {dbg.exitDecision(204);}

			switch (alt204) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:47: ws
					{
					dbg.location(723,47);
					pushFollow(FOLLOW_ws_in_moz_document4077);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(204);}

			}
			dbg.location(723,52);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:52: ( COMMA ( ws )? moz_document_function ( ws )? )*
			try { dbg.enterSubRule(207);

			loop207:
			while (true) {
				int alt207=2;
				try { dbg.enterDecision(207, decisionCanBacktrack[207]);

				int LA207_0 = input.LA(1);
				if ( (LA207_0==COMMA) ) {
					alt207=1;
				}

				} finally {dbg.exitDecision(207);}

				switch (alt207) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:54: COMMA ( ws )? moz_document_function ( ws )?
					{
					dbg.location(723,54);
					match(input,COMMA,FOLLOW_COMMA_in_moz_document4083); if (state.failed) return;dbg.location(723,60);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:60: ( ws )?
					int alt205=2;
					try { dbg.enterSubRule(205);
					try { dbg.enterDecision(205, decisionCanBacktrack[205]);

					int LA205_0 = input.LA(1);
					if ( (LA205_0==COMMENT||LA205_0==NL||LA205_0==WS) ) {
						alt205=1;
					}
					} finally {dbg.exitDecision(205);}

					switch (alt205) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:60: ws
							{
							dbg.location(723,60);
							pushFollow(FOLLOW_ws_in_moz_document4085);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(205);}
					dbg.location(723,64);
					pushFollow(FOLLOW_moz_document_function_in_moz_document4088);
					moz_document_function();
					state._fsp--;
					if (state.failed) return;dbg.location(723,86);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:86: ( ws )?
					int alt206=2;
					try { dbg.enterSubRule(206);
					try { dbg.enterDecision(206, decisionCanBacktrack[206]);

					int LA206_0 = input.LA(1);
					if ( (LA206_0==COMMENT||LA206_0==NL||LA206_0==WS) ) {
						alt206=1;
					}
					} finally {dbg.exitDecision(206);}

					switch (alt206) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:723:86: ws
							{
							dbg.location(723,86);
							pushFollow(FOLLOW_ws_in_moz_document4090);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(206);}

					}
					break;

				default :
					break loop207;
				}
			}
			} finally {dbg.exitSubRule(207);}
			dbg.location(724,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_moz_document4097); if (state.failed) return;dbg.location(724,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:9: ( ws )?
			int alt208=2;
			try { dbg.enterSubRule(208);
			try { dbg.enterDecision(208, decisionCanBacktrack[208]);

			int LA208_0 = input.LA(1);
			if ( (LA208_0==COMMENT||LA208_0==NL||LA208_0==WS) ) {
				alt208=1;
			}
			} finally {dbg.exitDecision(208);}

			switch (alt208) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:724:9: ws
					{
					dbg.location(724,9);
					pushFollow(FOLLOW_ws_in_moz_document4099);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(208);}
			dbg.location(725,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:725:3: ( body )?
			int alt209=2;
			try { dbg.enterSubRule(209);
			try { dbg.enterDecision(209, decisionCanBacktrack[209]);

			int LA209_0 = input.LA(1);
			if ( ((LA209_0 >= AT_IDENT && LA209_0 <= AT_SIGN)||(LA209_0 >= BOTTOMCENTER_SYM && LA209_0 <= BOTTOMRIGHT_SYM)||(LA209_0 >= CHARSET_SYM && LA209_0 <= COLON)||LA209_0==CONTAINER_SYM||LA209_0==COUNTER_STYLE_SYM||(LA209_0 >= DCOLON && LA209_0 <= DOT)||LA209_0==FONT_FACE_SYM||(LA209_0 >= GEN && LA209_0 <= GREATER)||(LA209_0 >= HASH && LA209_0 <= HASH_SYMBOL)||LA209_0==IDENT||LA209_0==IMPORT_SYM||LA209_0==LAYER_SYM||(LA209_0 >= LBRACKET && LA209_0 <= LEFTTOP_SYM)||LA209_0==LESS_AND||(LA209_0 >= MEDIA_SYM && LA209_0 <= MOZ_DOCUMENT_SYM)||LA209_0==NAMESPACE_SYM||LA209_0==PAGE_SYM||(LA209_0 >= PIPE && LA209_0 <= PLUS)||(LA209_0 >= RIGHTBOTTOM_SYM && LA209_0 <= RIGHTTOP_SYM)||(LA209_0 >= SASS_AT_ROOT && LA209_0 <= SASS_DEBUG)||(LA209_0 >= SASS_EACH && LA209_0 <= SASS_ELSE)||(LA209_0 >= SASS_EXTEND && LA209_0 <= SASS_FUNCTION)||(LA209_0 >= SASS_IF && LA209_0 <= SASS_MIXIN)||(LA209_0 >= SASS_RETURN && LA209_0 <= SEMI)||LA209_0==STAR||LA209_0==SUPPORTS_SYM||LA209_0==TILDE||(LA209_0 >= TOPCENTER_SYM && LA209_0 <= TOPRIGHT_SYM)||LA209_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt209=1;
			}
			} finally {dbg.exitDecision(209);}

			switch (alt209) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:725:3: body
					{
					dbg.location(725,3);
					pushFollow(FOLLOW_body_in_moz_document4104);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(209);}
			dbg.location(726,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_moz_document4109); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(727, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document"



	// $ANTLR start "moz_document_function"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:1: moz_document_function : ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP );
	public final void moz_document_function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document_function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(729, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:730:2: ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(730,2);
			if ( (input.LA(1) >= MOZ_DOMAIN && input.LA(1) <= MOZ_URL_PREFIX)||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(732, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document_function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document_function"



	// $ANTLR start "webkitKeyframes"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:1: webkitKeyframes : WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE ;
	public final void webkitKeyframes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(735, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:2: ( WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:2: WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE
			{
			dbg.location(737,2);
			match(input,WEBKIT_KEYFRAMES_SYM,FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes4146); if (state.failed) return;dbg.location(737,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:23: ( ws )?
			int alt210=2;
			try { dbg.enterSubRule(210);
			try { dbg.enterDecision(210, decisionCanBacktrack[210]);

			int LA210_0 = input.LA(1);
			if ( (LA210_0==COMMENT||LA210_0==NL||LA210_0==WS) ) {
				alt210=1;
			}
			} finally {dbg.exitDecision(210);}

			switch (alt210) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:23: ws
					{
					dbg.location(737,23);
					pushFollow(FOLLOW_ws_in_webkitKeyframes4148);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(210);}
			dbg.location(737,27);
			pushFollow(FOLLOW_atRuleId_in_webkitKeyframes4151);
			atRuleId();
			state._fsp--;
			if (state.failed) return;dbg.location(737,36);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:36: ( ws )?
			int alt211=2;
			try { dbg.enterSubRule(211);
			try { dbg.enterDecision(211, decisionCanBacktrack[211]);

			int LA211_0 = input.LA(1);
			if ( (LA211_0==COMMENT||LA211_0==NL||LA211_0==WS) ) {
				alt211=1;
			}
			} finally {dbg.exitDecision(211);}

			switch (alt211) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:36: ws
					{
					dbg.location(737,36);
					pushFollow(FOLLOW_ws_in_webkitKeyframes4153);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(211);}
			dbg.location(738,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframes4157); if (state.failed) return;dbg.location(738,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:9: ( ws )?
			int alt212=2;
			try { dbg.enterSubRule(212);
			try { dbg.enterDecision(212, decisionCanBacktrack[212]);

			int LA212_0 = input.LA(1);
			if ( (LA212_0==COMMENT||LA212_0==NL||LA212_0==WS) ) {
				alt212=1;
			}
			} finally {dbg.exitDecision(212);}

			switch (alt212) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:9: ws
					{
					dbg.location(738,9);
					pushFollow(FOLLOW_ws_in_webkitKeyframes4159);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(212);}
			dbg.location(739,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:3: ( webkitKeyframesBlock ( ws )? )*
			try { dbg.enterSubRule(214);

			loop214:
			while (true) {
				int alt214=2;
				try { dbg.enterDecision(214, decisionCanBacktrack[214]);

				int LA214_0 = input.LA(1);
				if ( (LA214_0==IDENT||LA214_0==PERCENTAGE||LA214_0==SASS_CONTENT) ) {
					alt214=1;
				}

				} finally {dbg.exitDecision(214);}

				switch (alt214) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:5: webkitKeyframesBlock ( ws )?
					{
					dbg.location(739,5);
					pushFollow(FOLLOW_webkitKeyframesBlock_in_webkitKeyframes4166);
					webkitKeyframesBlock();
					state._fsp--;
					if (state.failed) return;dbg.location(739,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:26: ( ws )?
					int alt213=2;
					try { dbg.enterSubRule(213);
					try { dbg.enterDecision(213, decisionCanBacktrack[213]);

					int LA213_0 = input.LA(1);
					if ( (LA213_0==COMMENT||LA213_0==NL||LA213_0==WS) ) {
						alt213=1;
					}
					} finally {dbg.exitDecision(213);}

					switch (alt213) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:26: ws
							{
							dbg.location(739,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframes4168);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(213);}

					}
					break;

				default :
					break loop214;
				}
			}
			} finally {dbg.exitSubRule(214);}
			dbg.location(740,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframes4175); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(741, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframes"



	// $ANTLR start "webkitKeyframesBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:1: webkitKeyframesBlock : ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? );
	public final void webkitKeyframesBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframesBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(743, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:744:2: ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? )
			int alt219=2;
			try { dbg.enterDecision(219, decisionCanBacktrack[219]);

			int LA219_0 = input.LA(1);
			if ( (LA219_0==IDENT||LA219_0==PERCENTAGE) ) {
				alt219=1;
			}
			else if ( (LA219_0==SASS_CONTENT) ) {
				alt219=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 219, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(219);}

			switch (alt219) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:745:2: webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(745,2);
					pushFollow(FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock4187);
					webkitKeyframeSelectors();
					state._fsp--;
					if (state.failed) return;dbg.location(745,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:745:26: ( ws )?
					int alt215=2;
					try { dbg.enterSubRule(215);
					try { dbg.enterDecision(215, decisionCanBacktrack[215]);

					int LA215_0 = input.LA(1);
					if ( (LA215_0==COMMENT||LA215_0==NL||LA215_0==WS) ) {
						alt215=1;
					}
					} finally {dbg.exitDecision(215);}

					switch (alt215) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:745:26: ws
							{
							dbg.location(745,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock4189);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(215);}
					dbg.location(746,2);
					match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframesBlock4193); if (state.failed) return;dbg.location(746,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:10: ( ws )?
					int alt216=2;
					try { dbg.enterSubRule(216);
					try { dbg.enterDecision(216, decisionCanBacktrack[216]);

					int LA216_0 = input.LA(1);
					if ( (LA216_0==COMMENT||LA216_0==NL||LA216_0==WS) ) {
						alt216=1;
					}
					} finally {dbg.exitDecision(216);}

					switch (alt216) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:10: ws
							{
							dbg.location(746,10);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock4196);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(216);}
					dbg.location(746,14);
					pushFollow(FOLLOW_syncToFollow_in_webkitKeyframesBlock4199);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(747,3);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:3: ( declarations )?
					int alt217=2;
					try { dbg.enterSubRule(217);
					try { dbg.enterDecision(217, decisionCanBacktrack[217]);

					int LA217_0 = input.LA(1);
					if ( ((LA217_0 >= AT_IDENT && LA217_0 <= AT_SIGN)||(LA217_0 >= BOTTOMCENTER_SYM && LA217_0 <= BOTTOMRIGHT_SYM)||(LA217_0 >= CHARSET_SYM && LA217_0 <= COLON)||LA217_0==CONTAINER_SYM||LA217_0==COUNTER_STYLE_SYM||(LA217_0 >= DCOLON && LA217_0 <= DOT)||LA217_0==FONT_FACE_SYM||(LA217_0 >= GEN && LA217_0 <= GREATER)||(LA217_0 >= HASH && LA217_0 <= HASH_SYMBOL)||LA217_0==IDENT||LA217_0==IMPORT_SYM||LA217_0==LAYER_SYM||(LA217_0 >= LBRACKET && LA217_0 <= LEFTTOP_SYM)||LA217_0==LESS_AND||(LA217_0 >= MEDIA_SYM && LA217_0 <= MOZ_DOCUMENT_SYM)||LA217_0==NAMESPACE_SYM||LA217_0==PAGE_SYM||(LA217_0 >= PIPE && LA217_0 <= PLUS)||(LA217_0 >= RIGHTBOTTOM_SYM && LA217_0 <= RIGHTTOP_SYM)||(LA217_0 >= SASS_AT_ROOT && LA217_0 <= SASS_DEBUG)||(LA217_0 >= SASS_EACH && LA217_0 <= SASS_ELSE)||(LA217_0 >= SASS_ERROR && LA217_0 <= SASS_FUNCTION)||(LA217_0 >= SASS_IF && LA217_0 <= SASS_MIXIN)||(LA217_0 >= SASS_RETURN && LA217_0 <= SEMI)||LA217_0==STAR||LA217_0==SUPPORTS_SYM||LA217_0==TILDE||(LA217_0 >= TOPCENTER_SYM && LA217_0 <= TOPRIGHT_SYM)||LA217_0==VARIABLE||LA217_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt217=1;
					}
					} finally {dbg.exitDecision(217);}

					switch (alt217) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:3: declarations
							{
							dbg.location(747,3);
							pushFollow(FOLLOW_declarations_in_webkitKeyframesBlock4203);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(217);}
					dbg.location(748,2);
					match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframesBlock4207); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:749:11: {...}?{...}? sass_content ( SEMI )?
					{
					dbg.location(749,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(749,30);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(749,48);
					pushFollow(FOLLOW_sass_content_in_webkitKeyframesBlock4224);
					sass_content();
					state._fsp--;
					if (state.failed) return;dbg.location(749,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:749:61: ( SEMI )?
					int alt218=2;
					try { dbg.enterSubRule(218);
					try { dbg.enterDecision(218, decisionCanBacktrack[218]);

					int LA218_0 = input.LA(1);
					if ( (LA218_0==SEMI) ) {
						alt218=1;
					}
					} finally {dbg.exitDecision(218);}

					switch (alt218) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:749:61: SEMI
							{
							dbg.location(749,61);
							match(input,SEMI,FOLLOW_SEMI_in_webkitKeyframesBlock4226); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(218);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(750, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframesBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframesBlock"



	// $ANTLR start "webkitKeyframeSelectors"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:752:1: webkitKeyframeSelectors : ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* ;
	public final void webkitKeyframeSelectors() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframeSelectors");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(752, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:753:2: ( ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			{
			dbg.location(754,2);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
			int alt220=3;
			try { dbg.enterSubRule(220);
			try { dbg.enterDecision(220, decisionCanBacktrack[220]);

			int LA220_0 = input.LA(1);
			if ( (LA220_0==IDENT) ) {
				int LA220_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
					alt220=1;
				}
				else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
					alt220=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==PERCENTAGE) ) {
				alt220=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 220, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(220);}

			switch (alt220) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:4: {...}? IDENT
					{
					dbg.location(754,4);
					if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
					}dbg.location(754,31);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4243); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:39: {...}? IDENT
					{
					dbg.location(754,39);
					if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
					}dbg.location(754,64);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4249); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:72: PERCENTAGE
					{
					dbg.location(754,72);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4253); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(220);}
			dbg.location(754,85);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			try { dbg.enterSubRule(224);

			loop224:
			while (true) {
				int alt224=2;
				try { dbg.enterDecision(224, decisionCanBacktrack[224]);

				try {
					isCyclicDecision = true;
					alt224 = dfa224.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(224);}

				switch (alt224) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:87: ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					{
					dbg.location(754,87);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:87: ( ws )?
					int alt221=2;
					try { dbg.enterSubRule(221);
					try { dbg.enterDecision(221, decisionCanBacktrack[221]);

					int LA221_0 = input.LA(1);
					if ( (LA221_0==COMMENT||LA221_0==NL||LA221_0==WS) ) {
						alt221=1;
					}
					} finally {dbg.exitDecision(221);}

					switch (alt221) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:87: ws
							{
							dbg.location(754,87);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors4259);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(221);}
					dbg.location(754,91);
					match(input,COMMA,FOLLOW_COMMA_in_webkitKeyframeSelectors4262); if (state.failed) return;dbg.location(754,97);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:97: ( ws )?
					int alt222=2;
					try { dbg.enterSubRule(222);
					try { dbg.enterDecision(222, decisionCanBacktrack[222]);

					int LA222_0 = input.LA(1);
					if ( (LA222_0==COMMENT||LA222_0==NL||LA222_0==WS) ) {
						alt222=1;
					}
					} finally {dbg.exitDecision(222);}

					switch (alt222) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:97: ws
							{
							dbg.location(754,97);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors4264);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(222);}
					dbg.location(754,101);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:101: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					int alt223=3;
					try { dbg.enterSubRule(223);
					try { dbg.enterDecision(223, decisionCanBacktrack[223]);

					int LA223_0 = input.LA(1);
					if ( (LA223_0==IDENT) ) {
						int LA223_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
							alt223=1;
						}
						else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
							alt223=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 223, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA223_0==PERCENTAGE) ) {
						alt223=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 223, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(223);}

					switch (alt223) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:103: {...}? IDENT
							{
							dbg.location(754,103);
							if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
							}dbg.location(754,130);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4271); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:138: {...}? IDENT
							{
							dbg.location(754,138);
							if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
							}dbg.location(754,163);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4277); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:171: PERCENTAGE
							{
							dbg.location(754,171);
							match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4281); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(223);}

					}
					break;

				default :
					break loop224;
				}
			}
			} finally {dbg.exitSubRule(224);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(755, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframeSelectors");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframeSelectors"



	// $ANTLR start "page"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:757:1: page : PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE ;
	public final void page() throws RecognitionException {

		    boolean semiRequired = false;

		try { dbg.enterRule(getGrammarFileName(), "page");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(757, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:5: ( PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:7: PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE
			{
			dbg.location(761,7);
			match(input,PAGE_SYM,FOLLOW_PAGE_SYM_in_page4305); if (state.failed) return;dbg.location(761,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:16: ( ws )?
			int alt225=2;
			try { dbg.enterSubRule(225);
			try { dbg.enterDecision(225, decisionCanBacktrack[225]);

			int LA225_0 = input.LA(1);
			if ( (LA225_0==COMMENT||LA225_0==NL||LA225_0==WS) ) {
				alt225=1;
			}
			} finally {dbg.exitDecision(225);}

			switch (alt225) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:16: ws
					{
					dbg.location(761,16);
					pushFollow(FOLLOW_ws_in_page4307);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(225);}
			dbg.location(761,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:20: ( IDENT ( ws )? )?
			int alt227=2;
			try { dbg.enterSubRule(227);
			try { dbg.enterDecision(227, decisionCanBacktrack[227]);

			int LA227_0 = input.LA(1);
			if ( (LA227_0==IDENT) ) {
				alt227=1;
			}
			} finally {dbg.exitDecision(227);}

			switch (alt227) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:22: IDENT ( ws )?
					{
					dbg.location(761,22);
					match(input,IDENT,FOLLOW_IDENT_in_page4312); if (state.failed) return;dbg.location(761,28);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:28: ( ws )?
					int alt226=2;
					try { dbg.enterSubRule(226);
					try { dbg.enterDecision(226, decisionCanBacktrack[226]);

					int LA226_0 = input.LA(1);
					if ( (LA226_0==COMMENT||LA226_0==NL||LA226_0==WS) ) {
						alt226=1;
					}
					} finally {dbg.exitDecision(226);}

					switch (alt226) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:28: ws
							{
							dbg.location(761,28);
							pushFollow(FOLLOW_ws_in_page4314);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(226);}

					}
					break;

			}
			} finally {dbg.exitSubRule(227);}
			dbg.location(761,35);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:35: ( pseudoPage ( ws )? )?
			int alt229=2;
			try { dbg.enterSubRule(229);
			try { dbg.enterDecision(229, decisionCanBacktrack[229]);

			int LA229_0 = input.LA(1);
			if ( (LA229_0==COLON) ) {
				alt229=1;
			}
			} finally {dbg.exitDecision(229);}

			switch (alt229) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:36: pseudoPage ( ws )?
					{
					dbg.location(761,36);
					pushFollow(FOLLOW_pseudoPage_in_page4321);
					pseudoPage();
					state._fsp--;
					if (state.failed) return;dbg.location(761,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:47: ( ws )?
					int alt228=2;
					try { dbg.enterSubRule(228);
					try { dbg.enterDecision(228, decisionCanBacktrack[228]);

					int LA228_0 = input.LA(1);
					if ( (LA228_0==COMMENT||LA228_0==NL||LA228_0==WS) ) {
						alt228=1;
					}
					} finally {dbg.exitDecision(228);}

					switch (alt228) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:761:47: ws
							{
							dbg.location(761,47);
							pushFollow(FOLLOW_ws_in_page4323);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(228);}

					}
					break;

			}
			} finally {dbg.exitSubRule(229);}
			dbg.location(762,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_page4336); if (state.failed) return;dbg.location(765,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:13: ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )*
			try { dbg.enterSubRule(236);

			loop236:
			while (true) {
				int alt236=2;
				try { dbg.enterDecision(236, decisionCanBacktrack[236]);

				try {
					isCyclicDecision = true;
					alt236 = dfa236.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(236);}

				switch (alt236) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:15: ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin )
					{
					dbg.location(765,15);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:15: ( ws )?
					int alt230=2;
					try { dbg.enterSubRule(230);
					try { dbg.enterDecision(230, decisionCanBacktrack[230]);

					int LA230_0 = input.LA(1);
					if ( (LA230_0==COMMENT||LA230_0==NL||LA230_0==WS) ) {
						alt230=1;
					}
					} finally {dbg.exitDecision(230);}

					switch (alt230) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:15: ws
							{
							dbg.location(765,15);
							pushFollow(FOLLOW_ws_in_page4378);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(230);}
					dbg.location(765,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:19: ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? )
					int alt234=2;
					try { dbg.enterSubRule(234);
					try { dbg.enterDecision(234, decisionCanBacktrack[234]);

					int LA234_0 = input.LA(1);
					if ( (LA234_0==SEMI) ) {
						int LA234_1 = input.LA(2);
						if ( (evalPredicate(semiRequired,"semiRequired")) ) {
							alt234=1;
						}
						else if ( (true) ) {
							alt234=2;
						}

					}
					else if ( ((LA234_0 >= AT_IDENT && LA234_0 <= AT_SIGN)||(LA234_0 >= BOTTOMCENTER_SYM && LA234_0 <= BOTTOMRIGHT_SYM)||LA234_0==CHARSET_SYM||LA234_0==COUNTER_STYLE_SYM||LA234_0==FONT_FACE_SYM||LA234_0==GEN||LA234_0==HASH_SYMBOL||LA234_0==IDENT||LA234_0==IMPORT_SYM||(LA234_0 >= LEFTBOTTOM_SYM && LA234_0 <= LEFTTOP_SYM)||(LA234_0 >= MEDIA_SYM && LA234_0 <= MOZ_DOCUMENT_SYM)||LA234_0==NAMESPACE_SYM||LA234_0==PAGE_SYM||(LA234_0 >= RIGHTBOTTOM_SYM && LA234_0 <= RIGHTTOP_SYM)||(LA234_0 >= SASS_AT_ROOT && LA234_0 <= SASS_DEBUG)||(LA234_0 >= SASS_EACH && LA234_0 <= SASS_ELSE)||LA234_0==SASS_EXTEND||(LA234_0 >= SASS_FOR && LA234_0 <= SASS_FUNCTION)||(LA234_0 >= SASS_IF && LA234_0 <= SASS_MIXIN)||(LA234_0 >= SASS_RETURN && LA234_0 <= SASS_WHILE)||LA234_0==STAR||(LA234_0 >= TOPCENTER_SYM && LA234_0 <= TOPRIGHT_SYM)||LA234_0==VARIABLE||LA234_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt234=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 234, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(234);}

					switch (alt234) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:20: {...}? ( SEMI ( ws )? )
							{
							dbg.location(765,20);
							if ( !(evalPredicate(semiRequired,"semiRequired")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "page", "semiRequired");
							}dbg.location(765,36);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:36: ( SEMI ( ws )? )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:37: SEMI ( ws )?
							{
							dbg.location(765,37);
							match(input,SEMI,FOLLOW_SEMI_in_page4385); if (state.failed) return;dbg.location(765,42);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:42: ( ws )?
							int alt231=2;
							try { dbg.enterSubRule(231);
							try { dbg.enterDecision(231, decisionCanBacktrack[231]);

							int LA231_0 = input.LA(1);
							if ( (LA231_0==COMMENT||LA231_0==NL||LA231_0==WS) ) {
								alt231=1;
							}
							} finally {dbg.exitDecision(231);}

							switch (alt231) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:42: ws
									{
									dbg.location(765,42);
									pushFollow(FOLLOW_ws_in_page4387);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(231);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:49: ( SEMI ( ws )? )?
							{
							dbg.location(765,49);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:49: ( SEMI ( ws )? )?
							int alt233=2;
							try { dbg.enterSubRule(233);
							try { dbg.enterDecision(233, decisionCanBacktrack[233]);

							int LA233_0 = input.LA(1);
							if ( (LA233_0==SEMI) ) {
								alt233=1;
							}
							} finally {dbg.exitDecision(233);}

							switch (alt233) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:50: SEMI ( ws )?
									{
									dbg.location(765,50);
									match(input,SEMI,FOLLOW_SEMI_in_page4394); if (state.failed) return;dbg.location(765,55);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:55: ( ws )?
									int alt232=2;
									try { dbg.enterSubRule(232);
									try { dbg.enterDecision(232, decisionCanBacktrack[232]);

									int LA232_0 = input.LA(1);
									if ( (LA232_0==COMMENT||LA232_0==NL||LA232_0==WS) ) {
										alt232=1;
									}
									} finally {dbg.exitDecision(232);}

									switch (alt232) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:55: ws
											{
											dbg.location(765,55);
											pushFollow(FOLLOW_ws_in_page4396);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(232);}

									}
									break;

							}
							} finally {dbg.exitSubRule(233);}

							}
							break;

					}
					} finally {dbg.exitSubRule(234);}
					dbg.location(765,62);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:62: ( propertyDeclaration | margin )
					int alt235=2;
					try { dbg.enterSubRule(235);
					try { dbg.enterDecision(235, decisionCanBacktrack[235]);

					try {
						isCyclicDecision = true;
						alt235 = dfa235.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(235);}

					switch (alt235) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:63: propertyDeclaration
							{
							dbg.location(765,63);
							pushFollow(FOLLOW_propertyDeclaration_in_page4403);
							propertyDeclaration();
							state._fsp--;
							if (state.failed) return;dbg.location(765,82);
							if ( state.backtracking==0 ) {semiRequired=true;}
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:103: margin
							{
							dbg.location(765,103);
							pushFollow(FOLLOW_margin_in_page4406);
							margin();
							state._fsp--;
							if (state.failed) return;dbg.location(765,109);
							if ( state.backtracking==0 ) {semiRequired=false;}
							}
							break;

					}
					} finally {dbg.exitSubRule(235);}

					}
					break;

				default :
					break loop236;
				}
			}
			} finally {dbg.exitSubRule(236);}
			dbg.location(766,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:766:13: ( SEMI )?
			int alt237=2;
			try { dbg.enterSubRule(237);
			try { dbg.enterDecision(237, decisionCanBacktrack[237]);

			int LA237_0 = input.LA(1);
			if ( (LA237_0==SEMI) ) {
				alt237=1;
			}
			} finally {dbg.exitDecision(237);}

			switch (alt237) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:766:13: SEMI
					{
					dbg.location(766,13);
					match(input,SEMI,FOLLOW_SEMI_in_page4424); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(237);}
			dbg.location(767,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:767:13: ( ws )?
			int alt238=2;
			try { dbg.enterSubRule(238);
			try { dbg.enterDecision(238, decisionCanBacktrack[238]);

			int LA238_0 = input.LA(1);
			if ( (LA238_0==COMMENT||LA238_0==NL||LA238_0==WS) ) {
				alt238=1;
			}
			} finally {dbg.exitDecision(238);}

			switch (alt238) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:767:13: ws
					{
					dbg.location(767,13);
					pushFollow(FOLLOW_ws_in_page4439);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(238);}
			dbg.location(768,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_page4450); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(769, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "page");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "page"



	// $ANTLR start "counterStyle"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:771:1: counterStyle : COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void counterStyle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "counterStyle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(771, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:772:5: ( COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:772:7: COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(772,7);
			match(input,COUNTER_STYLE_SYM,FOLLOW_COUNTER_STYLE_SYM_in_counterStyle4467); if (state.failed) return;dbg.location(772,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:772:25: ( ws )?
			int alt239=2;
			try { dbg.enterSubRule(239);
			try { dbg.enterDecision(239, decisionCanBacktrack[239]);

			int LA239_0 = input.LA(1);
			if ( (LA239_0==COMMENT||LA239_0==NL||LA239_0==WS) ) {
				alt239=1;
			}
			} finally {dbg.exitDecision(239);}

			switch (alt239) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:772:25: ws
					{
					dbg.location(772,25);
					pushFollow(FOLLOW_ws_in_counterStyle4469);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(239);}
			dbg.location(772,29);
			match(input,IDENT,FOLLOW_IDENT_in_counterStyle4472); if (state.failed) return;dbg.location(772,35);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:772:35: ( ws )?
			int alt240=2;
			try { dbg.enterSubRule(240);
			try { dbg.enterDecision(240, decisionCanBacktrack[240]);

			int LA240_0 = input.LA(1);
			if ( (LA240_0==COMMENT||LA240_0==NL||LA240_0==WS) ) {
				alt240=1;
			}
			} finally {dbg.exitDecision(240);}

			switch (alt240) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:772:35: ws
					{
					dbg.location(772,35);
					pushFollow(FOLLOW_ws_in_counterStyle4474);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(240);}
			dbg.location(773,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_counterStyle4485); if (state.failed) return;dbg.location(773,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:773:16: ( ws )?
			int alt241=2;
			try { dbg.enterSubRule(241);
			try { dbg.enterDecision(241, decisionCanBacktrack[241]);

			int LA241_0 = input.LA(1);
			if ( (LA241_0==COMMENT||LA241_0==NL||LA241_0==WS) ) {
				alt241=1;
			}
			} finally {dbg.exitDecision(241);}

			switch (alt241) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:773:16: ws
					{
					dbg.location(773,16);
					pushFollow(FOLLOW_ws_in_counterStyle4487);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(241);}
			dbg.location(773,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_counterStyle4490);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(774,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:774:3: ( declarations )?
			int alt242=2;
			try { dbg.enterSubRule(242);
			try { dbg.enterDecision(242, decisionCanBacktrack[242]);

			int LA242_0 = input.LA(1);
			if ( ((LA242_0 >= AT_IDENT && LA242_0 <= AT_SIGN)||(LA242_0 >= BOTTOMCENTER_SYM && LA242_0 <= BOTTOMRIGHT_SYM)||(LA242_0 >= CHARSET_SYM && LA242_0 <= COLON)||LA242_0==CONTAINER_SYM||LA242_0==COUNTER_STYLE_SYM||(LA242_0 >= DCOLON && LA242_0 <= DOT)||LA242_0==FONT_FACE_SYM||(LA242_0 >= GEN && LA242_0 <= GREATER)||(LA242_0 >= HASH && LA242_0 <= HASH_SYMBOL)||LA242_0==IDENT||LA242_0==IMPORT_SYM||LA242_0==LAYER_SYM||(LA242_0 >= LBRACKET && LA242_0 <= LEFTTOP_SYM)||LA242_0==LESS_AND||(LA242_0 >= MEDIA_SYM && LA242_0 <= MOZ_DOCUMENT_SYM)||LA242_0==NAMESPACE_SYM||LA242_0==PAGE_SYM||(LA242_0 >= PIPE && LA242_0 <= PLUS)||(LA242_0 >= RIGHTBOTTOM_SYM && LA242_0 <= RIGHTTOP_SYM)||(LA242_0 >= SASS_AT_ROOT && LA242_0 <= SASS_DEBUG)||(LA242_0 >= SASS_EACH && LA242_0 <= SASS_ELSE)||(LA242_0 >= SASS_ERROR && LA242_0 <= SASS_FUNCTION)||(LA242_0 >= SASS_IF && LA242_0 <= SASS_MIXIN)||(LA242_0 >= SASS_RETURN && LA242_0 <= SEMI)||LA242_0==STAR||LA242_0==SUPPORTS_SYM||LA242_0==TILDE||(LA242_0 >= TOPCENTER_SYM && LA242_0 <= TOPRIGHT_SYM)||LA242_0==VARIABLE||LA242_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt242=1;
			}
			} finally {dbg.exitDecision(242);}

			switch (alt242) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:774:3: declarations
					{
					dbg.location(774,3);
					pushFollow(FOLLOW_declarations_in_counterStyle4494);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(242);}
			dbg.location(775,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_counterStyle4505); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(776, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "counterStyle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "counterStyle"



	// $ANTLR start "fontFace"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:778:1: fontFace : FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void fontFace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fontFace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(778, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:779:5: ( FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:779:7: FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(779,7);
			match(input,FONT_FACE_SYM,FOLLOW_FONT_FACE_SYM_in_fontFace4522); if (state.failed) return;dbg.location(779,21);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:779:21: ( ws )?
			int alt243=2;
			try { dbg.enterSubRule(243);
			try { dbg.enterDecision(243, decisionCanBacktrack[243]);

			int LA243_0 = input.LA(1);
			if ( (LA243_0==COMMENT||LA243_0==NL||LA243_0==WS) ) {
				alt243=1;
			}
			} finally {dbg.exitDecision(243);}

			switch (alt243) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:779:21: ws
					{
					dbg.location(779,21);
					pushFollow(FOLLOW_ws_in_fontFace4524);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(243);}
			dbg.location(780,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_fontFace4535); if (state.failed) return;dbg.location(780,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:780:16: ( ws )?
			int alt244=2;
			try { dbg.enterSubRule(244);
			try { dbg.enterDecision(244, decisionCanBacktrack[244]);

			int LA244_0 = input.LA(1);
			if ( (LA244_0==COMMENT||LA244_0==NL||LA244_0==WS) ) {
				alt244=1;
			}
			} finally {dbg.exitDecision(244);}

			switch (alt244) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:780:16: ws
					{
					dbg.location(780,16);
					pushFollow(FOLLOW_ws_in_fontFace4537);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(244);}
			dbg.location(780,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_fontFace4540);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(781,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:781:3: ( declarations )?
			int alt245=2;
			try { dbg.enterSubRule(245);
			try { dbg.enterDecision(245, decisionCanBacktrack[245]);

			int LA245_0 = input.LA(1);
			if ( ((LA245_0 >= AT_IDENT && LA245_0 <= AT_SIGN)||(LA245_0 >= BOTTOMCENTER_SYM && LA245_0 <= BOTTOMRIGHT_SYM)||(LA245_0 >= CHARSET_SYM && LA245_0 <= COLON)||LA245_0==CONTAINER_SYM||LA245_0==COUNTER_STYLE_SYM||(LA245_0 >= DCOLON && LA245_0 <= DOT)||LA245_0==FONT_FACE_SYM||(LA245_0 >= GEN && LA245_0 <= GREATER)||(LA245_0 >= HASH && LA245_0 <= HASH_SYMBOL)||LA245_0==IDENT||LA245_0==IMPORT_SYM||LA245_0==LAYER_SYM||(LA245_0 >= LBRACKET && LA245_0 <= LEFTTOP_SYM)||LA245_0==LESS_AND||(LA245_0 >= MEDIA_SYM && LA245_0 <= MOZ_DOCUMENT_SYM)||LA245_0==NAMESPACE_SYM||LA245_0==PAGE_SYM||(LA245_0 >= PIPE && LA245_0 <= PLUS)||(LA245_0 >= RIGHTBOTTOM_SYM && LA245_0 <= RIGHTTOP_SYM)||(LA245_0 >= SASS_AT_ROOT && LA245_0 <= SASS_DEBUG)||(LA245_0 >= SASS_EACH && LA245_0 <= SASS_ELSE)||(LA245_0 >= SASS_ERROR && LA245_0 <= SASS_FUNCTION)||(LA245_0 >= SASS_IF && LA245_0 <= SASS_MIXIN)||(LA245_0 >= SASS_RETURN && LA245_0 <= SEMI)||LA245_0==STAR||LA245_0==SUPPORTS_SYM||LA245_0==TILDE||(LA245_0 >= TOPCENTER_SYM && LA245_0 <= TOPRIGHT_SYM)||LA245_0==VARIABLE||LA245_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt245=1;
			}
			} finally {dbg.exitDecision(245);}

			switch (alt245) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:781:3: declarations
					{
					dbg.location(781,3);
					pushFollow(FOLLOW_declarations_in_fontFace4544);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(245);}
			dbg.location(782,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_fontFace4555); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(783, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fontFace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fontFace"



	// $ANTLR start "margin"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:785:1: margin : margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void margin() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(785, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:2: ( margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:4: margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(786,4);
			pushFollow(FOLLOW_margin_sym_in_margin4569);
			margin_sym();
			state._fsp--;
			if (state.failed) return;dbg.location(786,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:15: ( ws )?
			int alt246=2;
			try { dbg.enterSubRule(246);
			try { dbg.enterDecision(246, decisionCanBacktrack[246]);

			int LA246_0 = input.LA(1);
			if ( (LA246_0==COMMENT||LA246_0==NL||LA246_0==WS) ) {
				alt246=1;
			}
			} finally {dbg.exitDecision(246);}

			switch (alt246) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:15: ws
					{
					dbg.location(786,15);
					pushFollow(FOLLOW_ws_in_margin4571);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(246);}
			dbg.location(786,19);
			match(input,LBRACE,FOLLOW_LBRACE_in_margin4574); if (state.failed) return;dbg.location(786,26);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:26: ( ws )?
			int alt247=2;
			try { dbg.enterSubRule(247);
			try { dbg.enterDecision(247, decisionCanBacktrack[247]);

			int LA247_0 = input.LA(1);
			if ( (LA247_0==COMMENT||LA247_0==NL||LA247_0==WS) ) {
				alt247=1;
			}
			} finally {dbg.exitDecision(247);}

			switch (alt247) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:26: ws
					{
					dbg.location(786,26);
					pushFollow(FOLLOW_ws_in_margin4576);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(247);}
			dbg.location(786,30);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_margin4579);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(786,53);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:53: ( declarations )?
			int alt248=2;
			try { dbg.enterSubRule(248);
			try { dbg.enterDecision(248, decisionCanBacktrack[248]);

			int LA248_0 = input.LA(1);
			if ( ((LA248_0 >= AT_IDENT && LA248_0 <= AT_SIGN)||(LA248_0 >= BOTTOMCENTER_SYM && LA248_0 <= BOTTOMRIGHT_SYM)||(LA248_0 >= CHARSET_SYM && LA248_0 <= COLON)||LA248_0==CONTAINER_SYM||LA248_0==COUNTER_STYLE_SYM||(LA248_0 >= DCOLON && LA248_0 <= DOT)||LA248_0==FONT_FACE_SYM||(LA248_0 >= GEN && LA248_0 <= GREATER)||(LA248_0 >= HASH && LA248_0 <= HASH_SYMBOL)||LA248_0==IDENT||LA248_0==IMPORT_SYM||LA248_0==LAYER_SYM||(LA248_0 >= LBRACKET && LA248_0 <= LEFTTOP_SYM)||LA248_0==LESS_AND||(LA248_0 >= MEDIA_SYM && LA248_0 <= MOZ_DOCUMENT_SYM)||LA248_0==NAMESPACE_SYM||LA248_0==PAGE_SYM||(LA248_0 >= PIPE && LA248_0 <= PLUS)||(LA248_0 >= RIGHTBOTTOM_SYM && LA248_0 <= RIGHTTOP_SYM)||(LA248_0 >= SASS_AT_ROOT && LA248_0 <= SASS_DEBUG)||(LA248_0 >= SASS_EACH && LA248_0 <= SASS_ELSE)||(LA248_0 >= SASS_ERROR && LA248_0 <= SASS_FUNCTION)||(LA248_0 >= SASS_IF && LA248_0 <= SASS_MIXIN)||(LA248_0 >= SASS_RETURN && LA248_0 <= SEMI)||LA248_0==STAR||LA248_0==SUPPORTS_SYM||LA248_0==TILDE||(LA248_0 >= TOPCENTER_SYM && LA248_0 <= TOPRIGHT_SYM)||LA248_0==VARIABLE||LA248_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt248=1;
			}
			} finally {dbg.exitDecision(248);}

			switch (alt248) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:53: declarations
					{
					dbg.location(786,53);
					pushFollow(FOLLOW_declarations_in_margin4581);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(248);}
			dbg.location(786,67);
			match(input,RBRACE,FOLLOW_RBRACE_in_margin4584); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(787, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin"



	// $ANTLR start "margin_sym"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:789:1: margin_sym : ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM );
	public final void margin_sym() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin_sym");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(789, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:790:2: ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(790,2);
			if ( (input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(807, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin_sym");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin_sym"



	// $ANTLR start "pseudoPage"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:809:1: pseudoPage : COLON IDENT ;
	public final void pseudoPage() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudoPage");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(809, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:810:5: ( COLON IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:810:7: COLON IDENT
			{
			dbg.location(810,7);
			match(input,COLON,FOLLOW_COLON_in_pseudoPage4793); if (state.failed) return;dbg.location(810,13);
			match(input,IDENT,FOLLOW_IDENT_in_pseudoPage4795); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(811, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudoPage");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudoPage"



	// $ANTLR start "operator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:813:1: operator : ( SOLIDUS | COMMA );
	public final void operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(813, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:814:5: ( SOLIDUS | COMMA )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(814,5);
			if ( input.LA(1)==COMMA||input.LA(1)==SOLIDUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(816, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "operator"



	// $ANTLR start "unaryOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:818:1: unaryOperator : ( MINUS | PLUS );
	public final void unaryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "unaryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(818, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:819:5: ( MINUS | PLUS )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(819,5);
			if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(821, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "unaryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "unaryOperator"



	// $ANTLR start "property"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:823:1: property : ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | VARIABLE | IDENT | GEN |{...}? cp_variable );
	public final void property() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "property");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(823, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:824:5: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | VARIABLE | IDENT | GEN |{...}? cp_variable )
			int alt249=6;
			try { dbg.enterDecision(249, decisionCanBacktrack[249]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				switch ( input.LA(2) ) {
				case DOT:
					{
					alt249=6;
					}
					break;
				case HASH_SYMBOL:
					{
					alt249=1;
					}
					break;
				case AT_SIGN:
					{
					alt249=2;
					}
					break;
				case COLON:
				case COMMENT:
				case NL:
				case WS:
					{
					alt249=4;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 249, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH_SYMBOL:
				{
				alt249=1;
				}
				break;
			case AT_SIGN:
				{
				alt249=2;
				}
				break;
			case VARIABLE:
				{
				alt249=3;
				}
				break;
			case MINUS:
				{
				int LA249_5 = input.LA(2);
				if ( (LA249_5==HASH_SYMBOL) ) {
					alt249=1;
				}
				else if ( (LA249_5==AT_SIGN) ) {
					alt249=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 249, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				alt249=5;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt249=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 249, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(249);}

			switch (alt249) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:828:5: {...}? sass_selector_interpolation_exp
					{
					dbg.location(828,5);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isScssSource()");
					}dbg.location(828,23);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_property4879);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:829:7: {...}? less_selector_interpolation_exp
					{
					dbg.location(829,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isLessSource()");
					}dbg.location(829,25);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_property4889);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:7: VARIABLE
					{
					dbg.location(830,7);
					match(input,VARIABLE,FOLLOW_VARIABLE_in_property4897); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:831:7: IDENT
					{
					dbg.location(831,7);
					match(input,IDENT,FOLLOW_IDENT_in_property4905); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:832:7: GEN
					{
					dbg.location(832,7);
					match(input,GEN,FOLLOW_GEN_in_property4913); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:7: {...}? cp_variable
					{
					dbg.location(833,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isCssPreprocessorSource()");
					}dbg.location(833,36);
					pushFollow(FOLLOW_cp_variable_in_property4923);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(COLON));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(835, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "property");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "property"



	// $ANTLR start "sass_map"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:1: sass_map : sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* ;
	public final void sass_map() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(840, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:5: ( sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:5: sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			{
			dbg.location(842,5);
			pushFollow(FOLLOW_sass_map_name_in_sass_map4950);
			sass_map_name();
			state._fsp--;
			if (state.failed) return;dbg.location(842,19);
			match(input,COLON,FOLLOW_COLON_in_sass_map4952); if (state.failed) return;dbg.location(842,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:25: ( ws )?
			int alt250=2;
			try { dbg.enterSubRule(250);
			try { dbg.enterDecision(250, decisionCanBacktrack[250]);

			int LA250_0 = input.LA(1);
			if ( (LA250_0==COMMENT||LA250_0==NL||LA250_0==WS) ) {
				alt250=1;
			}
			} finally {dbg.exitDecision(250);}

			switch (alt250) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:25: ws
					{
					dbg.location(842,25);
					pushFollow(FOLLOW_ws_in_sass_map4954);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(250);}
			dbg.location(842,29);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_map4957); if (state.failed) return;dbg.location(842,36);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:36: ( ws )?
			int alt251=2;
			try { dbg.enterSubRule(251);
			try { dbg.enterDecision(251, decisionCanBacktrack[251]);

			int LA251_0 = input.LA(1);
			if ( (LA251_0==COMMENT||LA251_0==NL||LA251_0==WS) ) {
				alt251=1;
			}
			} finally {dbg.exitDecision(251);}

			switch (alt251) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:36: ws
					{
					dbg.location(842,36);
					pushFollow(FOLLOW_ws_in_sass_map4959);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(251);}
			dbg.location(842,40);
			pushFollow(FOLLOW_syncToFollow_in_sass_map4962);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(844,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:9: ( sass_map_pairs )?
			int alt252=2;
			try { dbg.enterSubRule(252);
			try { dbg.enterDecision(252, decisionCanBacktrack[252]);

			int LA252_0 = input.LA(1);
			if ( ((LA252_0 >= AT_IDENT && LA252_0 <= AT_SIGN)||(LA252_0 >= BOTTOMCENTER_SYM && LA252_0 <= BOTTOMRIGHT_SYM)||LA252_0==CHARSET_SYM||LA252_0==COMMA||LA252_0==COUNTER_STYLE_SYM||LA252_0==FONT_FACE_SYM||LA252_0==GEN||LA252_0==HASH_SYMBOL||LA252_0==IDENT||LA252_0==IMPORT_SYM||(LA252_0 >= LEFTBOTTOM_SYM && LA252_0 <= LEFTTOP_SYM)||(LA252_0 >= MEDIA_SYM && LA252_0 <= MOZ_DOCUMENT_SYM)||LA252_0==NAMESPACE_SYM||LA252_0==NUMBER||LA252_0==PAGE_SYM||(LA252_0 >= RIGHTBOTTOM_SYM && LA252_0 <= RIGHTTOP_SYM)||(LA252_0 >= SASS_AT_ROOT && LA252_0 <= SASS_DEBUG)||(LA252_0 >= SASS_EACH && LA252_0 <= SASS_ELSE)||LA252_0==SASS_EXTEND||(LA252_0 >= SASS_FOR && LA252_0 <= SASS_FUNCTION)||(LA252_0 >= SASS_IF && LA252_0 <= SASS_MIXIN)||(LA252_0 >= SASS_RETURN && LA252_0 <= SASS_WHILE)||LA252_0==STRING||(LA252_0 >= TOPCENTER_SYM && LA252_0 <= TOPRIGHT_SYM)||LA252_0==VARIABLE||LA252_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt252=1;
			}
			} finally {dbg.exitDecision(252);}

			switch (alt252) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:9: sass_map_pairs
					{
					dbg.location(844,9);
					pushFollow(FOLLOW_sass_map_pairs_in_sass_map4981);
					sass_map_pairs();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(252);}
			dbg.location(845,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_map4988); if (state.failed) return;dbg.location(845,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			try { dbg.enterSubRule(255);

			loop255:
			while (true) {
				int alt255=3;
				try { dbg.enterDecision(255, decisionCanBacktrack[255]);

				try {
					isCyclicDecision = true;
					alt255 = dfa255.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(255);}

				switch (alt255) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:13: ( ( ws )? SASS_DEFAULT )
					{
					dbg.location(845,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:13: ( ( ws )? SASS_DEFAULT )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:14: ( ws )? SASS_DEFAULT
					{
					dbg.location(845,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:14: ( ws )?
					int alt253=2;
					try { dbg.enterSubRule(253);
					try { dbg.enterDecision(253, decisionCanBacktrack[253]);

					int LA253_0 = input.LA(1);
					if ( (LA253_0==COMMENT||LA253_0==NL||LA253_0==WS) ) {
						alt253=1;
					}
					} finally {dbg.exitDecision(253);}

					switch (alt253) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:14: ws
							{
							dbg.location(845,14);
							pushFollow(FOLLOW_ws_in_sass_map4992);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(253);}
					dbg.location(845,18);
					match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_sass_map4995); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:34: ( ( ws )? SASS_GLOBAL )
					{
					dbg.location(845,34);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:34: ( ( ws )? SASS_GLOBAL )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:35: ( ws )? SASS_GLOBAL
					{
					dbg.location(845,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:35: ( ws )?
					int alt254=2;
					try { dbg.enterSubRule(254);
					try { dbg.enterDecision(254, decisionCanBacktrack[254]);

					int LA254_0 = input.LA(1);
					if ( (LA254_0==COMMENT||LA254_0==NL||LA254_0==WS) ) {
						alt254=1;
					}
					} finally {dbg.exitDecision(254);}

					switch (alt254) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:35: ws
							{
							dbg.location(845,35);
							pushFollow(FOLLOW_ws_in_sass_map5001);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(254);}
					dbg.location(845,39);
					match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_sass_map5004); if (state.failed) return;
					}

					}
					break;

				default :
					break loop255;
				}
			}
			} finally {dbg.exitSubRule(255);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(846, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map"



	// $ANTLR start "sass_map_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:848:1: sass_map_name : cp_variable ;
	public final void sass_map_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(848, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:5: ( cp_variable )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:850:5: cp_variable
			{
			dbg.location(850,5);
			pushFollow(FOLLOW_cp_variable_in_sass_map_name5028);
			cp_variable();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(851, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_name"



	// $ANTLR start "sass_map_pairs"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:1: sass_map_pairs : ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ ;
	public final void sass_map_pairs() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pairs");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(853, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:854:5: ( ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:855:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			{
			dbg.location(855,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:855:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			int cnt260=0;
			try { dbg.enterSubRule(260);

			loop260:
			while (true) {
				int alt260=3;
				try { dbg.enterDecision(260, decisionCanBacktrack[260]);

				int LA260_0 = input.LA(1);
				if ( ((LA260_0 >= AT_IDENT && LA260_0 <= AT_SIGN)||(LA260_0 >= BOTTOMCENTER_SYM && LA260_0 <= BOTTOMRIGHT_SYM)||LA260_0==CHARSET_SYM||LA260_0==COUNTER_STYLE_SYM||LA260_0==FONT_FACE_SYM||LA260_0==GEN||LA260_0==HASH_SYMBOL||LA260_0==IDENT||LA260_0==IMPORT_SYM||(LA260_0 >= LEFTBOTTOM_SYM && LA260_0 <= LEFTTOP_SYM)||(LA260_0 >= MEDIA_SYM && LA260_0 <= MOZ_DOCUMENT_SYM)||LA260_0==NAMESPACE_SYM||LA260_0==NUMBER||LA260_0==PAGE_SYM||(LA260_0 >= RIGHTBOTTOM_SYM && LA260_0 <= RIGHTTOP_SYM)||(LA260_0 >= SASS_AT_ROOT && LA260_0 <= SASS_DEBUG)||(LA260_0 >= SASS_EACH && LA260_0 <= SASS_ELSE)||LA260_0==SASS_EXTEND||(LA260_0 >= SASS_FOR && LA260_0 <= SASS_FUNCTION)||(LA260_0 >= SASS_IF && LA260_0 <= SASS_MIXIN)||(LA260_0 >= SASS_RETURN && LA260_0 <= SASS_WHILE)||LA260_0==STRING||(LA260_0 >= TOPCENTER_SYM && LA260_0 <= TOPRIGHT_SYM)||LA260_0==VARIABLE||LA260_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt260=1;
				}
				else if ( (LA260_0==COMMA) ) {
					alt260=2;
				}

				} finally {dbg.exitDecision(260);}

				switch (alt260) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					{
					dbg.location(856,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:12: sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )?
					{
					dbg.location(856,12);
					pushFollow(FOLLOW_sass_map_pair_in_sass_map_pairs5062);
					sass_map_pair();
					state._fsp--;
					if (state.failed) return;dbg.location(856,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?
					int alt257=2;
					try { dbg.enterSubRule(257);
					try { dbg.enterDecision(257, decisionCanBacktrack[257]);

					try {
						isCyclicDecision = true;
						alt257 = dfa257.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(257);}

					switch (alt257) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:27: ( ( ws )? COMMA )=> ( ws )? COMMA
							{
							dbg.location(856,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:40: ( ws )?
							int alt256=2;
							try { dbg.enterSubRule(256);
							try { dbg.enterDecision(256, decisionCanBacktrack[256]);

							int LA256_0 = input.LA(1);
							if ( (LA256_0==COMMENT||LA256_0==NL||LA256_0==WS) ) {
								alt256=1;
							}
							} finally {dbg.exitDecision(256);}

							switch (alt256) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:40: ws
									{
									dbg.location(856,40);
									pushFollow(FOLLOW_ws_in_sass_map_pairs5072);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(256);}
							dbg.location(856,44);
							match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs5075); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(257);}
					dbg.location(856,52);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:52: ( ws )?
					int alt258=2;
					try { dbg.enterSubRule(258);
					try { dbg.enterDecision(258, decisionCanBacktrack[258]);

					int LA258_0 = input.LA(1);
					if ( (LA258_0==COMMENT||LA258_0==NL||LA258_0==WS) ) {
						alt258=1;
					}
					} finally {dbg.exitDecision(258);}

					switch (alt258) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:52: ws
							{
							dbg.location(856,52);
							pushFollow(FOLLOW_ws_in_sass_map_pairs5079);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(258);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:10: ( COMMA ( ws )? )
					{
					dbg.location(858,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:10: ( COMMA ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:12: COMMA ( ws )?
					{
					dbg.location(858,12);
					match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs5106); if (state.failed) return;dbg.location(858,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:18: ( ws )?
					int alt259=2;
					try { dbg.enterSubRule(259);
					try { dbg.enterDecision(259, decisionCanBacktrack[259]);

					int LA259_0 = input.LA(1);
					if ( (LA259_0==COMMENT||LA259_0==NL||LA259_0==WS) ) {
						alt259=1;
					}
					} finally {dbg.exitDecision(259);}

					switch (alt259) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:18: ws
							{
							dbg.location(858,18);
							pushFollow(FOLLOW_ws_in_sass_map_pairs5108);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(259);}

					}

					}
					break;

				default :
					if ( cnt260 >= 1 ) break loop260;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(260, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt260++;
			}
			} finally {dbg.exitSubRule(260);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(860, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pairs");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pairs"



	// $ANTLR start "sass_map_pair"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:862:1: sass_map_pair : ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? ;
	public final void sass_map_pair() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pair");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(862, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:863:5: ( ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:9: ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )?
			{
			dbg.location(864,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:9: ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map )
			int alt263=5;
			try { dbg.enterSubRule(263);
			try { dbg.enterDecision(263, decisionCanBacktrack[263]);

			switch ( input.LA(1) ) {
			case NUMBER:
				{
				alt263=1;
				}
				break;
			case STRING:
				{
				alt263=2;
				}
				break;
			case IDENT:
				{
				int LA263_3 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt263=3;
				}
				else if ( (true) ) {
					alt263=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt263=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 263, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case GEN:
			case HASH_SYMBOL:
			case MINUS:
			case VARIABLE:
				{
				alt263=4;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA263_9 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt263=4;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt263=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 263, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA263_10 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt263=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt263=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 263, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 263, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(263);}

			switch (alt263) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:10: NUMBER
					{
					dbg.location(864,10);
					match(input,NUMBER,FOLLOW_NUMBER_in_sass_map_pair5144); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:17: ( STRING ( ( ws )? STRING )* )
					{
					dbg.location(864,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:17: ( STRING ( ( ws )? STRING )* )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:18: STRING ( ( ws )? STRING )*
					{
					dbg.location(864,18);
					match(input,STRING,FOLLOW_STRING_in_sass_map_pair5147); if (state.failed) return;dbg.location(864,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:25: ( ( ws )? STRING )*
					try { dbg.enterSubRule(262);

					loop262:
					while (true) {
						int alt262=2;
						try { dbg.enterDecision(262, decisionCanBacktrack[262]);

						try {
							isCyclicDecision = true;
							alt262 = dfa262.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(262);}

						switch (alt262) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:26: ( ws )? STRING
							{
							dbg.location(864,26);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:26: ( ws )?
							int alt261=2;
							try { dbg.enterSubRule(261);
							try { dbg.enterDecision(261, decisionCanBacktrack[261]);

							int LA261_0 = input.LA(1);
							if ( (LA261_0==COMMENT||LA261_0==NL||LA261_0==WS) ) {
								alt261=1;
							}
							} finally {dbg.exitDecision(261);}

							switch (alt261) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:26: ws
									{
									dbg.location(864,26);
									pushFollow(FOLLOW_ws_in_sass_map_pair5150);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(261);}
							dbg.location(864,30);
							match(input,STRING,FOLLOW_STRING_in_sass_map_pair5153); if (state.failed) return;
							}
							break;

						default :
							break loop262;
						}
					}
					} finally {dbg.exitSubRule(262);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:40: ( ( function )=> function )
					{
					dbg.location(864,40);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:40: ( ( function )=> function )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:41: ( function )=> function
					{
					dbg.location(864,53);
					pushFollow(FOLLOW_function_in_sass_map_pair5163);
					function();
					state._fsp--;
					if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:63: property
					{
					dbg.location(864,63);
					pushFollow(FOLLOW_property_in_sass_map_pair5166);
					property();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:72: sass_map
					{
					dbg.location(864,72);
					pushFollow(FOLLOW_sass_map_in_sass_map_pair5168);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(263);}
			dbg.location(864,82);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:82: ( ws )?
			int alt264=2;
			try { dbg.enterSubRule(264);
			try { dbg.enterDecision(264, decisionCanBacktrack[264]);

			int LA264_0 = input.LA(1);
			if ( (LA264_0==COMMENT||LA264_0==NL||LA264_0==WS) ) {
				alt264=1;
			}
			} finally {dbg.exitDecision(264);}

			switch (alt264) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:82: ws
					{
					dbg.location(864,82);
					pushFollow(FOLLOW_ws_in_sass_map_pair5171);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(264);}
			dbg.location(864,86);
			match(input,COLON,FOLLOW_COLON_in_sass_map_pair5174); if (state.failed) return;dbg.location(864,92);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:92: ( ws )?
			int alt265=2;
			try { dbg.enterSubRule(265);
			try { dbg.enterDecision(265, decisionCanBacktrack[265]);

			int LA265_0 = input.LA(1);
			if ( (LA265_0==COMMENT||LA265_0==NL||LA265_0==WS) ) {
				alt265=1;
			}
			} finally {dbg.exitDecision(265);}

			switch (alt265) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:92: ws
					{
					dbg.location(864,92);
					pushFollow(FOLLOW_ws_in_sass_map_pair5176);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(265);}
			dbg.location(864,96);
			pushFollow(FOLLOW_cp_expression_in_sass_map_pair5179);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(864,110);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:110: ( ( ws )? prio )?
			int alt267=2;
			try { dbg.enterSubRule(267);
			try { dbg.enterDecision(267, decisionCanBacktrack[267]);

			try {
				isCyclicDecision = true;
				alt267 = dfa267.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(267);}

			switch (alt267) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:111: ( ws )? prio
					{
					dbg.location(864,111);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:111: ( ws )?
					int alt266=2;
					try { dbg.enterSubRule(266);
					try { dbg.enterDecision(266, decisionCanBacktrack[266]);

					int LA266_0 = input.LA(1);
					if ( (LA266_0==COMMENT||LA266_0==NL||LA266_0==WS) ) {
						alt266=1;
					}
					} finally {dbg.exitDecision(266);}

					switch (alt266) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:111: ws
							{
							dbg.location(864,111);
							pushFollow(FOLLOW_ws_in_sass_map_pair5182);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(266);}
					dbg.location(864,115);
					pushFollow(FOLLOW_prio_in_sass_map_pair5185);
					prio();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(267);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(865, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pair");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pair"



	// $ANTLR start "rule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:1: rule : ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(867, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:5: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:869:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(869,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:869:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
			int alt273=3;
			try { dbg.enterSubRule(273);
			try { dbg.enterDecision(273, decisionCanBacktrack[273]);

			try {
				isCyclicDecision = true;
				alt273 = dfa273.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(273);}

			switch (alt273) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:870:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					{
					dbg.location(870,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:870:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:870:14: SASS_AT_ROOT ( ws selectorsGroup )?
					{
					dbg.location(870,14);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule5227); if (state.failed) return;dbg.location(870,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:870:27: ( ws selectorsGroup )?
					int alt268=2;
					try { dbg.enterSubRule(268);
					try { dbg.enterDecision(268, decisionCanBacktrack[268]);

					try {
						isCyclicDecision = true;
						alt268 = dfa268.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(268);}

					switch (alt268) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:870:28: ws selectorsGroup
							{
							dbg.location(870,28);
							pushFollow(FOLLOW_ws_in_rule5230);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(870,31);
							pushFollow(FOLLOW_selectorsGroup_in_rule5232);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(268);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					{
					dbg.location(871,15);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:16: SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
					{
					dbg.location(871,16);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule5253); if (state.failed) return;dbg.location(871,29);
					pushFollow(FOLLOW_ws_in_rule5255);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(871,32);
					match(input,LPAREN,FOLLOW_LPAREN_in_rule5257); if (state.failed) return;dbg.location(871,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:39: ( ws )?
					int alt269=2;
					try { dbg.enterSubRule(269);
					try { dbg.enterDecision(269, decisionCanBacktrack[269]);

					int LA269_0 = input.LA(1);
					if ( (LA269_0==COMMENT||LA269_0==NL||LA269_0==WS) ) {
						alt269=1;
					}
					} finally {dbg.exitDecision(269);}

					switch (alt269) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:39: ws
							{
							dbg.location(871,39);
							pushFollow(FOLLOW_ws_in_rule5259);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(269);}
					dbg.location(871,43);
					if ( !(evalPredicate(tokenNameEquals("without") || tokenNameEquals("with"),"tokenNameEquals(\"without\") || tokenNameEquals(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "rule", "tokenNameEquals(\"without\") || tokenNameEquals(\"with\")");
					}dbg.location(871,100);
					match(input,IDENT,FOLLOW_IDENT_in_rule5264); if (state.failed) return;dbg.location(871,128);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:128: ( ws )?
					int alt270=2;
					try { dbg.enterSubRule(270);
					try { dbg.enterDecision(270, decisionCanBacktrack[270]);

					int LA270_0 = input.LA(1);
					if ( (LA270_0==COMMENT||LA270_0==NL||LA270_0==WS) ) {
						alt270=1;
					}
					} finally {dbg.exitDecision(270);}

					switch (alt270) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:128: ws
							{
							dbg.location(871,128);
							pushFollow(FOLLOW_ws_in_rule5268);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(270);}
					dbg.location(871,132);
					match(input,COLON,FOLLOW_COLON_in_rule5271); if (state.failed) return;dbg.location(871,138);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:138: ( ws )?
					int alt271=2;
					try { dbg.enterSubRule(271);
					try { dbg.enterDecision(271, decisionCanBacktrack[271]);

					int LA271_0 = input.LA(1);
					if ( (LA271_0==COMMENT||LA271_0==NL||LA271_0==WS) ) {
						alt271=1;
					}
					} finally {dbg.exitDecision(271);}

					switch (alt271) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:138: ws
							{
							dbg.location(871,138);
							pushFollow(FOLLOW_ws_in_rule5273);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(271);}
					dbg.location(871,142);
					match(input,IDENT,FOLLOW_IDENT_in_rule5276); if (state.failed) return;dbg.location(871,148);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:148: ( ws )?
					int alt272=2;
					try { dbg.enterSubRule(272);
					try { dbg.enterDecision(272, decisionCanBacktrack[272]);

					int LA272_0 = input.LA(1);
					if ( (LA272_0==COMMENT||LA272_0==NL||LA272_0==WS) ) {
						alt272=1;
					}
					} finally {dbg.exitDecision(272);}

					switch (alt272) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:148: ws
							{
							dbg.location(871,148);
							pushFollow(FOLLOW_ws_in_rule5278);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(272);}
					dbg.location(871,152);
					match(input,RPAREN,FOLLOW_RPAREN_in_rule5281); if (state.failed) return;
					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:872:15: selectorsGroup
					{
					dbg.location(872,15);
					pushFollow(FOLLOW_selectorsGroup_in_rule5299);
					selectorsGroup();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(273);}
			dbg.location(873,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:873:11: ( ws )?
			int alt274=2;
			try { dbg.enterSubRule(274);
			try { dbg.enterDecision(274, decisionCanBacktrack[274]);

			int LA274_0 = input.LA(1);
			if ( (LA274_0==COMMENT||LA274_0==NL||LA274_0==WS) ) {
				alt274=1;
			}
			} finally {dbg.exitDecision(274);}

			switch (alt274) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:873:11: ws
					{
					dbg.location(873,11);
					pushFollow(FOLLOW_ws_in_rule5311);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(274);}
			dbg.location(874,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_rule5318); if (state.failed) return;dbg.location(874,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:874:12: ( ws )?
			int alt275=2;
			try { dbg.enterSubRule(275);
			try { dbg.enterDecision(275, decisionCanBacktrack[275]);

			int LA275_0 = input.LA(1);
			if ( (LA275_0==COMMENT||LA275_0==NL||LA275_0==WS) ) {
				alt275=1;
			}
			} finally {dbg.exitDecision(275);}

			switch (alt275) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:874:12: ws
					{
					dbg.location(874,12);
					pushFollow(FOLLOW_ws_in_rule5320);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(275);}
			dbg.location(874,16);
			pushFollow(FOLLOW_syncToFollow_in_rule5323);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(875,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:875:9: ( declarations )?
			int alt276=2;
			try { dbg.enterSubRule(276);
			try { dbg.enterDecision(276, decisionCanBacktrack[276]);

			int LA276_0 = input.LA(1);
			if ( ((LA276_0 >= AT_IDENT && LA276_0 <= AT_SIGN)||(LA276_0 >= BOTTOMCENTER_SYM && LA276_0 <= BOTTOMRIGHT_SYM)||(LA276_0 >= CHARSET_SYM && LA276_0 <= COLON)||LA276_0==CONTAINER_SYM||LA276_0==COUNTER_STYLE_SYM||(LA276_0 >= DCOLON && LA276_0 <= DOT)||LA276_0==FONT_FACE_SYM||(LA276_0 >= GEN && LA276_0 <= GREATER)||(LA276_0 >= HASH && LA276_0 <= HASH_SYMBOL)||LA276_0==IDENT||LA276_0==IMPORT_SYM||LA276_0==LAYER_SYM||(LA276_0 >= LBRACKET && LA276_0 <= LEFTTOP_SYM)||LA276_0==LESS_AND||(LA276_0 >= MEDIA_SYM && LA276_0 <= MOZ_DOCUMENT_SYM)||LA276_0==NAMESPACE_SYM||LA276_0==PAGE_SYM||(LA276_0 >= PIPE && LA276_0 <= PLUS)||(LA276_0 >= RIGHTBOTTOM_SYM && LA276_0 <= RIGHTTOP_SYM)||(LA276_0 >= SASS_AT_ROOT && LA276_0 <= SASS_DEBUG)||(LA276_0 >= SASS_EACH && LA276_0 <= SASS_ELSE)||(LA276_0 >= SASS_ERROR && LA276_0 <= SASS_FUNCTION)||(LA276_0 >= SASS_IF && LA276_0 <= SASS_MIXIN)||(LA276_0 >= SASS_RETURN && LA276_0 <= SEMI)||LA276_0==STAR||LA276_0==SUPPORTS_SYM||LA276_0==TILDE||(LA276_0 >= TOPCENTER_SYM && LA276_0 <= TOPRIGHT_SYM)||LA276_0==VARIABLE||LA276_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt276=1;
			}
			} finally {dbg.exitDecision(276);}

			switch (alt276) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:875:9: declarations
					{
					dbg.location(875,9);
					pushFollow(FOLLOW_declarations_in_rule5333);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(276);}
			dbg.location(876,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_rule5340); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RBRACE));
			        input.consume(); //consume the RBRACE as well
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(877, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "rule"



	// $ANTLR start "declarations"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:884:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );
	public final void declarations() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declarations");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(884, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:885:5: ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ )
			int alt290=2;
			try { dbg.enterDecision(290, decisionCanBacktrack[290]);

			try {
				isCyclicDecision = true;
				alt290 = dfa290.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(290);}

			switch (alt290) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:8: ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					{
					dbg.location(886,8);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:8: ( SEMI ( ws )? )*
					try { dbg.enterSubRule(278);

					loop278:
					while (true) {
						int alt278=2;
						try { dbg.enterDecision(278, decisionCanBacktrack[278]);

						int LA278_0 = input.LA(1);
						if ( (LA278_0==SEMI) ) {
							alt278=1;
						}

						} finally {dbg.exitDecision(278);}

						switch (alt278) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:9: SEMI ( ws )?
							{
							dbg.location(886,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations5374); if (state.failed) return;dbg.location(886,14);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:14: ( ws )?
							int alt277=2;
							try { dbg.enterSubRule(277);
							try { dbg.enterDecision(277, decisionCanBacktrack[277]);

							int LA277_0 = input.LA(1);
							if ( (LA277_0==COMMENT||LA277_0==NL||LA277_0==WS) ) {
								alt277=1;
							}
							} finally {dbg.exitDecision(277);}

							switch (alt277) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:14: ws
									{
									dbg.location(886,14);
									pushFollow(FOLLOW_ws_in_declarations5376);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(277);}

							}
							break;

						default :
							break loop278;
						}
					}
					} finally {dbg.exitSubRule(278);}
					dbg.location(886,21);
					pushFollow(FOLLOW_declaration_in_declarations5382);
					declaration();
					state._fsp--;
					if (state.failed) return;dbg.location(886,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*
					try { dbg.enterSubRule(283);

					loop283:
					while (true) {
						int alt283=2;
						try { dbg.enterDecision(283, decisionCanBacktrack[283]);

						try {
							isCyclicDecision = true;
							alt283 = dfa283.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(283);}

						switch (alt283) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration
							{
							dbg.location(886,34);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )
							int alt282=2;
							try { dbg.enterSubRule(282);
							try { dbg.enterDecision(282, decisionCanBacktrack[282]);

							try {
								isCyclicDecision = true;
								alt282 = dfa282.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(282);}

							switch (alt282) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:35: ( ( ws )? ( SEMI ( ws )? )+ )
									{
									dbg.location(886,35);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:35: ( ( ws )? ( SEMI ( ws )? )+ )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:36: ( ws )? ( SEMI ( ws )? )+
									{
									dbg.location(886,36);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:36: ( ws )?
									int alt279=2;
									try { dbg.enterSubRule(279);
									try { dbg.enterDecision(279, decisionCanBacktrack[279]);

									int LA279_0 = input.LA(1);
									if ( (LA279_0==COMMENT||LA279_0==NL||LA279_0==WS) ) {
										alt279=1;
									}
									} finally {dbg.exitDecision(279);}

									switch (alt279) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:36: ws
											{
											dbg.location(886,36);
											pushFollow(FOLLOW_ws_in_declarations5387);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(279);}
									dbg.location(886,40);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:40: ( SEMI ( ws )? )+
									int cnt281=0;
									try { dbg.enterSubRule(281);

									loop281:
									while (true) {
										int alt281=2;
										try { dbg.enterDecision(281, decisionCanBacktrack[281]);

										int LA281_0 = input.LA(1);
										if ( (LA281_0==SEMI) ) {
											alt281=1;
										}

										} finally {dbg.exitDecision(281);}

										switch (alt281) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:41: SEMI ( ws )?
											{
											dbg.location(886,41);
											match(input,SEMI,FOLLOW_SEMI_in_declarations5391); if (state.failed) return;dbg.location(886,46);
											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:46: ( ws )?
											int alt280=2;
											try { dbg.enterSubRule(280);
											try { dbg.enterDecision(280, decisionCanBacktrack[280]);

											int LA280_0 = input.LA(1);
											if ( (LA280_0==COMMENT||LA280_0==NL||LA280_0==WS) ) {
												alt280=1;
											}
											} finally {dbg.exitDecision(280);}

											switch (alt280) {
												case 1 :
													dbg.enterAlt(1);

													// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:46: ws
													{
													dbg.location(886,46);
													pushFollow(FOLLOW_ws_in_declarations5393);
													ws();
													state._fsp--;
													if (state.failed) return;
													}
													break;

											}
											} finally {dbg.exitSubRule(280);}

											}
											break;

										default :
											if ( cnt281 >= 1 ) break loop281;
											if (state.backtracking>0) {state.failed=true; return;}
											EarlyExitException eee = new EarlyExitException(281, input);
											dbg.recognitionException(eee);

											throw eee;
										}
										cnt281++;
									}
									} finally {dbg.exitSubRule(281);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:53: ws
									{
									dbg.location(886,53);
									pushFollow(FOLLOW_ws_in_declarations5399);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(282);}
							dbg.location(886,57);
							pushFollow(FOLLOW_declaration_in_declarations5402);
							declaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop283;
						}
					}
					} finally {dbg.exitSubRule(283);}
					dbg.location(886,71);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					int alt287=3;
					try { dbg.enterSubRule(287);
					try { dbg.enterDecision(287, decisionCanBacktrack[287]);

					try {
						isCyclicDecision = true;
						alt287 = dfa287.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(287);}

					switch (alt287) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:72: ( ( ws )? ( SEMI ( ws )? )+ )
							{
							dbg.location(886,72);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:72: ( ( ws )? ( SEMI ( ws )? )+ )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:73: ( ws )? ( SEMI ( ws )? )+
							{
							dbg.location(886,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:73: ( ws )?
							int alt284=2;
							try { dbg.enterSubRule(284);
							try { dbg.enterDecision(284, decisionCanBacktrack[284]);

							int LA284_0 = input.LA(1);
							if ( (LA284_0==COMMENT||LA284_0==NL||LA284_0==WS) ) {
								alt284=1;
							}
							} finally {dbg.exitDecision(284);}

							switch (alt284) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:73: ws
									{
									dbg.location(886,73);
									pushFollow(FOLLOW_ws_in_declarations5408);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(284);}
							dbg.location(886,77);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:77: ( SEMI ( ws )? )+
							int cnt286=0;
							try { dbg.enterSubRule(286);

							loop286:
							while (true) {
								int alt286=2;
								try { dbg.enterDecision(286, decisionCanBacktrack[286]);

								int LA286_0 = input.LA(1);
								if ( (LA286_0==SEMI) ) {
									alt286=1;
								}

								} finally {dbg.exitDecision(286);}

								switch (alt286) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:78: SEMI ( ws )?
									{
									dbg.location(886,78);
									match(input,SEMI,FOLLOW_SEMI_in_declarations5412); if (state.failed) return;dbg.location(886,83);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:83: ( ws )?
									int alt285=2;
									try { dbg.enterSubRule(285);
									try { dbg.enterDecision(285, decisionCanBacktrack[285]);

									int LA285_0 = input.LA(1);
									if ( (LA285_0==COMMENT||LA285_0==NL||LA285_0==WS) ) {
										alt285=1;
									}
									} finally {dbg.exitDecision(285);}

									switch (alt285) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:83: ws
											{
											dbg.location(886,83);
											pushFollow(FOLLOW_ws_in_declarations5414);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(285);}

									}
									break;

								default :
									if ( cnt286 >= 1 ) break loop286;
									if (state.backtracking>0) {state.failed=true; return;}
									EarlyExitException eee = new EarlyExitException(286, input);
									dbg.recognitionException(eee);

									throw eee;
								}
								cnt286++;
							}
							} finally {dbg.exitSubRule(286);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:886:90: ws
							{
							dbg.location(886,90);
							pushFollow(FOLLOW_ws_in_declarations5420);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(287);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:887:8: ( SEMI ( ws )? )+
					{
					dbg.location(887,8);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:887:8: ( SEMI ( ws )? )+
					int cnt289=0;
					try { dbg.enterSubRule(289);

					loop289:
					while (true) {
						int alt289=2;
						try { dbg.enterDecision(289, decisionCanBacktrack[289]);

						int LA289_0 = input.LA(1);
						if ( (LA289_0==SEMI) ) {
							alt289=1;
						}

						} finally {dbg.exitDecision(289);}

						switch (alt289) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:887:9: SEMI ( ws )?
							{
							dbg.location(887,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations5432); if (state.failed) return;dbg.location(887,14);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:887:14: ( ws )?
							int alt288=2;
							try { dbg.enterSubRule(288);
							try { dbg.enterDecision(288, decisionCanBacktrack[288]);

							int LA288_0 = input.LA(1);
							if ( (LA288_0==COMMENT||LA288_0==NL||LA288_0==WS) ) {
								alt288=1;
							}
							} finally {dbg.exitDecision(288);}

							switch (alt288) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:887:14: ws
									{
									dbg.location(887,14);
									pushFollow(FOLLOW_ws_in_declarations5434);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(288);}

							}
							break;

						default :
							if ( cnt289 >= 1 ) break loop289;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(289, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt289++;
					}
					} finally {dbg.exitSubRule(289);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(888, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declarations");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declarations"



	// $ANTLR start "declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:890:1: declaration : ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN );
	public final void declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(890, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:891:5: ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN )
			int alt295=18;
			try { dbg.enterDecision(295, decisionCanBacktrack[295]);

			int LA295_0 = input.LA(1);
			if ( (LA295_0==SASS_AT_ROOT) ) {
				int LA295_1 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (synpred37_Css3()) ) {
					alt295=4;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_VAR) ) {
				int LA295_2 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred36_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred39_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==IDENT) ) {
				int LA295_3 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=2;
				}
				else if ( (synpred36_Css3()) ) {
					alt295=3;
				}
				else if ( (synpred37_Css3()) ) {
					alt295=4;
				}
				else if ( (synpred38_Css3()) ) {
					alt295=5;
				}
				else if ( (synpred39_Css3()) ) {
					alt295=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==MINUS) ) {
				int LA295_4 = input.LA(2);
				if ( ((synpred36_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt295=3;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))&&synpred37_Css3())) ) {
					alt295=4;
				}
				else if ( ((synpred38_Css3()&&((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))||(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt295=5;
				}
				else if ( ((synpred39_Css3()&&((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))||(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt295=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==HASH_SYMBOL) ) {
				int LA295_5 = input.LA(2);
				if ( ((synpred36_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=3;
				}
				else if ( (synpred37_Css3()) ) {
					alt295=4;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=5;
				}
				else if ( ((synpred39_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==AT_SIGN) ) {
				int LA295_6 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt295=4;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred39_Css3())) ) {
					alt295=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==VARIABLE) ) {
				int LA295_7 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt295=3;
				}
				else if ( (synpred38_Css3()) ) {
					alt295=5;
				}
				else if ( (synpred39_Css3()) ) {
					alt295=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==GEN) ) {
				int LA295_8 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt295=3;
				}
				else if ( (synpred37_Css3()) ) {
					alt295=4;
				}
				else if ( (synpred38_Css3()) ) {
					alt295=5;
				}
				else if ( (synpred39_Css3()) ) {
					alt295=6;
				}
				else if ( (true) ) {
					alt295=18;
				}

			}
			else if ( (LA295_0==SASS_MIXIN) ) {
				int LA295_9 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred40_Css3())) ) {
					alt295=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==GREATER||LA295_0==PLUS||LA295_0==TILDE) && (synpred37_Css3())) {
				alt295=4;
			}
			else if ( (LA295_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred37_Css3())) {
				alt295=4;
			}
			else if ( (LA295_0==LESS_AND) ) {
				int LA295_12 = input.LA(2);
				if ( (synpred37_Css3()) ) {
					alt295=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt295=7;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=8;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==HASH) ) {
				int LA295_13 = input.LA(2);
				if ( (synpred37_Css3()) ) {
					alt295=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt295=7;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=8;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==DOT) ) {
				int LA295_14 = input.LA(2);
				if ( (synpred37_Css3()) ) {
					alt295=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt295=7;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=8;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==DIMENSION) && (synpred37_Css3())) {
				alt295=4;
			}
			else if ( (LA295_0==LBRACKET) && (synpred37_Css3())) {
				alt295=4;
			}
			else if ( (LA295_0==COLON||LA295_0==DCOLON) && (synpred37_Css3())) {
				alt295=4;
			}
			else if ( (LA295_0==STAR) ) {
				int LA295_18 = input.LA(2);
				if ( (synpred37_Css3()) ) {
					alt295=4;
				}
				else if ( (synpred38_Css3()) ) {
					alt295=5;
				}
				else if ( (synpred39_Css3()) ) {
					alt295=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==PIPE) && (synpred37_Css3())) {
				alt295=4;
			}
			else if ( (LA295_0==AT_IDENT) ) {
				int LA295_20 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=8;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=9;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt295=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_INCLUDE) ) {
				int LA295_21 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=8;
				}
				else if ( ((synpred42_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt295=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==MEDIA_SYM) ) {
				int LA295_22 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt295=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==PAGE_SYM) ) {
				int LA295_23 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt295=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==COUNTER_STYLE_SYM) ) {
				int LA295_24 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt295=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==FONT_FACE_SYM) ) {
				int LA295_25 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt295=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==MOZ_DOCUMENT_SYM) ) {
				int LA295_26 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt295=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==CONTAINER_SYM||LA295_0==LAYER_SYM||LA295_0==SUPPORTS_SYM) ) {
				alt295=10;
			}
			else if ( (LA295_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA295_28 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt295=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_IF) ) {
				int LA295_29 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt295=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_FOR) ) {
				int LA295_32 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt295=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_EACH) ) {
				int LA295_33 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt295=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_WHILE) ) {
				int LA295_34 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt295=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_EXTEND) ) {
				int LA295_35 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt295=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_DEBUG||LA295_0==SASS_WARN) ) {
				int LA295_36 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt295=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_CONTENT) ) {
				int LA295_37 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt295=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 37, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_RETURN) ) {
				int LA295_38 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt295=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 38, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==IMPORT_SYM) ) {
				int LA295_39 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt295=17;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 39, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA295_0==SASS_ERROR) ) {
				alt295=16;
			}
			else if ( ((LA295_0 >= BOTTOMCENTER_SYM && LA295_0 <= BOTTOMRIGHT_SYM)||LA295_0==CHARSET_SYM||(LA295_0 >= LEFTBOTTOM_SYM && LA295_0 <= LEFTTOP_SYM)||LA295_0==NAMESPACE_SYM||(LA295_0 >= RIGHTBOTTOM_SYM && LA295_0 <= RIGHTTOP_SYM)||LA295_0==SASS_ELSE||(LA295_0 >= SASS_FORWARD && LA295_0 <= SASS_FUNCTION)||LA295_0==SASS_USE||(LA295_0 >= TOPCENTER_SYM && LA295_0 <= TOPRIGHT_SYM)) ) {
				int LA295_41 = input.LA(2);
				if ( ((synpred34_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=1;
				}
				else if ( ((synpred35_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {
					alt295=3;
				}
				else if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt295=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt295=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 295, 41, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 295, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(295);}

			switch (alt295) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:5: ( cp_variable_declaration )=> cp_variable_declaration
					{
					dbg.location(892,32);
					pushFollow(FOLLOW_cp_variable_declaration_in_declaration5463);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:7: ( sass_map )=> sass_map
					{
					dbg.location(893,20);
					pushFollow(FOLLOW_sass_map_in_declaration5476);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:894:7: ( sass_nested_properties )=> sass_nested_properties
					{
					dbg.location(894,33);
					pushFollow(FOLLOW_sass_nested_properties_in_declaration5488);
					sass_nested_properties();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(895,145);
					pushFollow(FOLLOW_rule_in_declaration5551);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(896,30);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration5563);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration
					{
					dbg.location(898,67);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration5602);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:7: ( cp_mixin_declaration )=> cp_mixin_declaration
					{
					dbg.location(899,31);
					pushFollow(FOLLOW_cp_mixin_declaration_in_declaration5614);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:7: ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(900,25);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration5627);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(900,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:39: ( ( ws )? IMPORTANT_SYM )?
					int alt292=2;
					try { dbg.enterSubRule(292);
					try { dbg.enterDecision(292, decisionCanBacktrack[292]);

					try {
						isCyclicDecision = true;
						alt292 = dfa292.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(292);}

					switch (alt292) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:40: ( ws )? IMPORTANT_SYM
							{
							dbg.location(900,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:40: ( ws )?
							int alt291=2;
							try { dbg.enterSubRule(291);
							try { dbg.enterDecision(291, decisionCanBacktrack[291]);

							int LA291_0 = input.LA(1);
							if ( (LA291_0==COMMENT||LA291_0==NL||LA291_0==WS) ) {
								alt291=1;
							}
							} finally {dbg.exitDecision(291);}

							switch (alt291) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:40: ws
									{
									dbg.location(900,40);
									pushFollow(FOLLOW_ws_in_declaration5630);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(291);}
							dbg.location(900,44);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration5633); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(292);}

					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:901:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(901,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(901,43);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration5650);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(901,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:901:57: ( ( ws )? IMPORTANT_SYM )?
					int alt294=2;
					try { dbg.enterSubRule(294);
					try { dbg.enterDecision(294, decisionCanBacktrack[294]);

					try {
						isCyclicDecision = true;
						alt294 = dfa294.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(294);}

					switch (alt294) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:901:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(901,58);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:901:58: ( ws )?
							int alt293=2;
							try { dbg.enterSubRule(293);
							try { dbg.enterDecision(293, decisionCanBacktrack[293]);

							int LA293_0 = input.LA(1);
							if ( (LA293_0==COMMENT||LA293_0==NL||LA293_0==WS) ) {
								alt293=1;
							}
							} finally {dbg.exitDecision(293);}

							switch (alt293) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:901:58: ws
									{
									dbg.location(901,58);
									pushFollow(FOLLOW_ws_in_declaration5653);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(293);}
							dbg.location(901,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration5656); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(294);}

					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:902:7: {...}? at_rule
					{
					dbg.location(902,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isCssPreprocessorSource()");
					}dbg.location(902,36);
					pushFollow(FOLLOW_at_rule_in_declaration5672);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:903:7: {...}? sass_control
					{
					dbg.location(903,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(903,25);
					pushFollow(FOLLOW_sass_control_in_declaration5682);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:904:7: {...}? sass_extend
					{
					dbg.location(904,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(904,25);
					pushFollow(FOLLOW_sass_extend_in_declaration5692);
					sass_extend();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:7: {...}? sass_debug
					{
					dbg.location(905,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(905,25);
					pushFollow(FOLLOW_sass_debug_in_declaration5702);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:7: {...}? sass_content
					{
					dbg.location(906,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(906,25);
					pushFollow(FOLLOW_sass_content_in_declaration5712);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:7: {...}? sass_function_return
					{
					dbg.location(907,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(907,25);
					pushFollow(FOLLOW_sass_function_return_in_declaration5722);
					sass_function_return();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:908:7: {...}? sass_error
					{
					dbg.location(908,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(908,25);
					pushFollow(FOLLOW_sass_error_in_declaration5732);
					sass_error();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:909:7: {...}? importItem
					{
					dbg.location(909,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(909,25);
					pushFollow(FOLLOW_importItem_in_declaration5742);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:910:7: GEN
					{
					dbg.location(910,7);
					match(input,GEN,FOLLOW_GEN_in_declaration5750); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(SEMI));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(911, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declaration"



	// $ANTLR start "selectorsGroup"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:917:1: selectorsGroup : selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? ;
	public final void selectorsGroup() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selectorsGroup");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(917, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:918:5: ( selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:9: selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )?
			{
			dbg.location(919,9);
			pushFollow(FOLLOW_selector_in_selectorsGroup5784);
			selector();
			state._fsp--;
			if (state.failed) return;dbg.location(919,18);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:18: ( ( ws )? COMMA ( ws )? selector )*
			try { dbg.enterSubRule(298);

			loop298:
			while (true) {
				int alt298=2;
				try { dbg.enterDecision(298, decisionCanBacktrack[298]);

				try {
					isCyclicDecision = true;
					alt298 = dfa298.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(298);}

				switch (alt298) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:19: ( ws )? COMMA ( ws )? selector
					{
					dbg.location(919,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:19: ( ws )?
					int alt296=2;
					try { dbg.enterSubRule(296);
					try { dbg.enterDecision(296, decisionCanBacktrack[296]);

					int LA296_0 = input.LA(1);
					if ( (LA296_0==COMMENT||LA296_0==NL||LA296_0==WS) ) {
						alt296=1;
					}
					} finally {dbg.exitDecision(296);}

					switch (alt296) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:19: ws
							{
							dbg.location(919,19);
							pushFollow(FOLLOW_ws_in_selectorsGroup5787);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(296);}
					dbg.location(919,23);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup5790); if (state.failed) return;dbg.location(919,29);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:29: ( ws )?
					int alt297=2;
					try { dbg.enterSubRule(297);
					try { dbg.enterDecision(297, decisionCanBacktrack[297]);

					int LA297_0 = input.LA(1);
					if ( (LA297_0==COMMENT||LA297_0==NL||LA297_0==WS) ) {
						alt297=1;
					}
					} finally {dbg.exitDecision(297);}

					switch (alt297) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:29: ws
							{
							dbg.location(919,29);
							pushFollow(FOLLOW_ws_in_selectorsGroup5792);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(297);}
					dbg.location(919,33);
					pushFollow(FOLLOW_selector_in_selectorsGroup5795);
					selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop298;
				}
			}
			} finally {dbg.exitSubRule(298);}
			dbg.location(919,44);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:44: ({...}? COMMA )?
			int alt299=2;
			try { dbg.enterSubRule(299);
			try { dbg.enterDecision(299, decisionCanBacktrack[299]);

			int LA299_0 = input.LA(1);
			if ( (LA299_0==COMMA) ) {
				alt299=1;
			}
			} finally {dbg.exitDecision(299);}

			switch (alt299) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:45: {...}? COMMA
					{
					dbg.location(919,45);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selectorsGroup", "isCssPreprocessorSource()");
					}dbg.location(919,74);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup5802); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(299);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(920, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selectorsGroup");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selectorsGroup"



	// $ANTLR start "selector"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:922:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );
	public final void selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(922, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:5: ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator )
			int alt306=2;
			try { dbg.enterDecision(306, decisionCanBacktrack[306]);

			try {
				isCyclicDecision = true;
				alt306 = dfa306.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(306);}

			switch (alt306) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:8: ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					{
					dbg.location(923,8);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:8: ( combinator ( ws )? )?
					int alt301=2;
					try { dbg.enterSubRule(301);
					try { dbg.enterDecision(301, decisionCanBacktrack[301]);

					int LA301_0 = input.LA(1);
					if ( (LA301_0==GREATER||LA301_0==PLUS||LA301_0==TILDE) ) {
						alt301=1;
					}
					} finally {dbg.exitDecision(301);}

					switch (alt301) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:9: combinator ( ws )?
							{
							dbg.location(923,9);
							pushFollow(FOLLOW_combinator_in_selector5823);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(923,20);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:20: ( ws )?
							int alt300=2;
							try { dbg.enterSubRule(300);
							try { dbg.enterDecision(300, decisionCanBacktrack[300]);

							int LA300_0 = input.LA(1);
							if ( (LA300_0==COMMENT||LA300_0==NL||LA300_0==WS) ) {
								alt300=1;
							}
							} finally {dbg.exitDecision(300);}

							switch (alt300) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:20: ws
									{
									dbg.location(923,20);
									pushFollow(FOLLOW_ws_in_selector5825);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(300);}

							}
							break;

					}
					} finally {dbg.exitSubRule(301);}
					dbg.location(923,26);
					pushFollow(FOLLOW_simpleSelectorSequence_in_selector5830);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;dbg.location(923,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					try { dbg.enterSubRule(305);

					loop305:
					while (true) {
						int alt305=2;
						try { dbg.enterDecision(305, decisionCanBacktrack[305]);

						try {
							isCyclicDecision = true;
							alt305 = dfa305.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(305);}

						switch (alt305) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:51: ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence
							{
							dbg.location(923,51);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:51: ( ( ( ws )? combinator ( ws )? ) | ws )
							int alt304=2;
							try { dbg.enterSubRule(304);
							try { dbg.enterDecision(304, decisionCanBacktrack[304]);

							try {
								isCyclicDecision = true;
								alt304 = dfa304.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(304);}

							switch (alt304) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:52: ( ( ws )? combinator ( ws )? )
									{
									dbg.location(923,52);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:52: ( ( ws )? combinator ( ws )? )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:53: ( ws )? combinator ( ws )?
									{
									dbg.location(923,53);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:53: ( ws )?
									int alt302=2;
									try { dbg.enterSubRule(302);
									try { dbg.enterDecision(302, decisionCanBacktrack[302]);

									int LA302_0 = input.LA(1);
									if ( (LA302_0==COMMENT||LA302_0==NL||LA302_0==WS) ) {
										alt302=1;
									}
									} finally {dbg.exitDecision(302);}

									switch (alt302) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:53: ws
											{
											dbg.location(923,53);
											pushFollow(FOLLOW_ws_in_selector5836);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(302);}
									dbg.location(923,57);
									pushFollow(FOLLOW_combinator_in_selector5839);
									combinator();
									state._fsp--;
									if (state.failed) return;dbg.location(923,68);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:68: ( ws )?
									int alt303=2;
									try { dbg.enterSubRule(303);
									try { dbg.enterDecision(303, decisionCanBacktrack[303]);

									int LA303_0 = input.LA(1);
									if ( (LA303_0==COMMENT||LA303_0==NL||LA303_0==WS) ) {
										alt303=1;
									}
									} finally {dbg.exitDecision(303);}

									switch (alt303) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:68: ws
											{
											dbg.location(923,68);
											pushFollow(FOLLOW_ws_in_selector5841);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(303);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:73: ws
									{
									dbg.location(923,73);
									pushFollow(FOLLOW_ws_in_selector5845);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(304);}
							dbg.location(923,77);
							pushFollow(FOLLOW_simpleSelectorSequence_in_selector5848);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop305;
						}
					}
					} finally {dbg.exitSubRule(305);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:10: {...}? combinator
					{
					dbg.location(924,10);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selector", "isScssSource()");
					}dbg.location(924,28);
					pushFollow(FOLLOW_combinator_in_selector5863);
					combinator();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(925, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selector"



	// $ANTLR start "combinator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:1: combinator : ( PLUS | GREATER | TILDE );
	public final void combinator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "combinator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(927, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:928:5: ( PLUS | GREATER | TILDE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(928,5);
			if ( input.LA(1)==GREATER||input.LA(1)==PLUS||input.LA(1)==TILDE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(930, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "combinator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "combinator"



	// $ANTLR start "simpleSelectorSequence"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:1: simpleSelectorSequence : ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* );
	public final void simpleSelectorSequence() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "simpleSelectorSequence");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(932, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:2: ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* )
			int alt315=2;
			try { dbg.enterDecision(315, decisionCanBacktrack[315]);

			int LA315_0 = input.LA(1);
			if ( (LA315_0==AT_SIGN||LA315_0==COLON||(LA315_0 >= DCOLON && LA315_0 <= DOT)||(LA315_0 >= HASH && LA315_0 <= HASH_SYMBOL)||LA315_0==LBRACKET||LA315_0==MINUS||LA315_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				alt315=1;
			}
			else if ( (LA315_0==LESS_AND) ) {
				int LA315_2 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt315=1;
				}
				else if ( (synpred44_Css3()) ) {
					alt315=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 315, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA315_0==IDENT) ) {
				int LA315_3 = input.LA(2);
				if ( (LA315_3==HASH_SYMBOL) ) {
					int LA315_7 = input.LA(3);
					if ( (LA315_7==LBRACE) ) {
						alt315=1;
					}
					else if ( (LA315_7==NAME) && (synpred44_Css3())) {
						alt315=2;
					}
					else if ( (LA315_7==IDENT||LA315_7==MINUS) && (synpred44_Css3())) {
						alt315=2;
					}
					else if ( (LA315_7==AT_SIGN) && (synpred44_Css3())) {
						alt315=2;
					}

				}
				else if ( (LA315_3==AT_SIGN) ) {
					alt315=1;
				}
				else if ( (LA315_3==PIPE) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==COMMENT||LA315_3==NL||LA315_3==WS) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==SASS_EXTEND_ONLY_SELECTOR) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==LESS_AND) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==HASH) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==DOT) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==DIMENSION) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==LBRACKET) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==COLON||LA315_3==DCOLON) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==GREATER||LA315_3==PLUS||LA315_3==TILDE) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==COMMA) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==LBRACE) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==RPAREN) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==SEMI) && (synpred44_Css3())) {
					alt315=2;
				}
				else if ( (LA315_3==RBRACE) && (synpred44_Css3())) {
					alt315=2;
				}

			}
			else if ( (LA315_0==STAR) && (synpred44_Css3())) {
				alt315=2;
			}
			else if ( (LA315_0==PIPE) && (synpred44_Css3())) {
				alt315=2;
			}
			else if ( (LA315_0==GEN) && (synpred44_Css3())) {
				alt315=2;
			}

			} finally {dbg.exitDecision(315);}

			switch (alt315) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					{
					dbg.location(934,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
					int alt307=3;
					try { dbg.enterSubRule(307);
					try { dbg.enterDecision(307, decisionCanBacktrack[307]);

					switch ( input.LA(1) ) {
					case COLON:
					case DCOLON:
					case DIMENSION:
					case DOT:
					case HASH:
					case LBRACKET:
					case LESS_AND:
					case SASS_EXTEND_ONLY_SELECTOR:
						{
						alt307=1;
						}
						break;
					case HASH_SYMBOL:
						{
						int LA307_2 = input.LA(2);
						if ( (LA307_2==LBRACE) ) {
							alt307=2;
						}
						else if ( (LA307_2==AT_SIGN||LA307_2==IDENT||LA307_2==MINUS||LA307_2==NAME) ) {
							alt307=1;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 307, 2, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENT:
					case MINUS:
						{
						int LA307_3 = input.LA(2);
						if ( (LA307_3==HASH_SYMBOL) ) {
							alt307=2;
						}
						else if ( (LA307_3==AT_SIGN) ) {
							alt307=3;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 307, 3, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case AT_SIGN:
						{
						alt307=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 307, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(307);}

					switch (alt307) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:10: elementSubsequent
							{
							dbg.location(934,10);
							pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence5915);
							elementSubsequent();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:30: {...}? sass_selector_interpolation_exp
							{
							dbg.location(934,30);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
							}dbg.location(934,48);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence5921);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:11: {...}? less_selector_interpolation_exp
							{
							dbg.location(935,11);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
							}dbg.location(935,29);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence5935);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(307);}
					dbg.location(935,64);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:64: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					try { dbg.enterSubRule(311);

					loop311:
					while (true) {
						int alt311=2;
						try { dbg.enterDecision(311, decisionCanBacktrack[311]);

						int LA311_0 = input.LA(1);
						if ( (LA311_0==COMMENT||LA311_0==NL||LA311_0==WS) ) {
							int LA311_1 = input.LA(2);
							if ( (synpred43_Css3()) ) {
								alt311=1;
							}

						}
						else if ( (LA311_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred43_Css3())) {
							alt311=1;
						}
						else if ( (LA311_0==LESS_AND) && (synpred43_Css3())) {
							alt311=1;
						}
						else if ( (LA311_0==HASH) && (synpred43_Css3())) {
							alt311=1;
						}
						else if ( (LA311_0==HASH_SYMBOL) && (synpred43_Css3())) {
							alt311=1;
						}
						else if ( (LA311_0==DOT) && (synpred43_Css3())) {
							alt311=1;
						}
						else if ( (LA311_0==DIMENSION) && (synpred43_Css3())) {
							alt311=1;
						}
						else if ( (LA311_0==LBRACKET) && (synpred43_Css3())) {
							alt311=1;
						}
						else if ( (LA311_0==COLON||LA311_0==DCOLON) && (synpred43_Css3())) {
							alt311=1;
						}

						} finally {dbg.exitDecision(311);}

						switch (alt311) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:65: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							{
							dbg.location(935,79);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							int alt310=2;
							try { dbg.enterSubRule(310);
							try { dbg.enterDecision(310, decisionCanBacktrack[310]);

							try {
								isCyclicDecision = true;
								alt310 = dfa310.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(310);}

							switch (alt310) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:80: ( ( ws )? elementSubsequent )
									{
									dbg.location(935,80);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:80: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:81: ( ws )? elementSubsequent
									{
									dbg.location(935,81);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:81: ( ws )?
									int alt308=2;
									try { dbg.enterSubRule(308);
									try { dbg.enterDecision(308, decisionCanBacktrack[308]);

									int LA308_0 = input.LA(1);
									if ( (LA308_0==COMMENT||LA308_0==NL||LA308_0==WS) ) {
										alt308=1;
									}
									} finally {dbg.exitDecision(308);}

									switch (alt308) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:81: ws
											{
											dbg.location(935,81);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence5950);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(308);}
									dbg.location(935,85);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence5953);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									{
									dbg.location(935,105);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:106: ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									{
									dbg.location(935,106);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence5958);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(935,109);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:109: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									int alt309=2;
									try { dbg.enterSubRule(309);
									try { dbg.enterDecision(309, decisionCanBacktrack[309]);

									switch ( input.LA(1) ) {
									case IDENT:
									case MINUS:
										{
										int LA309_1 = input.LA(2);
										if ( (LA309_1==HASH_SYMBOL) ) {
											alt309=1;
										}
										else if ( (LA309_1==AT_SIGN) ) {
											alt309=2;
										}

										else {
											if (state.backtracking>0) {state.failed=true; return;}
											int nvaeMark = input.mark();
											try {
												input.consume();
												NoViableAltException nvae =
													new NoViableAltException("", 309, 1, input);
												dbg.recognitionException(nvae);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

										}
										break;
									case HASH_SYMBOL:
										{
										alt309=1;
										}
										break;
									case AT_SIGN:
										{
										alt309=2;
										}
										break;
									default:
										if (state.backtracking>0) {state.failed=true; return;}
										NoViableAltException nvae =
											new NoViableAltException("", 309, 0, input);
										dbg.recognitionException(nvae);
										throw nvae;
									}
									} finally {dbg.exitDecision(309);}

									switch (alt309) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:110: {...}? sass_selector_interpolation_exp
											{
											dbg.location(935,110);
											if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
											}dbg.location(935,128);
											pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence5963);
											sass_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;
										case 2 :
											dbg.enterAlt(2);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:162: {...}? less_selector_interpolation_exp
											{
											dbg.location(935,162);
											if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
											}dbg.location(935,180);
											pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence5969);
											less_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(309);}

									}

									}
									break;

							}
							} finally {dbg.exitSubRule(310);}

							}
							break;

						default :
							break loop311;
						}
					}
					} finally {dbg.exitSubRule(311);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:4: ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					{
					dbg.location(936,20);
					pushFollow(FOLLOW_typeSelector_in_simpleSelectorSequence5983);
					typeSelector();
					state._fsp--;
					if (state.failed) return;dbg.location(936,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:33: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					try { dbg.enterSubRule(314);

					loop314:
					while (true) {
						int alt314=2;
						try { dbg.enterDecision(314, decisionCanBacktrack[314]);

						int LA314_0 = input.LA(1);
						if ( (LA314_0==COMMENT||LA314_0==NL||LA314_0==WS) ) {
							int LA314_1 = input.LA(2);
							if ( (synpred45_Css3()) ) {
								alt314=1;
							}

						}
						else if ( (LA314_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred45_Css3())) {
							alt314=1;
						}
						else if ( (LA314_0==LESS_AND) && (synpred45_Css3())) {
							alt314=1;
						}
						else if ( (LA314_0==HASH) && (synpred45_Css3())) {
							alt314=1;
						}
						else if ( (LA314_0==HASH_SYMBOL) && (synpred45_Css3())) {
							alt314=1;
						}
						else if ( (LA314_0==DOT) && (synpred45_Css3())) {
							alt314=1;
						}
						else if ( (LA314_0==DIMENSION) && (synpred45_Css3())) {
							alt314=1;
						}
						else if ( (LA314_0==LBRACKET) && (synpred45_Css3())) {
							alt314=1;
						}
						else if ( (LA314_0==COLON||LA314_0==DCOLON) && (synpred45_Css3())) {
							alt314=1;
						}

						} finally {dbg.exitDecision(314);}

						switch (alt314) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:34: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							{
							dbg.location(936,48);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							int alt313=2;
							try { dbg.enterSubRule(313);
							try { dbg.enterDecision(313, decisionCanBacktrack[313]);

							try {
								isCyclicDecision = true;
								alt313 = dfa313.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(313);}

							switch (alt313) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:49: ( ( ws )? elementSubsequent )
									{
									dbg.location(936,49);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:49: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:50: ( ws )? elementSubsequent
									{
									dbg.location(936,50);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:50: ( ws )?
									int alt312=2;
									try { dbg.enterSubRule(312);
									try { dbg.enterDecision(312, decisionCanBacktrack[312]);

									int LA312_0 = input.LA(1);
									if ( (LA312_0==COMMENT||LA312_0==NL||LA312_0==WS) ) {
										alt312=1;
									}
									} finally {dbg.exitDecision(312);}

									switch (alt312) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:50: ws
											{
											dbg.location(936,50);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence5995);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(312);}
									dbg.location(936,54);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence5998);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:75: {...}? ws sass_selector_interpolation_exp
									{
									dbg.location(936,75);
									if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
										if (state.backtracking>0) {state.failed=true; return;}
										throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
									}dbg.location(936,93);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence6005);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(936,96);
									pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6007);
									sass_selector_interpolation_exp();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(313);}

							}
							break;

						default :
							break loop314;
						}
					}
					} finally {dbg.exitSubRule(314);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			            reportError(rce);
			            consumeUntil(input, BitSet.of(LBRACE));
			        
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(937, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "simpleSelectorSequence");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "simpleSelectorSequence"



	// $ANTLR start "esPred"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:944:1: esPred : ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND );
	public final void esPred() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "esPred");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(944, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:5: ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND )
			int alt316=8;
			try { dbg.enterDecision(316, decisionCanBacktrack[316]);

			switch ( input.LA(1) ) {
			case HASH_SYMBOL:
				{
				alt316=1;
				}
				break;
			case HASH:
				{
				alt316=2;
				}
				break;
			case DOT:
				{
				alt316=3;
				}
				break;
			case LBRACKET:
				{
				alt316=4;
				}
				break;
			case COLON:
				{
				alt316=5;
				}
				break;
			case DCOLON:
				{
				alt316=6;
				}
				break;
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt316=7;
				}
				break;
			case LESS_AND:
				{
				alt316=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 316, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(316);}

			switch (alt316) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:7: HASH_SYMBOL
					{
					dbg.location(945,7);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_esPred6032); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:21: HASH
					{
					dbg.location(945,21);
					match(input,HASH,FOLLOW_HASH_in_esPred6036); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:28: DOT
					{
					dbg.location(945,28);
					match(input,DOT,FOLLOW_DOT_in_esPred6040); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:34: LBRACKET
					{
					dbg.location(945,34);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_esPred6044); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:45: COLON
					{
					dbg.location(945,45);
					match(input,COLON,FOLLOW_COLON_in_esPred6048); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:53: DCOLON
					{
					dbg.location(945,53);
					match(input,DCOLON,FOLLOW_DCOLON_in_esPred6052); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:62: SASS_EXTEND_ONLY_SELECTOR
					{
					dbg.location(945,62);
					match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred6056); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:90: {...}? LESS_AND
					{
					dbg.location(945,90);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "esPred", "isCssPreprocessorSource()");
					}dbg.location(945,119);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_esPred6062); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(946, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "esPred");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "esPred"



	// $ANTLR start "typeSelector"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:948:1: typeSelector options {k=2; } : ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName ;
	public final void typeSelector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "typeSelector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(948, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:3: ( ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName
			{
			dbg.location(950,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )?
			int alt317=2;
			try { dbg.enterSubRule(317);
			try { dbg.enterDecision(317, decisionCanBacktrack[317]);

			int LA317_0 = input.LA(1);
			if ( (LA317_0==IDENT) ) {
				int LA317_1 = input.LA(2);
				if ( (LA317_1==PIPE) && (synpred46_Css3())) {
					alt317=1;
				}
			}
			else if ( (LA317_0==STAR) ) {
				int LA317_2 = input.LA(2);
				if ( (LA317_2==PIPE) && (synpred46_Css3())) {
					alt317=1;
				}
			}
			else if ( (LA317_0==PIPE) && (synpred46_Css3())) {
				alt317=1;
			}
			} finally {dbg.exitDecision(317);}

			switch (alt317) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:7: ( ( IDENT | STAR )? PIPE )=> namespacePrefix
					{
					dbg.location(950,31);
					pushFollow(FOLLOW_namespacePrefix_in_typeSelector6104);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(317);}
			dbg.location(950,49);
			pushFollow(FOLLOW_elementName_in_typeSelector6108);
			elementName();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(951, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "typeSelector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "typeSelector"



	// $ANTLR start "namespacePrefix"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:953:1: namespacePrefix : ( namespacePrefixName | STAR )? PIPE ;
	public final void namespacePrefix() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefix");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(953, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:954:3: ( ( namespacePrefixName | STAR )? PIPE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:954:5: ( namespacePrefixName | STAR )? PIPE
			{
			dbg.location(954,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:954:5: ( namespacePrefixName | STAR )?
			int alt318=3;
			try { dbg.enterSubRule(318);
			try { dbg.enterDecision(318, decisionCanBacktrack[318]);

			int LA318_0 = input.LA(1);
			if ( (LA318_0==IDENT) ) {
				alt318=1;
			}
			else if ( (LA318_0==STAR) ) {
				alt318=2;
			}
			} finally {dbg.exitDecision(318);}

			switch (alt318) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:954:7: namespacePrefixName
					{
					dbg.location(954,7);
					pushFollow(FOLLOW_namespacePrefixName_in_namespacePrefix6123);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:954:29: STAR
					{
					dbg.location(954,29);
					match(input,STAR,FOLLOW_STAR_in_namespacePrefix6127); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(318);}
			dbg.location(954,36);
			match(input,PIPE,FOLLOW_PIPE_in_namespacePrefix6131); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(955, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefix");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefix"



	// $ANTLR start "elementSubsequent"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:958:1: elementSubsequent : ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo ) ;
	public final void elementSubsequent() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementSubsequent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(958, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:959:5: ( ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:960:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo )
			{
			dbg.location(960,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:960:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo )
			int alt320=7;
			try { dbg.enterSubRule(320);
			try { dbg.enterDecision(320, decisionCanBacktrack[320]);

			switch ( input.LA(1) ) {
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt320=1;
				}
				break;
			case LESS_AND:
				{
				switch ( input.LA(2) ) {
				case IDENT:
					{
					int LA320_7 = input.LA(3);
					if ( ((LA320_7 >= COLON && LA320_7 <= COMMENT)||(LA320_7 >= DCOLON && LA320_7 <= DOT)||LA320_7==GREATER||(LA320_7 >= HASH && LA320_7 <= HASH_SYMBOL)||LA320_7==IDENT||(LA320_7 >= LBRACE && LA320_7 <= LBRACKET)||LA320_7==LESS_AND||LA320_7==NL||LA320_7==NUMBER||LA320_7==PLUS||LA320_7==RBRACE||LA320_7==RPAREN||LA320_7==SASS_EXTEND_ONLY_SELECTOR||LA320_7==SEMI||LA320_7==TILDE||LA320_7==WS) ) {
						alt320=2;
					}
					else if ( (LA320_7==AT_SIGN) ) {
						alt320=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 320, 7, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case COLON:
				case COMMA:
				case COMMENT:
				case DCOLON:
				case DIMENSION:
				case DOT:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case LBRACE:
				case LBRACKET:
				case LESS_AND:
				case NL:
				case NUMBER:
				case PLUS:
				case RBRACE:
				case RPAREN:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SEMI:
				case TILDE:
				case WS:
					{
					alt320=2;
					}
					break;
				case AT_SIGN:
				case MINUS:
					{
					alt320=3;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 320, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH:
			case HASH_SYMBOL:
				{
				alt320=4;
				}
				break;
			case DIMENSION:
			case DOT:
				{
				alt320=5;
				}
				break;
			case LBRACKET:
				{
				alt320=6;
				}
				break;
			case COLON:
			case DCOLON:
				{
				alt320=7;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 320, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(320);}

			switch (alt320) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:961:9: {...}? sass_extend_only_selector
					{
					dbg.location(961,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
					}dbg.location(961,27);
					pushFollow(FOLLOW_sass_extend_only_selector_in_elementSubsequent6163);
					sass_extend_only_selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:962:11: {...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )*
					{
					dbg.location(962,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isCssPreprocessorSource()");
					}dbg.location(962,40);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent6177); if (state.failed) return;dbg.location(962,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:962:49: ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )*
					try { dbg.enterSubRule(319);

					loop319:
					while (true) {
						int alt319=4;
						try { dbg.enterDecision(319, decisionCanBacktrack[319]);

						switch ( input.LA(1) ) {
						case HASH_SYMBOL:
							{
							int LA319_2 = input.LA(2);
							if ( (LA319_2==LBRACE) ) {
								alt319=3;
							}

							}
							break;
						case IDENT:
							{
							alt319=1;
							}
							break;
						case NUMBER:
							{
							alt319=2;
							}
							break;
						}
						} finally {dbg.exitDecision(319);}

						switch (alt319) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:962:50: IDENT
							{
							dbg.location(962,50);
							match(input,IDENT,FOLLOW_IDENT_in_elementSubsequent6180); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:962:58: NUMBER
							{
							dbg.location(962,58);
							match(input,NUMBER,FOLLOW_NUMBER_in_elementSubsequent6184); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:962:67: {...}? sass_interpolation_expression_var
							{
							dbg.location(962,67);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
							}dbg.location(962,85);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_elementSubsequent6190);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop319;
						}
					}
					} finally {dbg.exitSubRule(319);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:11: {...}? LESS_AND less_selector_interpolation_exp
					{
					dbg.location(963,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isLessSource()");
					}dbg.location(963,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent6206); if (state.failed) return;dbg.location(963,38);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_elementSubsequent6208);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:964:8: cssId
					{
					dbg.location(964,8);
					pushFollow(FOLLOW_cssId_in_elementSubsequent6217);
					cssId();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:965:8: cssClass
					{
					dbg.location(965,8);
					pushFollow(FOLLOW_cssClass_in_elementSubsequent6226);
					cssClass();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:966:11: slAttribute
					{
					dbg.location(966,11);
					pushFollow(FOLLOW_slAttribute_in_elementSubsequent6238);
					slAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:967:11: pseudo
					{
					dbg.location(967,11);
					pushFollow(FOLLOW_pseudo_in_elementSubsequent6250);
					pseudo();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(320);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(969, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementSubsequent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementSubsequent"



	// $ANTLR start "cssId"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:972:1: cssId : ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) );
	public final void cssId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(972, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:5: ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) )
			int alt323=2;
			try { dbg.enterDecision(323, decisionCanBacktrack[323]);

			int LA323_0 = input.LA(1);
			if ( (LA323_0==HASH) ) {
				alt323=1;
			}
			else if ( (LA323_0==HASH_SYMBOL) ) {
				alt323=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 323, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(323);}

			switch (alt323) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:7: HASH ({...}? sass_selector_interpolation_exp )?
					{
					dbg.location(973,7);
					match(input,HASH,FOLLOW_HASH_in_cssId6274); if (state.failed) return;dbg.location(973,12);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:12: ({...}? sass_selector_interpolation_exp )?
					int alt321=2;
					try { dbg.enterSubRule(321);
					try { dbg.enterDecision(321, decisionCanBacktrack[321]);

					int LA321_0 = input.LA(1);
					if ( (LA321_0==IDENT||LA321_0==MINUS) ) {
						alt321=1;
					}
					else if ( (LA321_0==HASH_SYMBOL) ) {
						int LA321_2 = input.LA(2);
						if ( (LA321_2==LBRACE) ) {
							alt321=1;
						}
					}
					} finally {dbg.exitDecision(321);}

					switch (alt321) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:13: {...}? sass_selector_interpolation_exp
							{
							dbg.location(973,13);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isScssSource()");
							}dbg.location(973,31);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssId6279);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(321);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					{
					dbg.location(975,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:975:11: HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp )
					{
					dbg.location(975,11);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_cssId6301); if (state.failed) return;dbg.location(976,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:13: ( NAME |{...}? less_selector_interpolation_exp )
					int alt322=2;
					try { dbg.enterSubRule(322);
					try { dbg.enterDecision(322, decisionCanBacktrack[322]);

					int LA322_0 = input.LA(1);
					if ( (LA322_0==NAME) ) {
						alt322=1;
					}
					else if ( (LA322_0==AT_SIGN||LA322_0==IDENT||LA322_0==MINUS) ) {
						alt322=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 322, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(322);}

					switch (alt322) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:15: NAME
							{
							dbg.location(976,15);
							match(input,NAME,FOLLOW_NAME_in_cssId6317); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:977:17: {...}? less_selector_interpolation_exp
							{
							dbg.location(977,17);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isLessSource()");
							}dbg.location(977,35);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssId6337);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(322);}

					}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(980, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssId"



	// $ANTLR start "cssClass"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:986:1: cssClass : ( ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ) |{...}? DIMENSION );
	public final void cssClass() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssClass");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(986, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:5: ( ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ) |{...}? DIMENSION )
			int alt325=2;
			try { dbg.enterDecision(325, decisionCanBacktrack[325]);

			int LA325_0 = input.LA(1);
			if ( (LA325_0==DOT) ) {
				alt325=1;
			}
			else if ( (LA325_0==DIMENSION) ) {
				alt325=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 325, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(325);}

			switch (alt325) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:7: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
					{
					dbg.location(987,7);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:7: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:8: DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
					{
					dbg.location(987,8);
					match(input,DOT,FOLLOW_DOT_in_cssClass6389); if (state.failed) return;dbg.location(988,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:9: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
					int alt324=5;
					try { dbg.enterSubRule(324);
					try { dbg.enterDecision(324, decisionCanBacktrack[324]);

					switch ( input.LA(1) ) {
					case IDENT:
						{
						switch ( input.LA(2) ) {
						case HASH_SYMBOL:
							{
							int LA324_7 = input.LA(3);
							if ( (LA324_7==LBRACE) ) {
								alt324=1;
							}
							else if ( (LA324_7==AT_SIGN||LA324_7==IDENT||LA324_7==MINUS||LA324_7==NAME) ) {
								alt324=3;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 324, 7, input);
									dbg.recognitionException(nvae);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

							}
							break;
						case AT_SIGN:
							{
							alt324=2;
							}
							break;
						case COLON:
						case COMMA:
						case COMMENT:
						case DCOLON:
						case DIMENSION:
						case DOT:
						case GREATER:
						case HASH:
						case LBRACE:
						case LBRACKET:
						case LESS_AND:
						case NL:
						case PLUS:
						case RBRACE:
						case RPAREN:
						case SASS_EXTEND_ONLY_SELECTOR:
						case SEMI:
						case TILDE:
						case WS:
							{
							alt324=3;
							}
							break;
						default:
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 324, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}
						}
						break;
					case HASH_SYMBOL:
						{
						alt324=1;
						}
						break;
					case AT_SIGN:
						{
						alt324=2;
						}
						break;
					case MINUS:
						{
						int LA324_4 = input.LA(2);
						if ( (LA324_4==HASH_SYMBOL) ) {
							alt324=1;
						}
						else if ( (LA324_4==AT_SIGN) ) {
							alt324=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 324, 4, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case NOT:
						{
						alt324=4;
						}
						break;
					case GEN:
						{
						alt324=5;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 324, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(324);}

					switch (alt324) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:14: {...}? sass_selector_interpolation_exp
							{
							dbg.location(989,14);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssClass", "isScssSource()");
							}dbg.location(989,33);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssClass6417);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:990:15: {...}? less_selector_interpolation_exp
							{
							dbg.location(990,15);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssClass", "isLessSource()");
							}dbg.location(990,33);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssClass6435);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:991:15: IDENT
							{
							dbg.location(991,15);
							match(input,IDENT,FOLLOW_IDENT_in_cssClass6451); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:15: NOT
							{
							dbg.location(992,15);
							match(input,NOT,FOLLOW_NOT_in_cssClass6467); if (state.failed) return;
							}
							break;
						case 5 :
							dbg.enterAlt(5);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:993:15: GEN
							{
							dbg.location(993,15);
							match(input,GEN,FOLLOW_GEN_in_cssClass6483); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(324);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:995:11: {...}? DIMENSION
					{
					dbg.location(995,11);
					if ( !(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "tokenNameStartsWith(\".\")");
					}dbg.location(995,39);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_cssClass6507); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(996, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssClass");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssClass"



	// $ANTLR start "elementName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1003:1: elementName : ( IDENT | GEN | LESS_AND | STAR );
	public final void elementName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1003, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:5: ( IDENT | GEN | LESS_AND | STAR )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1004,5);
			if ( input.LA(1)==GEN||input.LA(1)==IDENT||input.LA(1)==LESS_AND||input.LA(1)==STAR ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1005, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementName"



	// $ANTLR start "slAttribute"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:1: slAttribute : LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET ;
	public final void slAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1007, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1008:5: ( LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1008:7: LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET
			{
			dbg.location(1008,7);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_slAttribute6563); if (state.failed) return;dbg.location(1009,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1009:6: ( namespacePrefix )?
			int alt326=2;
			try { dbg.enterSubRule(326);
			try { dbg.enterDecision(326, decisionCanBacktrack[326]);

			int LA326_0 = input.LA(1);
			if ( (LA326_0==IDENT) ) {
				int LA326_1 = input.LA(2);
				if ( (LA326_1==PIPE) ) {
					alt326=1;
				}
			}
			else if ( (LA326_0==PIPE||LA326_0==STAR) ) {
				alt326=1;
			}
			} finally {dbg.exitDecision(326);}

			switch (alt326) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1009:6: namespacePrefix
					{
					dbg.location(1009,6);
					pushFollow(FOLLOW_namespacePrefix_in_slAttribute6570);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(326);}
			dbg.location(1009,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1009:23: ( ws )?
			int alt327=2;
			try { dbg.enterSubRule(327);
			try { dbg.enterDecision(327, decisionCanBacktrack[327]);

			int LA327_0 = input.LA(1);
			if ( (LA327_0==COMMENT||LA327_0==NL||LA327_0==WS) ) {
				alt327=1;
			}
			} finally {dbg.exitDecision(327);}

			switch (alt327) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1009:23: ws
					{
					dbg.location(1009,23);
					pushFollow(FOLLOW_ws_in_slAttribute6573);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(327);}
			dbg.location(1010,9);
			pushFollow(FOLLOW_slAttributeName_in_slAttribute6584);
			slAttributeName();
			state._fsp--;
			if (state.failed) return;dbg.location(1010,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:25: ( ws )?
			int alt328=2;
			try { dbg.enterSubRule(328);
			try { dbg.enterDecision(328, decisionCanBacktrack[328]);

			int LA328_0 = input.LA(1);
			if ( (LA328_0==COMMENT||LA328_0==NL||LA328_0==WS) ) {
				alt328=1;
			}
			} finally {dbg.exitDecision(328);}

			switch (alt328) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:25: ws
					{
					dbg.location(1010,25);
					pushFollow(FOLLOW_ws_in_slAttribute6586);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(328);}
			dbg.location(1012,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1012:13: ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )?
			int alt331=2;
			try { dbg.enterSubRule(331);
			try { dbg.enterDecision(331, decisionCanBacktrack[331]);

			int LA331_0 = input.LA(1);
			if ( (LA331_0==BEGINS||LA331_0==CONTAINS||LA331_0==DASHMATCH||LA331_0==ENDS||LA331_0==INCLUDES||LA331_0==OPEQ) ) {
				alt331=1;
			}
			} finally {dbg.exitDecision(331);}

			switch (alt331) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1013:17: ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )?
					{
					dbg.location(1013,17);
					if ( input.LA(1)==BEGINS||input.LA(1)==CONTAINS||input.LA(1)==DASHMATCH||input.LA(1)==ENDS||input.LA(1)==INCLUDES||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1021,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1021:17: ( ws )?
					int alt329=2;
					try { dbg.enterSubRule(329);
					try { dbg.enterDecision(329, decisionCanBacktrack[329]);

					int LA329_0 = input.LA(1);
					if ( (LA329_0==COMMENT||LA329_0==NL||LA329_0==WS) ) {
						alt329=1;
					}
					} finally {dbg.exitDecision(329);}

					switch (alt329) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1021:17: ws
							{
							dbg.location(1021,17);
							pushFollow(FOLLOW_ws_in_slAttribute6800);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(329);}
					dbg.location(1022,17);
					pushFollow(FOLLOW_slAttributeValue_in_slAttribute6819);
					slAttributeValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1023,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:17: ( ws )?
					int alt330=2;
					try { dbg.enterSubRule(330);
					try { dbg.enterDecision(330, decisionCanBacktrack[330]);

					int LA330_0 = input.LA(1);
					if ( (LA330_0==COMMENT||LA330_0==NL||LA330_0==WS) ) {
						alt330=1;
					}
					} finally {dbg.exitDecision(330);}

					switch (alt330) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:17: ws
							{
							dbg.location(1023,17);
							pushFollow(FOLLOW_ws_in_slAttribute6837);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(330);}

					}
					break;

			}
			} finally {dbg.exitSubRule(331);}
			dbg.location(1026,7);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_slAttribute6862); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1027, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttribute"



	// $ANTLR start "slAttributeName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1034:1: slAttributeName : IDENT ;
	public final void slAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1034, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1035:2: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1035:4: IDENT
			{
			dbg.location(1035,4);
			match(input,IDENT,FOLLOW_IDENT_in_slAttributeName6878); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1036, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeName"



	// $ANTLR start "slAttributeValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1038:1: slAttributeValue : ( IDENT | STRING ) ;
	public final void slAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1038, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1039:2: ( ( IDENT | STRING ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1039,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1044, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeValue"



	// $ANTLR start "pseudo"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:1: pseudo : ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) ;
	public final void pseudo() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudo");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1046, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:5: ( ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:7: ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			{
			dbg.location(1047,7);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1048,14);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1048:14: ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			int alt348=5;
			try { dbg.enterSubRule(348);
			try { dbg.enterDecision(348, decisionCanBacktrack[348]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA348_1 = input.LA(2);
				if ( (!(evalPredicate(((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(tokenNameEquals("is") || tokenNameEquals("where") || tokenNameEquals("has"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")")),""))) ) {
					alt348=1;
				}
				else if ( (evalPredicate(tokenNameEquals("is") || tokenNameEquals("where") || tokenNameEquals("has"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")")) ) {
					alt348=4;
				}
				else if ( ((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt348=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 348, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				alt348=2;
				}
				break;
			case NOT:
				{
				alt348=3;
				}
				break;
			case GEN:
				{
				alt348=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 348, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(348);}

			switch (alt348) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					{
					dbg.location(1049,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1050:21: ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					{
					dbg.location(1050,21);
					if ( input.LA(1)==GEN||input.LA(1)==IDENT ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1051,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1051:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					int alt336=2;
					try { dbg.enterSubRule(336);
					try { dbg.enterDecision(336, decisionCanBacktrack[336]);

					try {
						isCyclicDecision = true;
						alt336 = dfa336.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(336);}

					switch (alt336) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:25: ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN
							{
							dbg.location(1052,25);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:25: ( ws )?
							int alt332=2;
							try { dbg.enterSubRule(332);
							try { dbg.enterDecision(332, decisionCanBacktrack[332]);

							int LA332_0 = input.LA(1);
							if ( (LA332_0==COMMENT||LA332_0==NL||LA332_0==WS) ) {
								alt332=1;
							}
							} finally {dbg.exitDecision(332);}

							switch (alt332) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:25: ws
									{
									dbg.location(1052,25);
									pushFollow(FOLLOW_ws_in_pseudo7070);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(332);}
							dbg.location(1052,29);
							match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7073); if (state.failed) return;dbg.location(1052,36);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:36: ( ws )?
							int alt333=2;
							try { dbg.enterSubRule(333);
							try { dbg.enterDecision(333, decisionCanBacktrack[333]);

							int LA333_0 = input.LA(1);
							if ( (LA333_0==COMMENT||LA333_0==NL||LA333_0==WS) ) {
								alt333=1;
							}
							} finally {dbg.exitDecision(333);}

							switch (alt333) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:36: ws
									{
									dbg.location(1052,36);
									pushFollow(FOLLOW_ws_in_pseudo7075);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(333);}
							dbg.location(1052,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:40: ( ( expression ( ws )? ) | STAR )?
							int alt335=3;
							try { dbg.enterSubRule(335);
							try { dbg.enterDecision(335, decisionCanBacktrack[335]);

							int LA335_0 = input.LA(1);
							if ( ((LA335_0 >= ANGLE && LA335_0 <= AT_SIGN)||(LA335_0 >= BOTTOMCENTER_SYM && LA335_0 <= BOTTOMRIGHT_SYM)||LA335_0==CHARSET_SYM||LA335_0==COUNTER_STYLE_SYM||LA335_0==DIMENSION||LA335_0==EMS||LA335_0==EXS||(LA335_0 >= FONT_FACE_SYM && LA335_0 <= FREQ)||LA335_0==GEN||(LA335_0 >= HASH && LA335_0 <= HASH_SYMBOL)||LA335_0==IDENT||LA335_0==IMPORT_SYM||(LA335_0 >= LBRACKET && LA335_0 <= LENGTH)||(LA335_0 >= LESS_AND && LA335_0 <= LESS_JS_STRING)||(LA335_0 >= MEDIA_SYM && LA335_0 <= MOZ_DOCUMENT_SYM)||LA335_0==NAMESPACE_SYM||LA335_0==NUMBER||(LA335_0 >= PAGE_SYM && LA335_0 <= PERCENTAGE_SYMBOL)||LA335_0==PLUS||(LA335_0 >= REM && LA335_0 <= RIGHTTOP_SYM)||(LA335_0 >= SASS_AT_ROOT && LA335_0 <= SASS_DEBUG)||(LA335_0 >= SASS_EACH && LA335_0 <= SASS_ELSE)||LA335_0==SASS_EXTEND||(LA335_0 >= SASS_FOR && LA335_0 <= SASS_FUNCTION)||(LA335_0 >= SASS_IF && LA335_0 <= SASS_MIXIN)||(LA335_0 >= SASS_RETURN && LA335_0 <= SASS_WHILE)||LA335_0==STRING||(LA335_0 >= TILDE && LA335_0 <= TOPRIGHT_SYM)||(LA335_0 >= URANGE && LA335_0 <= URI)||LA335_0==VARIABLE||LA335_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt335=1;
							}
							else if ( (LA335_0==STAR) ) {
								alt335=2;
							}
							} finally {dbg.exitDecision(335);}

							switch (alt335) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:42: ( expression ( ws )? )
									{
									dbg.location(1052,42);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:42: ( expression ( ws )? )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:43: expression ( ws )?
									{
									dbg.location(1052,43);
									pushFollow(FOLLOW_expression_in_pseudo7081);
									expression();
									state._fsp--;
									if (state.failed) return;dbg.location(1052,54);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:54: ( ws )?
									int alt334=2;
									try { dbg.enterSubRule(334);
									try { dbg.enterDecision(334, decisionCanBacktrack[334]);

									int LA334_0 = input.LA(1);
									if ( (LA334_0==COMMENT||LA334_0==NL||LA334_0==WS) ) {
										alt334=1;
									}
									} finally {dbg.exitDecision(334);}

									switch (alt334) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:54: ws
											{
											dbg.location(1052,54);
											pushFollow(FOLLOW_ws_in_pseudo7083);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(334);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:61: STAR
									{
									dbg.location(1052,61);
									match(input,STAR,FOLLOW_STAR_in_pseudo7089); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(335);}
							dbg.location(1052,69);
							match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7094); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(336);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:19: {...}? sass_interpolation_expression_var
					{
					dbg.location(1055,19);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isScssSource()");
					}dbg.location(1055,37);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_pseudo7157);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:19: ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					{
					dbg.location(1056,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:19: ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:21: NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN
					{
					dbg.location(1056,21);
					match(input,NOT,FOLLOW_NOT_in_pseudo7179); if (state.failed) return;dbg.location(1056,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:25: ( ws )?
					int alt337=2;
					try { dbg.enterSubRule(337);
					try { dbg.enterDecision(337, decisionCanBacktrack[337]);

					int LA337_0 = input.LA(1);
					if ( (LA337_0==COMMENT||LA337_0==NL||LA337_0==WS) ) {
						alt337=1;
					}
					} finally {dbg.exitDecision(337);}

					switch (alt337) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:25: ws
							{
							dbg.location(1056,25);
							pushFollow(FOLLOW_ws_in_pseudo7181);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(337);}
					dbg.location(1056,29);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7184); if (state.failed) return;dbg.location(1056,36);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:36: ( ws )?
					int alt338=2;
					try { dbg.enterSubRule(338);
					try { dbg.enterDecision(338, decisionCanBacktrack[338]);

					int LA338_0 = input.LA(1);
					if ( (LA338_0==COMMENT||LA338_0==NL||LA338_0==WS) ) {
						alt338=1;
					}
					} finally {dbg.exitDecision(338);}

					switch (alt338) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:36: ws
							{
							dbg.location(1056,36);
							pushFollow(FOLLOW_ws_in_pseudo7186);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(338);}
					dbg.location(1056,40);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:40: ( selectorsGroup ( ws )? )?
					int alt340=2;
					try { dbg.enterSubRule(340);
					try { dbg.enterDecision(340, decisionCanBacktrack[340]);

					int LA340_0 = input.LA(1);
					if ( (LA340_0==AT_SIGN||LA340_0==COLON||(LA340_0 >= DCOLON && LA340_0 <= DOT)||(LA340_0 >= GEN && LA340_0 <= GREATER)||(LA340_0 >= HASH && LA340_0 <= HASH_SYMBOL)||LA340_0==IDENT||LA340_0==LBRACKET||LA340_0==LESS_AND||LA340_0==MINUS||(LA340_0 >= PIPE && LA340_0 <= PLUS)||LA340_0==SASS_EXTEND_ONLY_SELECTOR||LA340_0==STAR||LA340_0==TILDE) ) {
						alt340=1;
					}
					} finally {dbg.exitDecision(340);}

					switch (alt340) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:42: selectorsGroup ( ws )?
							{
							dbg.location(1056,42);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo7191);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;dbg.location(1056,57);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:57: ( ws )?
							int alt339=2;
							try { dbg.enterSubRule(339);
							try { dbg.enterDecision(339, decisionCanBacktrack[339]);

							int LA339_0 = input.LA(1);
							if ( (LA339_0==COMMENT||LA339_0==NL||LA339_0==WS) ) {
								alt339=1;
							}
							} finally {dbg.exitDecision(339);}

							switch (alt339) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:57: ws
									{
									dbg.location(1056,57);
									pushFollow(FOLLOW_ws_in_pseudo7193);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(339);}

							}
							break;

					}
					} finally {dbg.exitSubRule(340);}
					dbg.location(1056,63);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7198); if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:19: {...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					{
					dbg.location(1057,19);
					if ( !(evalPredicate(tokenNameEquals("is") || tokenNameEquals("where") || tokenNameEquals("has"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")");
					}dbg.location(1057,98);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:98: ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:100: IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN
					{
					dbg.location(1057,100);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo7224); if (state.failed) return;dbg.location(1057,106);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:106: ( ws )?
					int alt341=2;
					try { dbg.enterSubRule(341);
					try { dbg.enterDecision(341, decisionCanBacktrack[341]);

					int LA341_0 = input.LA(1);
					if ( (LA341_0==COMMENT||LA341_0==NL||LA341_0==WS) ) {
						alt341=1;
					}
					} finally {dbg.exitDecision(341);}

					switch (alt341) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:106: ws
							{
							dbg.location(1057,106);
							pushFollow(FOLLOW_ws_in_pseudo7226);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(341);}
					dbg.location(1057,110);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7229); if (state.failed) return;dbg.location(1057,117);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:117: ( ws )?
					int alt342=2;
					try { dbg.enterSubRule(342);
					try { dbg.enterDecision(342, decisionCanBacktrack[342]);

					int LA342_0 = input.LA(1);
					if ( (LA342_0==COMMENT||LA342_0==NL||LA342_0==WS) ) {
						alt342=1;
					}
					} finally {dbg.exitDecision(342);}

					switch (alt342) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:117: ws
							{
							dbg.location(1057,117);
							pushFollow(FOLLOW_ws_in_pseudo7231);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(342);}
					dbg.location(1057,121);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:121: ( selectorsGroup ( ws )? )?
					int alt344=2;
					try { dbg.enterSubRule(344);
					try { dbg.enterDecision(344, decisionCanBacktrack[344]);

					int LA344_0 = input.LA(1);
					if ( (LA344_0==AT_SIGN||LA344_0==COLON||(LA344_0 >= DCOLON && LA344_0 <= DOT)||(LA344_0 >= GEN && LA344_0 <= GREATER)||(LA344_0 >= HASH && LA344_0 <= HASH_SYMBOL)||LA344_0==IDENT||LA344_0==LBRACKET||LA344_0==LESS_AND||LA344_0==MINUS||(LA344_0 >= PIPE && LA344_0 <= PLUS)||LA344_0==SASS_EXTEND_ONLY_SELECTOR||LA344_0==STAR||LA344_0==TILDE) ) {
						alt344=1;
					}
					} finally {dbg.exitDecision(344);}

					switch (alt344) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:123: selectorsGroup ( ws )?
							{
							dbg.location(1057,123);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo7236);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;dbg.location(1057,138);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:138: ( ws )?
							int alt343=2;
							try { dbg.enterSubRule(343);
							try { dbg.enterDecision(343, decisionCanBacktrack[343]);

							int LA343_0 = input.LA(1);
							if ( (LA343_0==COMMENT||LA343_0==NL||LA343_0==WS) ) {
								alt343=1;
							}
							} finally {dbg.exitDecision(343);}

							switch (alt343) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:138: ws
									{
									dbg.location(1057,138);
									pushFollow(FOLLOW_ws_in_pseudo7238);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(343);}

							}
							break;

					}
					} finally {dbg.exitSubRule(344);}
					dbg.location(1057,144);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7243); if (state.failed) return;
					}

					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:19: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					{
					dbg.location(1058,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:19: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:20: {...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN
					{
					dbg.location(1058,20);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isLessSource()");
					}dbg.location(1058,38);
					if ( !(evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"extend\")");
					}dbg.location(1058,67);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo7270); if (state.failed) return;dbg.location(1058,73);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:73: ( ws )?
					int alt345=2;
					try { dbg.enterSubRule(345);
					try { dbg.enterDecision(345, decisionCanBacktrack[345]);

					int LA345_0 = input.LA(1);
					if ( (LA345_0==COMMENT||LA345_0==NL||LA345_0==WS) ) {
						alt345=1;
					}
					} finally {dbg.exitDecision(345);}

					switch (alt345) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:73: ws
							{
							dbg.location(1058,73);
							pushFollow(FOLLOW_ws_in_pseudo7272);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(345);}
					dbg.location(1058,77);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7275); if (state.failed) return;dbg.location(1058,84);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:84: ( ws )?
					int alt346=2;
					try { dbg.enterSubRule(346);
					try { dbg.enterDecision(346, decisionCanBacktrack[346]);

					int LA346_0 = input.LA(1);
					if ( (LA346_0==COMMENT||LA346_0==NL||LA346_0==WS) ) {
						alt346=1;
					}
					} finally {dbg.exitDecision(346);}

					switch (alt346) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:84: ws
							{
							dbg.location(1058,84);
							pushFollow(FOLLOW_ws_in_pseudo7277);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(346);}
					dbg.location(1058,88);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:88: ( selectorsGroup )?
					int alt347=2;
					try { dbg.enterSubRule(347);
					try { dbg.enterDecision(347, decisionCanBacktrack[347]);

					int LA347_0 = input.LA(1);
					if ( (LA347_0==AT_SIGN||LA347_0==COLON||(LA347_0 >= DCOLON && LA347_0 <= DOT)||(LA347_0 >= GEN && LA347_0 <= GREATER)||(LA347_0 >= HASH && LA347_0 <= HASH_SYMBOL)||LA347_0==IDENT||LA347_0==LBRACKET||LA347_0==LESS_AND||LA347_0==MINUS||(LA347_0 >= PIPE && LA347_0 <= PLUS)||LA347_0==SASS_EXTEND_ONLY_SELECTOR||LA347_0==STAR||LA347_0==TILDE) ) {
						alt347=1;
					}
					} finally {dbg.exitDecision(347);}

					switch (alt347) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:88: selectorsGroup
							{
							dbg.location(1058,88);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo7280);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(347);}
					dbg.location(1058,104);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7283); if (state.failed) return;
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(348);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1060, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudo");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudo"



	// $ANTLR start "propertyDeclaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1062:1: propertyDeclaration : ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue |{...}? property ( ws )? COLON ( ws )? ( componentValueOuter )? | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? );
	public final void propertyDeclaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1062, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:5: ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue |{...}? property ( ws )? COLON ( ws )? ( componentValueOuter )? | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? )
			int alt360=3;
			try { dbg.enterDecision(360, decisionCanBacktrack[360]);

			switch ( input.LA(1) ) {
			case STAR:
				{
				int LA360_1 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt360=1;
				}
				else if ( (true) ) {
					alt360=3;
				}

				}
				break;
			case IDENT:
				{
				int LA360_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt360=1;
				}
				else if ( (evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
					alt360=2;
				}
				else if ( (true) ) {
					alt360=3;
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA360_3 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt360=1;
				}
				else if ( ((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt360=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt360=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 360, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA360_4 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt360=1;
				}
				else if ( ((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt360=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt360=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 360, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				int LA360_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt360=1;
				}
				else if ( (evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
					alt360=2;
				}
				else if ( (true) ) {
					alt360=3;
				}

				}
				break;
			case MINUS:
				{
				int LA360_6 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt360=1;
				}
				else if ( ((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt360=2;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt360=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 360, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA360_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt360=1;
				}
				else if ( (evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
					alt360=2;
				}
				else if ( (true) ) {
					alt360=3;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA360_8 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt360=1;
				}
				else if ( (((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt360=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt360=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 360, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA360_9 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt360=1;
				}
				else if ( (((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt360=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt360=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 360, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 360, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(360);}

			switch (alt360) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:7: {...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue
					{
					dbg.location(1064,7);
					if ( !(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")");
					}dbg.location(1064,66);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:66: ( STAR )?
					int alt349=2;
					try { dbg.enterSubRule(349);
					try { dbg.enterDecision(349, decisionCanBacktrack[349]);

					int LA349_0 = input.LA(1);
					if ( (LA349_0==STAR) ) {
						alt349=1;
					}
					} finally {dbg.exitDecision(349);}

					switch (alt349) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:66: STAR
							{
							dbg.location(1064,66);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration7325); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(349);}
					dbg.location(1064,72);
					pushFollow(FOLLOW_property_in_propertyDeclaration7328);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(1064,81);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:81: ( ws )?
					int alt350=2;
					try { dbg.enterSubRule(350);
					try { dbg.enterDecision(350, decisionCanBacktrack[350]);

					int LA350_0 = input.LA(1);
					if ( (LA350_0==COMMENT||LA350_0==NL||LA350_0==WS) ) {
						alt350=1;
					}
					} finally {dbg.exitDecision(350);}

					switch (alt350) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:81: ws
							{
							dbg.location(1064,81);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7330);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(350);}
					dbg.location(1064,85);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration7333); if (state.failed) return;dbg.location(1064,91);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:91: ( ws )?
					int alt351=2;
					try { dbg.enterSubRule(351);
					try { dbg.enterDecision(351, decisionCanBacktrack[351]);

					int LA351_0 = input.LA(1);
					if ( (LA351_0==COMMENT||LA351_0==NL||LA351_0==WS) ) {
						alt351=1;
					}
					} finally {dbg.exitDecision(351);}

					switch (alt351) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:91: ws
							{
							dbg.location(1064,91);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7335);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(351);}
					dbg.location(1064,95);
					pushFollow(FOLLOW_cp_propertyValue_in_propertyDeclaration7338);
					cp_propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1065:7: {...}? property ( ws )? COLON ( ws )? ( componentValueOuter )?
					{
					dbg.location(1065,7);
					if ( !(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "tokenNameStartsWith(\"--\")");
					}dbg.location(1065,36);
					pushFollow(FOLLOW_property_in_propertyDeclaration7349);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(1065,45);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1065:45: ( ws )?
					int alt352=2;
					try { dbg.enterSubRule(352);
					try { dbg.enterDecision(352, decisionCanBacktrack[352]);

					int LA352_0 = input.LA(1);
					if ( (LA352_0==COMMENT||LA352_0==NL||LA352_0==WS) ) {
						alt352=1;
					}
					} finally {dbg.exitDecision(352);}

					switch (alt352) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1065:45: ws
							{
							dbg.location(1065,45);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7351);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(352);}
					dbg.location(1065,49);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration7354); if (state.failed) return;dbg.location(1065,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1065:55: ( ws )?
					int alt353=2;
					try { dbg.enterSubRule(353);
					try { dbg.enterDecision(353, decisionCanBacktrack[353]);

					int LA353_0 = input.LA(1);
					if ( (LA353_0==COMMENT||LA353_0==NL||LA353_0==WS) ) {
						alt353=1;
					}
					} finally {dbg.exitDecision(353);}

					switch (alt353) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1065:55: ws
							{
							dbg.location(1065,55);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7356);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(353);}
					dbg.location(1065,59);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1065:59: ( componentValueOuter )?
					int alt354=2;
					try { dbg.enterSubRule(354);
					try { dbg.enterDecision(354, decisionCanBacktrack[354]);

					switch ( input.LA(1) ) {
						case LBRACE:
						case LPAREN:
							{
							alt354=1;
							}
							break;
						case LBRACKET:
							{
							alt354=1;
							}
							break;
						case IDENT:
							{
							alt354=1;
							}
							break;
						case COMMENT:
						case NL:
						case WS:
							{
							alt354=1;
							}
							break;
						case LESS_AND:
							{
							alt354=1;
							}
							break;
						case DOT:
							{
							alt354=1;
							}
							break;
						case HASH:
							{
							alt354=1;
							}
							break;
						case SASS_MIXIN:
							{
							alt354=1;
							}
							break;
						case AT_IDENT:
							{
							alt354=1;
							}
							break;
						case SASS_INCLUDE:
							{
							alt354=1;
							}
							break;
						case SASS_AT_ROOT:
							{
							alt354=1;
							}
							break;
						case GREATER:
						case PLUS:
						case TILDE:
							{
							alt354=1;
							}
							break;
						case SASS_EXTEND_ONLY_SELECTOR:
							{
							int LA354_16 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(isScssSource(),"isScssSource()"),""))) ) {
								alt354=1;
							}
							}
							break;
						case HASH_SYMBOL:
							{
							alt354=1;
							}
							break;
						case DIMENSION:
							{
							int LA354_18 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt354=1;
							}
							}
							break;
						case COLON:
						case DCOLON:
							{
							alt354=1;
							}
							break;
						case MINUS:
							{
							alt354=1;
							}
							break;
						case AT_SIGN:
							{
							alt354=1;
							}
							break;
						case STAR:
							{
							alt354=1;
							}
							break;
						case PIPE:
							{
							alt354=1;
							}
							break;
						case GEN:
							{
							alt354=1;
							}
							break;
						case VARIABLE:
							{
							alt354=1;
							}
							break;
						case SASS_DEBUG:
						case SASS_WARN:
							{
							alt354=1;
							}
							break;
						case SASS_VAR:
							{
							alt354=1;
							}
							break;
						case SUPPORTS_SYM:
							{
							alt354=1;
							}
							break;
						case SASS_IF:
							{
							alt354=1;
							}
							break;
						case SASS_FOR:
							{
							alt354=1;
							}
							break;
						case SASS_EACH:
							{
							alt354=1;
							}
							break;
						case SASS_WHILE:
							{
							alt354=1;
							}
							break;
						case A:
						case ANGLE:
						case B:
						case BEGINS:
						case C:
						case CDC:
						case CDO:
						case COMMA:
						case CONTAINER_SYM:
						case CONTAINS:
						case CP_DOTS:
						case CP_EQ:
						case CP_NOT_EQ:
						case D:
						case DASHMATCH:
						case E:
						case EMS:
						case ENDS:
						case ESCAPE:
						case EXCLAMATION_MARK:
						case EXS:
						case F:
						case FREQ:
						case G:
						case GREATER_OR_EQ:
						case H:
						case HEXCHAR:
						case HEXCHAR_WILDCARD:
						case I:
						case IMPORTANT_SYM:
						case INCLUDES:
						case INVALID:
						case J:
						case K:
						case L:
						case LAYER_SYM:
						case LENGTH:
						case LESS:
						case LESS_JS_STRING:
						case LESS_OR_EQ:
						case LESS_REST:
						case LINE_COMMENT:
						case M:
						case MOZ_DOMAIN:
						case MOZ_REGEXP:
						case MOZ_URL_PREFIX:
						case N:
						case NAME:
						case NMCHAR:
						case NMSTART:
						case NONASCII:
						case NOT:
						case NUMBER:
						case O:
						case OPEQ:
						case P:
						case PERCENTAGE:
						case PERCENTAGE_SYMBOL:
						case Q:
						case R:
						case REM:
						case RESOLUTION:
						case S:
						case SASS_CONTENT:
						case SASS_DEFAULT:
						case SASS_ELSEIF:
						case SASS_ERROR:
						case SASS_GLOBAL:
						case SASS_OPTIONAL:
						case SOLIDUS:
						case STRING:
						case T:
						case TIME:
						case U:
						case UNICODE:
						case URANGE:
						case URI:
						case URL:
						case V:
						case W:
						case X:
						case Y:
						case Z:
							{
							alt354=1;
							}
							break;
						case IMPORT_SYM:
							{
							alt354=1;
							}
							break;
						case PAGE_SYM:
							{
							alt354=1;
							}
							break;
						case FONT_FACE_SYM:
							{
							alt354=1;
							}
							break;
						case MOZ_DOCUMENT_SYM:
							{
							alt354=1;
							}
							break;
						case WEBKIT_KEYFRAMES_SYM:
							{
							alt354=1;
							}
							break;
						case MEDIA_SYM:
							{
							alt354=1;
							}
							break;
						case SASS_EXTEND:
							{
							alt354=1;
							}
							break;
						case BOTTOMCENTER_SYM:
						case BOTTOMLEFTCORNER_SYM:
						case BOTTOMLEFT_SYM:
						case BOTTOMRIGHTCORNER_SYM:
						case BOTTOMRIGHT_SYM:
						case LEFTBOTTOM_SYM:
						case LEFTMIDDLE_SYM:
						case LEFTTOP_SYM:
						case RIGHTBOTTOM_SYM:
						case RIGHTMIDDLE_SYM:
						case RIGHTTOP_SYM:
						case TOPCENTER_SYM:
						case TOPLEFTCORNER_SYM:
						case TOPLEFT_SYM:
						case TOPRIGHTCORNER_SYM:
						case TOPRIGHT_SYM:
							{
							alt354=1;
							}
							break;
						case CHARSET_SYM:
						case COUNTER_STYLE_SYM:
						case NAMESPACE_SYM:
						case SASS_ELSE:
						case SASS_FORWARD:
						case SASS_FUNCTION:
						case SASS_RETURN:
						case SASS_USE:
							{
							alt354=1;
							}
							break;
					}
					} finally {dbg.exitDecision(354);}

					switch (alt354) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1065:59: componentValueOuter
							{
							dbg.location(1065,59);
							pushFollow(FOLLOW_componentValueOuter_in_propertyDeclaration7359);
							componentValueOuter();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(354);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:7: ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )?
					{
					dbg.location(1066,7);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:7: ( STAR )?
					int alt355=2;
					try { dbg.enterSubRule(355);
					try { dbg.enterDecision(355, decisionCanBacktrack[355]);

					int LA355_0 = input.LA(1);
					if ( (LA355_0==STAR) ) {
						alt355=1;
					}
					} finally {dbg.exitDecision(355);}

					switch (alt355) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:7: STAR
							{
							dbg.location(1066,7);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration7368); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(355);}
					dbg.location(1066,13);
					pushFollow(FOLLOW_property_in_propertyDeclaration7371);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(1066,22);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:22: ( ws )?
					int alt356=2;
					try { dbg.enterSubRule(356);
					try { dbg.enterDecision(356, decisionCanBacktrack[356]);

					int LA356_0 = input.LA(1);
					if ( (LA356_0==COMMENT||LA356_0==NL||LA356_0==WS) ) {
						alt356=1;
					}
					} finally {dbg.exitDecision(356);}

					switch (alt356) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:22: ws
							{
							dbg.location(1066,22);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7373);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(356);}
					dbg.location(1066,26);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration7376); if (state.failed) return;dbg.location(1066,32);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:32: ( ws )?
					int alt357=2;
					try { dbg.enterSubRule(357);
					try { dbg.enterDecision(357, decisionCanBacktrack[357]);

					int LA357_0 = input.LA(1);
					if ( (LA357_0==COMMENT||LA357_0==NL||LA357_0==WS) ) {
						alt357=1;
					}
					} finally {dbg.exitDecision(357);}

					switch (alt357) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:32: ws
							{
							dbg.location(1066,32);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7378);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(357);}
					dbg.location(1066,36);
					pushFollow(FOLLOW_propertyValue_in_propertyDeclaration7381);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1066,50);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:50: ( ( ws )? prio )?
					int alt359=2;
					try { dbg.enterSubRule(359);
					try { dbg.enterDecision(359, decisionCanBacktrack[359]);

					try {
						isCyclicDecision = true;
						alt359 = dfa359.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(359);}

					switch (alt359) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:51: ( ws )? prio
							{
							dbg.location(1066,51);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:51: ( ws )?
							int alt358=2;
							try { dbg.enterSubRule(358);
							try { dbg.enterDecision(358, decisionCanBacktrack[358]);

							int LA358_0 = input.LA(1);
							if ( (LA358_0==COMMENT||LA358_0==NL||LA358_0==WS) ) {
								alt358=1;
							}
							} finally {dbg.exitDecision(358);}

							switch (alt358) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:51: ws
									{
									dbg.location(1066,51);
									pushFollow(FOLLOW_ws_in_propertyDeclaration7384);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(358);}
							dbg.location(1066,55);
							pushFollow(FOLLOW_prio_in_propertyDeclaration7387);
							prio();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(359);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        //recovery: if an mismatched token occures inside a declaration is found,
			        //then skip all tokens until an end of the rule is found represented by right curly brace
			        consumeUntil(input, BitSet.of(SEMI, RBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1068, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyDeclaration"



	// $ANTLR start "cp_propertyValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1077:1: cp_propertyValue : ({...}? cp_expression_list | propertyValue );
	public final void cp_propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1077, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:5: ({...}? cp_expression_list | propertyValue )
			int alt361=2;
			try { dbg.enterDecision(361, decisionCanBacktrack[361]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt361=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA361_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case IDENT:
				{
				int LA361_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case VARIABLE:
				{
				int LA361_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case LBRACKET:
				{
				int LA361_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA361_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case URANGE:
				{
				int LA361_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA361_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA361_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case EMS:
				{
				int LA361_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case REM:
				{
				int LA361_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case EXS:
				{
				int LA361_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA361_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case TIME:
				{
				int LA361_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case FREQ:
				{
				int LA361_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA361_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA361_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case STRING:
				{
				int LA361_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case TILDE:
				{
				int LA361_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA361_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case GEN:
				{
				int LA361_22 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case URI:
				{
				int LA361_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case HASH:
				{
				int LA361_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA361_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt361=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt361=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA361_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt361=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt361=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA361_27 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt361=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt361=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA361_28 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt361=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt361=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA361_29 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt361=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt361=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA361_30 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt361=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 361, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(361);}

			switch (alt361) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1079:5: {...}? cp_expression_list
					{
					dbg.location(1079,5);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_propertyValue", "isCssPreprocessorSource()");
					}dbg.location(1079,34);
					pushFollow(FOLLOW_cp_expression_list_in_cp_propertyValue7427);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1080:7: propertyValue
					{
					dbg.location(1080,7);
					pushFollow(FOLLOW_propertyValue_in_cp_propertyValue7435);
					propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1081, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_propertyValue"



	// $ANTLR start "propertyValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1083:1: propertyValue : expression ;
	public final void propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1083, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1084:2: ( expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1085:9: expression
			{
			dbg.location(1085,9);
			pushFollow(FOLLOW_expression_in_propertyValue7457);
			expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1086, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyValue"



	// $ANTLR start "expressionPredicate"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:1: expressionPredicate options {k=1; } : (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) ;
	public final void expressionPredicate() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expressionPredicate");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1089, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1091:5: ( (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1092:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE )
			{
			dbg.location(1092,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1092:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+
			int cnt362=0;
			try { dbg.enterSubRule(362);

			loop362:
			while (true) {
				int alt362=2;
				try { dbg.enterDecision(362, decisionCanBacktrack[362]);

				int LA362_0 = input.LA(1);
				if ( ((LA362_0 >= A && LA362_0 <= ANGLE)||(LA362_0 >= AT_SIGN && LA362_0 <= LAYER_SYM)||(LA362_0 >= LBRACKET && LA362_0 <= R)||(LA362_0 >= RBRACKET && LA362_0 <= SASS_USE)||(LA362_0 >= SASS_WARN && LA362_0 <= SASS_WHILE)||(LA362_0 >= STRING && LA362_0 <= Z)) ) {
					alt362=1;
				}

				} finally {dbg.exitDecision(362);}

				switch (alt362) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1092,5);
					if ( (input.LA(1) >= A && input.LA(1) <= ANGLE)||(input.LA(1) >= AT_SIGN && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_USE)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= STRING && input.LA(1) <= Z) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt362 >= 1 ) break loop362;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(362, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt362++;
			}
			} finally {dbg.exitSubRule(362);}
			dbg.location(1092,76);
			if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1093, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expressionPredicate");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expressionPredicate"



	// $ANTLR start "preservedToken"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1095:1: preservedToken : ~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET ) ;
	public final void preservedToken() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "preservedToken");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1095, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1095:15: (~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1095,15);
			if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LINE_COMMENT)||(input.LA(1) >= M && input.LA(1) <= R)||(input.LA(1) >= REM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1095, 75);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "preservedToken");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "preservedToken"



	// $ANTLR start "preservedTokenTopLevel"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1097:1: preservedTokenTopLevel : ~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET | SEMI ) ;
	public final void preservedTokenTopLevel() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "preservedTokenTopLevel");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1097, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1097:23: (~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET | SEMI ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1097,23);
			if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LINE_COMMENT)||(input.LA(1) >= M && input.LA(1) <= R)||(input.LA(1) >= REM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1097, 91);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "preservedTokenTopLevel");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "preservedTokenTopLevel"



	// $ANTLR start "braceBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1099:1: braceBlock : LBRACE ( componentValue )+ RBRACE ;
	public final void braceBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "braceBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1099, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1099:11: ( LBRACE ( componentValue )+ RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1099:13: LBRACE ( componentValue )+ RBRACE
			{
			dbg.location(1099,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_braceBlock7613); if (state.failed) return;dbg.location(1099,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1099:20: ( componentValue )+
			int cnt363=0;
			try { dbg.enterSubRule(363);

			loop363:
			while (true) {
				int alt363=2;
				try { dbg.enterDecision(363, decisionCanBacktrack[363]);

				int LA363_0 = input.LA(1);
				if ( ((LA363_0 >= A && LA363_0 <= R)||(LA363_0 >= REM && LA363_0 <= RIGHTTOP_SYM)||(LA363_0 >= S && LA363_0 <= Z)) ) {
					alt363=1;
				}

				} finally {dbg.exitDecision(363);}

				switch (alt363) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1099:20: componentValue
					{
					dbg.location(1099,20);
					pushFollow(FOLLOW_componentValue_in_braceBlock7615);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					if ( cnt363 >= 1 ) break loop363;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(363, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt363++;
			}
			} finally {dbg.exitSubRule(363);}
			dbg.location(1099,36);
			match(input,RBRACE,FOLLOW_RBRACE_in_braceBlock7618); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1099, 41);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "braceBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "braceBlock"



	// $ANTLR start "bracketBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:1: bracketBlock : LBRACKET ( componentValue )+ RBRACKET ;
	public final void bracketBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bracketBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1101, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:13: ( LBRACKET ( componentValue )+ RBRACKET )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:15: LBRACKET ( componentValue )+ RBRACKET
			{
			dbg.location(1101,15);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_bracketBlock7625); if (state.failed) return;dbg.location(1101,24);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:24: ( componentValue )+
			int cnt364=0;
			try { dbg.enterSubRule(364);

			loop364:
			while (true) {
				int alt364=2;
				try { dbg.enterDecision(364, decisionCanBacktrack[364]);

				int LA364_0 = input.LA(1);
				if ( ((LA364_0 >= A && LA364_0 <= R)||(LA364_0 >= REM && LA364_0 <= RIGHTTOP_SYM)||(LA364_0 >= S && LA364_0 <= Z)) ) {
					alt364=1;
				}

				} finally {dbg.exitDecision(364);}

				switch (alt364) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:24: componentValue
					{
					dbg.location(1101,24);
					pushFollow(FOLLOW_componentValue_in_bracketBlock7627);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					if ( cnt364 >= 1 ) break loop364;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(364, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt364++;
			}
			} finally {dbg.exitSubRule(364);}
			dbg.location(1101,40);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_bracketBlock7630); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1101, 47);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bracketBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bracketBlock"



	// $ANTLR start "parenBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:1: parenBlock : LPAREN ( componentValue )+ RPAREN ;
	public final void parenBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "parenBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1103, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:11: ( LPAREN ( componentValue )+ RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:13: LPAREN ( componentValue )+ RPAREN
			{
			dbg.location(1103,13);
			match(input,LPAREN,FOLLOW_LPAREN_in_parenBlock7637); if (state.failed) return;dbg.location(1103,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:20: ( componentValue )+
			int cnt365=0;
			try { dbg.enterSubRule(365);

			loop365:
			while (true) {
				int alt365=2;
				try { dbg.enterDecision(365, decisionCanBacktrack[365]);

				int LA365_0 = input.LA(1);
				if ( ((LA365_0 >= A && LA365_0 <= R)||(LA365_0 >= REM && LA365_0 <= RIGHTTOP_SYM)||(LA365_0 >= S && LA365_0 <= Z)) ) {
					alt365=1;
				}

				} finally {dbg.exitDecision(365);}

				switch (alt365) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1103:20: componentValue
					{
					dbg.location(1103,20);
					pushFollow(FOLLOW_componentValue_in_parenBlock7639);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					if ( cnt365 >= 1 ) break loop365;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(365, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt365++;
			}
			} finally {dbg.exitSubRule(365);}
			dbg.location(1103,36);
			match(input,RPAREN,FOLLOW_RPAREN_in_parenBlock7642); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1103, 41);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "parenBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "parenBlock"



	// $ANTLR start "componentValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:1: componentValue : ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedToken );
	public final void componentValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "componentValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1105, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:15: ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedToken )
			int alt366=5;
			try { dbg.enterDecision(366, decisionCanBacktrack[366]);

			switch ( input.LA(1) ) {
			case LPAREN:
				{
				alt366=1;
				}
				break;
			case LBRACE:
				{
				alt366=2;
				}
				break;
			case LBRACKET:
				{
				alt366=3;
				}
				break;
			case IDENT:
				{
				int LA366_4 = input.LA(2);
				if ( (synpred47_Css3()) ) {
					alt366=4;
				}
				else if ( (true) ) {
					alt366=5;
				}

				}
				break;
			case A:
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case B:
			case BEGINS:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case C:
			case CDC:
			case CDO:
			case CHARSET_SYM:
			case COLON:
			case COMMA:
			case COMMENT:
			case CONTAINER_SYM:
			case CONTAINS:
			case COUNTER_STYLE_SYM:
			case CP_DOTS:
			case CP_EQ:
			case CP_NOT_EQ:
			case D:
			case DASHMATCH:
			case DCOLON:
			case DIMENSION:
			case DOT:
			case E:
			case EMS:
			case ENDS:
			case ESCAPE:
			case EXCLAMATION_MARK:
			case EXS:
			case F:
			case FONT_FACE_SYM:
			case FREQ:
			case G:
			case GEN:
			case GREATER:
			case GREATER_OR_EQ:
			case H:
			case HASH:
			case HASH_SYMBOL:
			case HEXCHAR:
			case HEXCHAR_WILDCARD:
			case I:
			case IMPORTANT_SYM:
			case IMPORT_SYM:
			case INCLUDES:
			case INVALID:
			case J:
			case K:
			case L:
			case LAYER_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS:
			case LESS_AND:
			case LESS_JS_STRING:
			case LESS_OR_EQ:
			case LESS_REST:
			case LINE_COMMENT:
			case M:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case MOZ_DOMAIN:
			case MOZ_REGEXP:
			case MOZ_URL_PREFIX:
			case N:
			case NAME:
			case NAMESPACE_SYM:
			case NL:
			case NMCHAR:
			case NMSTART:
			case NONASCII:
			case NOT:
			case NUMBER:
			case O:
			case OPEQ:
			case P:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PIPE:
			case PLUS:
			case Q:
			case R:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case S:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_DEFAULT:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_ELSEIF:
			case SASS_ERROR:
			case SASS_EXTEND:
			case SASS_EXTEND_ONLY_SELECTOR:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_GLOBAL:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_OPTIONAL:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case SEMI:
			case SOLIDUS:
			case STAR:
			case STRING:
			case SUPPORTS_SYM:
			case T:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case U:
			case UNICODE:
			case URANGE:
			case URI:
			case URL:
			case V:
			case VARIABLE:
			case W:
			case WEBKIT_KEYFRAMES_SYM:
			case WS:
			case X:
			case Y:
			case Z:
				{
				alt366=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 366, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(366);}

			switch (alt366) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:17: parenBlock
					{
					dbg.location(1105,17);
					pushFollow(FOLLOW_parenBlock_in_componentValue7649);
					parenBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:30: braceBlock
					{
					dbg.location(1105,30);
					pushFollow(FOLLOW_braceBlock_in_componentValue7653);
					braceBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:43: bracketBlock
					{
					dbg.location(1105,43);
					pushFollow(FOLLOW_bracketBlock_in_componentValue7657);
					bracketBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:58: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(1105,87);
					pushFollow(FOLLOW_function_in_componentValue7672);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:98: preservedToken
					{
					dbg.location(1105,98);
					pushFollow(FOLLOW_preservedToken_in_componentValue7676);
					preservedToken();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1105, 111);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "componentValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "componentValue"



	// $ANTLR start "componentValueOuter"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:1: componentValueOuter : ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel ) ( componentValueOuter )* ;
	public final void componentValueOuter() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "componentValueOuter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1107, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:20: ( ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel ) ( componentValueOuter )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:22: ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel ) ( componentValueOuter )*
			{
			dbg.location(1107,22);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:22: ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel )
			int alt367=5;
			try { dbg.enterSubRule(367);
			try { dbg.enterDecision(367, decisionCanBacktrack[367]);

			switch ( input.LA(1) ) {
			case LPAREN:
				{
				alt367=1;
				}
				break;
			case LBRACE:
				{
				alt367=2;
				}
				break;
			case LBRACKET:
				{
				alt367=3;
				}
				break;
			case IDENT:
				{
				int LA367_4 = input.LA(2);
				if ( (synpred48_Css3()) ) {
					alt367=4;
				}
				else if ( (true) ) {
					alt367=5;
				}

				}
				break;
			case A:
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case B:
			case BEGINS:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case C:
			case CDC:
			case CDO:
			case CHARSET_SYM:
			case COLON:
			case COMMA:
			case COMMENT:
			case CONTAINER_SYM:
			case CONTAINS:
			case COUNTER_STYLE_SYM:
			case CP_DOTS:
			case CP_EQ:
			case CP_NOT_EQ:
			case D:
			case DASHMATCH:
			case DCOLON:
			case DIMENSION:
			case DOT:
			case E:
			case EMS:
			case ENDS:
			case ESCAPE:
			case EXCLAMATION_MARK:
			case EXS:
			case F:
			case FONT_FACE_SYM:
			case FREQ:
			case G:
			case GEN:
			case GREATER:
			case GREATER_OR_EQ:
			case H:
			case HASH:
			case HASH_SYMBOL:
			case HEXCHAR:
			case HEXCHAR_WILDCARD:
			case I:
			case IMPORTANT_SYM:
			case IMPORT_SYM:
			case INCLUDES:
			case INVALID:
			case J:
			case K:
			case L:
			case LAYER_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS:
			case LESS_AND:
			case LESS_JS_STRING:
			case LESS_OR_EQ:
			case LESS_REST:
			case LINE_COMMENT:
			case M:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case MOZ_DOMAIN:
			case MOZ_REGEXP:
			case MOZ_URL_PREFIX:
			case N:
			case NAME:
			case NAMESPACE_SYM:
			case NL:
			case NMCHAR:
			case NMSTART:
			case NONASCII:
			case NOT:
			case NUMBER:
			case O:
			case OPEQ:
			case P:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PIPE:
			case PLUS:
			case Q:
			case R:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case S:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_DEFAULT:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_ELSEIF:
			case SASS_ERROR:
			case SASS_EXTEND:
			case SASS_EXTEND_ONLY_SELECTOR:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_GLOBAL:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_OPTIONAL:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case SOLIDUS:
			case STAR:
			case STRING:
			case SUPPORTS_SYM:
			case T:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case U:
			case UNICODE:
			case URANGE:
			case URI:
			case URL:
			case V:
			case VARIABLE:
			case W:
			case WEBKIT_KEYFRAMES_SYM:
			case WS:
			case X:
			case Y:
			case Z:
				{
				alt367=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 367, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(367);}

			switch (alt367) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:23: parenBlock
					{
					dbg.location(1107,23);
					pushFollow(FOLLOW_parenBlock_in_componentValueOuter7684);
					parenBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:36: braceBlock
					{
					dbg.location(1107,36);
					pushFollow(FOLLOW_braceBlock_in_componentValueOuter7688);
					braceBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:49: bracketBlock
					{
					dbg.location(1107,49);
					pushFollow(FOLLOW_bracketBlock_in_componentValueOuter7692);
					bracketBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:64: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(1107,93);
					pushFollow(FOLLOW_function_in_componentValueOuter7707);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:104: preservedTokenTopLevel
					{
					dbg.location(1107,104);
					pushFollow(FOLLOW_preservedTokenTopLevel_in_componentValueOuter7711);
					preservedTokenTopLevel();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(367);}
			dbg.location(1107,128);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:128: ( componentValueOuter )*
			try { dbg.enterSubRule(368);

			loop368:
			while (true) {
				int alt368=2;
				try { dbg.enterDecision(368, decisionCanBacktrack[368]);

				switch ( input.LA(1) ) {
				case COMMENT:
				case NL:
				case WS:
					{
					alt368=1;
					}
					break;
				case LESS_AND:
					{
					alt368=1;
					}
					break;
				case DOT:
					{
					alt368=1;
					}
					break;
				case HASH:
					{
					alt368=1;
					}
					break;
				case SASS_MIXIN:
					{
					alt368=1;
					}
					break;
				case AT_IDENT:
					{
					alt368=1;
					}
					break;
				case SASS_INCLUDE:
					{
					alt368=1;
					}
					break;
				case SASS_AT_ROOT:
					{
					alt368=1;
					}
					break;
				case GREATER:
				case PLUS:
				case TILDE:
					{
					alt368=1;
					}
					break;
				case SASS_EXTEND_ONLY_SELECTOR:
					{
					alt368=1;
					}
					break;
				case HASH_SYMBOL:
					{
					alt368=1;
					}
					break;
				case DIMENSION:
					{
					alt368=1;
					}
					break;
				case LBRACKET:
					{
					alt368=1;
					}
					break;
				case COLON:
				case DCOLON:
					{
					alt368=1;
					}
					break;
				case IDENT:
					{
					alt368=1;
					}
					break;
				case AT_SIGN:
					{
					alt368=1;
					}
					break;
				case MINUS:
					{
					alt368=1;
					}
					break;
				case STAR:
					{
					alt368=1;
					}
					break;
				case PIPE:
					{
					alt368=1;
					}
					break;
				case GEN:
					{
					alt368=1;
					}
					break;
				case VARIABLE:
					{
					alt368=1;
					}
					break;
				case SASS_DEBUG:
				case SASS_WARN:
					{
					alt368=1;
					}
					break;
				case SASS_VAR:
					{
					alt368=1;
					}
					break;
				case SASS_IF:
					{
					alt368=1;
					}
					break;
				case SASS_FOR:
					{
					alt368=1;
					}
					break;
				case SASS_EACH:
					{
					alt368=1;
					}
					break;
				case SASS_WHILE:
					{
					alt368=1;
					}
					break;
				case SASS_CONTENT:
					{
					alt368=1;
					}
					break;
				case IMPORT_SYM:
					{
					alt368=1;
					}
					break;
				case PAGE_SYM:
					{
					alt368=1;
					}
					break;
				case FONT_FACE_SYM:
					{
					alt368=1;
					}
					break;
				case MOZ_DOCUMENT_SYM:
					{
					alt368=1;
					}
					break;
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt368=1;
					}
					break;
				case MEDIA_SYM:
					{
					alt368=1;
					}
					break;
				case SASS_EXTEND:
					{
					alt368=1;
					}
					break;
				case SUPPORTS_SYM:
					{
					alt368=1;
					}
					break;
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
					{
					alt368=1;
					}
					break;
				case CHARSET_SYM:
				case COUNTER_STYLE_SYM:
				case NAMESPACE_SYM:
				case SASS_ELSE:
				case SASS_FORWARD:
				case SASS_FUNCTION:
				case SASS_RETURN:
				case SASS_USE:
					{
					alt368=1;
					}
					break;
				case LPAREN:
					{
					alt368=1;
					}
					break;
				case LBRACE:
					{
					alt368=1;
					}
					break;
				case A:
				case ANGLE:
				case B:
				case BEGINS:
				case C:
				case CDC:
				case CDO:
				case COMMA:
				case CONTAINER_SYM:
				case CONTAINS:
				case CP_DOTS:
				case CP_EQ:
				case CP_NOT_EQ:
				case D:
				case DASHMATCH:
				case E:
				case EMS:
				case ENDS:
				case ESCAPE:
				case EXCLAMATION_MARK:
				case EXS:
				case F:
				case FREQ:
				case G:
				case GREATER_OR_EQ:
				case H:
				case HEXCHAR:
				case HEXCHAR_WILDCARD:
				case I:
				case IMPORTANT_SYM:
				case INCLUDES:
				case INVALID:
				case J:
				case K:
				case L:
				case LAYER_SYM:
				case LENGTH:
				case LESS:
				case LESS_JS_STRING:
				case LESS_OR_EQ:
				case LESS_REST:
				case LINE_COMMENT:
				case M:
				case MOZ_DOMAIN:
				case MOZ_REGEXP:
				case MOZ_URL_PREFIX:
				case N:
				case NAME:
				case NMCHAR:
				case NMSTART:
				case NONASCII:
				case NOT:
				case NUMBER:
				case O:
				case OPEQ:
				case P:
				case PERCENTAGE:
				case PERCENTAGE_SYMBOL:
				case Q:
				case R:
				case REM:
				case RESOLUTION:
				case S:
				case SASS_DEFAULT:
				case SASS_ELSEIF:
				case SASS_ERROR:
				case SASS_GLOBAL:
				case SASS_OPTIONAL:
				case SOLIDUS:
				case STRING:
				case T:
				case TIME:
				case U:
				case UNICODE:
				case URANGE:
				case URI:
				case URL:
				case V:
				case W:
				case X:
				case Y:
				case Z:
					{
					alt368=1;
					}
					break;
				}
				} finally {dbg.exitDecision(368);}

				switch (alt368) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:128: componentValueOuter
					{
					dbg.location(1107,128);
					pushFollow(FOLLOW_componentValueOuter_in_componentValueOuter7714);
					componentValueOuter();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop368;
				}
			}
			} finally {dbg.exitSubRule(368);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1107, 147);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "componentValueOuter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "componentValueOuter"



	// $ANTLR start "syncToDeclarationsRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1111:1: syncToDeclarationsRule :;
	public final void syncToDeclarationsRule() throws RecognitionException {

		        //why sync to DOT? - LESS allows class rules nested
		        syncToSet(BitSet.of(IDENT, RBRACE, STAR, DOT));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToDeclarationsRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1111, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1116:6: ()
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1117:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1117, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToDeclarationsRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToDeclarationsRule"



	// $ANTLR start "syncTo_RBRACE"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1119:1: syncTo_RBRACE :;
	public final void syncTo_RBRACE() throws RecognitionException {

		        syncToRBRACE(1); //initial nest == 1
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_RBRACE");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1119, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1123:6: ()
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1124, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_RBRACE");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_RBRACE"



	// $ANTLR start "syncTo_SEMI"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1126:1: syncTo_SEMI : SEMI ;
	public final void syncTo_SEMI() throws RecognitionException {

		        syncToSet(BitSet.of(SEMI));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_SEMI");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1126, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1130:6: ( SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1131:13: SEMI
			{
			dbg.location(1131,13);
			match(input,SEMI,FOLLOW_SEMI_in_syncTo_SEMI7803); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1132, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_SEMI");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_SEMI"



	// $ANTLR start "syncToFollow"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:1: syncToFollow :;
	public final void syncToFollow() throws RecognitionException {

		        syncToSet();
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToFollow");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1135, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1139:6: ()
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1140:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1140, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToFollow");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToFollow"



	// $ANTLR start "prio"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1142:1: prio : IMPORTANT_SYM ;
	public final void prio() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "prio");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1142, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:5: ( IMPORTANT_SYM )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:7: IMPORTANT_SYM
			{
			dbg.location(1143,7);
			match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_prio7848); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1144, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "prio");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "prio"



	// $ANTLR start "expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1146:1: expression : term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* ;
	public final void expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1146, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:5: ( term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:7: term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			{
			dbg.location(1147,7);
			pushFollow(FOLLOW_term_in_expression7865);
			term();
			state._fsp--;
			if (state.failed) return;dbg.location(1147,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			try { dbg.enterSubRule(372);

			loop372:
			while (true) {
				int alt372=2;
				try { dbg.enterDecision(372, decisionCanBacktrack[372]);

				try {
					isCyclicDecision = true;
					alt372 = dfa372.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(372);}

				switch (alt372) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term
					{
					dbg.location(1147,66);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:66: ( ws | ( ( ws )? operator ( ws )? ) |)
					int alt371=3;
					try { dbg.enterSubRule(371);
					try { dbg.enterDecision(371, decisionCanBacktrack[371]);

					try {
						isCyclicDecision = true;
						alt371 = dfa371.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(371);}

					switch (alt371) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:68: ws
							{
							dbg.location(1147,68);
							pushFollow(FOLLOW_ws_in_expression7897);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:73: ( ( ws )? operator ( ws )? )
							{
							dbg.location(1147,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:73: ( ( ws )? operator ( ws )? )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:74: ( ws )? operator ( ws )?
							{
							dbg.location(1147,74);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:74: ( ws )?
							int alt369=2;
							try { dbg.enterSubRule(369);
							try { dbg.enterDecision(369, decisionCanBacktrack[369]);

							int LA369_0 = input.LA(1);
							if ( (LA369_0==COMMENT||LA369_0==NL||LA369_0==WS) ) {
								alt369=1;
							}
							} finally {dbg.exitDecision(369);}

							switch (alt369) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:74: ws
									{
									dbg.location(1147,74);
									pushFollow(FOLLOW_ws_in_expression7902);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(369);}
							dbg.location(1147,78);
							pushFollow(FOLLOW_operator_in_expression7905);
							operator();
							state._fsp--;
							if (state.failed) return;dbg.location(1147,87);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:87: ( ws )?
							int alt370=2;
							try { dbg.enterSubRule(370);
							try { dbg.enterDecision(370, decisionCanBacktrack[370]);

							int LA370_0 = input.LA(1);
							if ( (LA370_0==COMMENT||LA370_0==NL||LA370_0==WS) ) {
								alt370=1;
							}
							} finally {dbg.exitDecision(370);}

							switch (alt370) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:87: ws
									{
									dbg.location(1147,87);
									pushFollow(FOLLOW_ws_in_expression7907);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(370);}

							}

							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:107: 
							{
							}
							break;

					}
					} finally {dbg.exitSubRule(371);}
					dbg.location(1147,109);
					pushFollow(FOLLOW_term_in_expression7916);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop372;
				}
			}
			} finally {dbg.exitSubRule(372);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1148, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expression"



	// $ANTLR start "term"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1150:1: term : ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) ;
	public final void term() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "term");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1150, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1151:5: ( ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:5: ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			{
			dbg.location(1152,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:5: ( unaryOperator ( ws )? )?
			int alt374=2;
			try { dbg.enterSubRule(374);
			try { dbg.enterDecision(374, decisionCanBacktrack[374]);

			int LA374_0 = input.LA(1);
			if ( (LA374_0==MINUS||LA374_0==PLUS) ) {
				alt374=1;
			}
			} finally {dbg.exitDecision(374);}

			switch (alt374) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:7: unaryOperator ( ws )?
					{
					dbg.location(1152,7);
					pushFollow(FOLLOW_unaryOperator_in_term7941);
					unaryOperator();
					state._fsp--;
					if (state.failed) return;dbg.location(1152,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:21: ( ws )?
					int alt373=2;
					try { dbg.enterSubRule(373);
					try { dbg.enterDecision(373, decisionCanBacktrack[373]);

					int LA373_0 = input.LA(1);
					if ( (LA373_0==COMMENT||LA373_0==NL||LA373_0==WS) ) {
						alt373=1;
					}
					} finally {dbg.exitDecision(373);}

					switch (alt373) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:21: ws
							{
							dbg.location(1152,21);
							pushFollow(FOLLOW_ws_in_term7943);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(373);}

					}
					break;

			}
			} finally {dbg.exitSubRule(374);}
			dbg.location(1153,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1153:5: ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			int alt378=27;
			try { dbg.enterSubRule(378);
			try { dbg.enterDecision(378, decisionCanBacktrack[378]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA378_1 = input.LA(2);
				if ( (synpred50_Css3()) ) {
					alt378=1;
				}
				else if ( (evalPredicate(! (isScssSource() && tokenNameEquals2(".")),"! (isScssSource() && tokenNameEquals2(\".\"))")) ) {
					alt378=3;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt378=23;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 378, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				alt378=2;
				}
				break;
			case LBRACKET:
				{
				alt378=4;
				}
				break;
			case NUMBER:
				{
				alt378=5;
				}
				break;
			case URANGE:
				{
				alt378=6;
				}
				break;
			case PERCENTAGE:
				{
				alt378=7;
				}
				break;
			case LENGTH:
				{
				alt378=8;
				}
				break;
			case EMS:
				{
				alt378=9;
				}
				break;
			case REM:
				{
				alt378=10;
				}
				break;
			case EXS:
				{
				alt378=11;
				}
				break;
			case ANGLE:
				{
				alt378=12;
				}
				break;
			case TIME:
				{
				alt378=13;
				}
				break;
			case FREQ:
				{
				alt378=14;
				}
				break;
			case RESOLUTION:
				{
				alt378=15;
				}
				break;
			case DIMENSION:
				{
				alt378=16;
				}
				break;
			case STRING:
				{
				alt378=17;
				}
				break;
			case TILDE:
				{
				alt378=18;
				}
				break;
			case LESS_JS_STRING:
				{
				alt378=19;
				}
				break;
			case GEN:
				{
				alt378=20;
				}
				break;
			case URI:
				{
				alt378=21;
				}
				break;
			case HASH:
				{
				alt378=22;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt378=23;
				}
				break;
			case LESS_AND:
				{
				alt378=24;
				}
				break;
			case HASH_SYMBOL:
				{
				alt378=25;
				}
				break;
			case AT_SIGN:
				{
				alt378=26;
				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				alt378=27;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 378, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(378);}

			switch (alt378) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:9: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(1154,36);
					pushFollow(FOLLOW_function_in_term7972);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:11: VARIABLE
					{
					dbg.location(1155,11);
					match(input,VARIABLE,FOLLOW_VARIABLE_in_term7985); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:11: {...}? IDENT
					{
					dbg.location(1156,11);
					if ( !(evalPredicate(! (isScssSource() && tokenNameEquals2(".")),"! (isScssSource() && tokenNameEquals2(\".\"))")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "! (isScssSource() && tokenNameEquals2(\".\"))");
					}dbg.location(1156,58);
					match(input,IDENT,FOLLOW_IDENT_in_term7999); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:11: ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET )
					{
					dbg.location(1157,11);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:11: ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:12: LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET
					{
					dbg.location(1157,12);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_term8012); if (state.failed) return;dbg.location(1157,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:21: ( WS )?
					int alt375=2;
					try { dbg.enterSubRule(375);
					try { dbg.enterDecision(375, decisionCanBacktrack[375]);

					int LA375_0 = input.LA(1);
					if ( (LA375_0==WS) ) {
						alt375=1;
					}
					} finally {dbg.exitDecision(375);}

					switch (alt375) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:21: WS
							{
							dbg.location(1157,21);
							match(input,WS,FOLLOW_WS_in_term8014); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(375);}
					dbg.location(1157,25);
					match(input,IDENT,FOLLOW_IDENT_in_term8017); if (state.failed) return;dbg.location(1157,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:31: ( WS IDENT )*
					try { dbg.enterSubRule(376);

					loop376:
					while (true) {
						int alt376=2;
						try { dbg.enterDecision(376, decisionCanBacktrack[376]);

						int LA376_0 = input.LA(1);
						if ( (LA376_0==WS) ) {
							int LA376_1 = input.LA(2);
							if ( (LA376_1==IDENT) ) {
								alt376=1;
							}

						}

						} finally {dbg.exitDecision(376);}

						switch (alt376) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:32: WS IDENT
							{
							dbg.location(1157,32);
							match(input,WS,FOLLOW_WS_in_term8020); if (state.failed) return;dbg.location(1157,35);
							match(input,IDENT,FOLLOW_IDENT_in_term8022); if (state.failed) return;
							}
							break;

						default :
							break loop376;
						}
					}
					} finally {dbg.exitSubRule(376);}
					dbg.location(1157,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:43: ( WS )?
					int alt377=2;
					try { dbg.enterSubRule(377);
					try { dbg.enterDecision(377, decisionCanBacktrack[377]);

					int LA377_0 = input.LA(1);
					if ( (LA377_0==WS) ) {
						alt377=1;
					}
					} finally {dbg.exitDecision(377);}

					switch (alt377) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:43: WS
							{
							dbg.location(1157,43);
							match(input,WS,FOLLOW_WS_in_term8026); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(377);}
					dbg.location(1157,47);
					match(input,RBRACKET,FOLLOW_RBRACKET_in_term8029); if (state.failed) return;
					}

					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1158:11: NUMBER
					{
					dbg.location(1158,11);
					match(input,NUMBER,FOLLOW_NUMBER_in_term8042); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1159:11: URANGE
					{
					dbg.location(1159,11);
					match(input,URANGE,FOLLOW_URANGE_in_term8054); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:11: PERCENTAGE
					{
					dbg.location(1160,11);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_term8066); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1161:11: LENGTH
					{
					dbg.location(1161,11);
					match(input,LENGTH,FOLLOW_LENGTH_in_term8078); if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:11: EMS
					{
					dbg.location(1162,11);
					match(input,EMS,FOLLOW_EMS_in_term8090); if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:11: REM
					{
					dbg.location(1163,11);
					match(input,REM,FOLLOW_REM_in_term8102); if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1164:11: EXS
					{
					dbg.location(1164,11);
					match(input,EXS,FOLLOW_EXS_in_term8114); if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1165:11: ANGLE
					{
					dbg.location(1165,11);
					match(input,ANGLE,FOLLOW_ANGLE_in_term8126); if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1166:11: TIME
					{
					dbg.location(1166,11);
					match(input,TIME,FOLLOW_TIME_in_term8138); if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:11: FREQ
					{
					dbg.location(1167,11);
					match(input,FREQ,FOLLOW_FREQ_in_term8150); if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1168:11: RESOLUTION
					{
					dbg.location(1168,11);
					match(input,RESOLUTION,FOLLOW_RESOLUTION_in_term8162); if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1169:11: DIMENSION
					{
					dbg.location(1169,11);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_term8174); if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:11: STRING
					{
					dbg.location(1170,11);
					match(input,STRING,FOLLOW_STRING_in_term8191); if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1171:11: TILDE ( STRING | LESS_JS_STRING )
					{
					dbg.location(1171,11);
					match(input,TILDE,FOLLOW_TILDE_in_term8203); if (state.failed) return;dbg.location(1171,17);
					if ( input.LA(1)==LESS_JS_STRING||input.LA(1)==STRING ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 19 :
					dbg.enterAlt(19);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1172:11: LESS_JS_STRING
					{
					dbg.location(1172,11);
					match(input,LESS_JS_STRING,FOLLOW_LESS_JS_STRING_in_term8226); if (state.failed) return;
					}
					break;
				case 20 :
					dbg.enterAlt(20);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:11: GEN
					{
					dbg.location(1173,11);
					match(input,GEN,FOLLOW_GEN_in_term8241); if (state.failed) return;
					}
					break;
				case 21 :
					dbg.enterAlt(21);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:11: URI
					{
					dbg.location(1174,11);
					match(input,URI,FOLLOW_URI_in_term8253); if (state.failed) return;
					}
					break;
				case 22 :
					dbg.enterAlt(22);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1175:11: hexColor
					{
					dbg.location(1175,11);
					pushFollow(FOLLOW_hexColor_in_term8265);
					hexColor();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 23 :
					dbg.enterAlt(23);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:11: {...}? cp_variable
					{
					dbg.location(1176,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(1176,40);
					pushFollow(FOLLOW_cp_variable_in_term8279);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 24 :
					dbg.enterAlt(24);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:11: {...}? LESS_AND
					{
					dbg.location(1177,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(1177,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_term8293); if (state.failed) return;
					}
					break;
				case 25 :
					dbg.enterAlt(25);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1178:11: {...}? sass_interpolation_expression_var
					{
					dbg.location(1178,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(1178,29);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_term8307);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 26 :
					dbg.enterAlt(26);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1179:11: {...}? less_selector_interpolation
					{
					dbg.location(1179,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isLessSource()");
					}dbg.location(1179,29);
					pushFollow(FOLLOW_less_selector_interpolation_in_term8321);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 27 :
					dbg.enterAlt(27);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:11: {...}? cp_term_symbol
					{
					dbg.location(1180,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(1180,40);
					pushFollow(FOLLOW_cp_term_symbol_in_term8335);
					cp_term_symbol();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(378);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1182, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "term");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "term"



	// $ANTLR start "cp_term_symbol"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1187:1: cp_term_symbol : PERCENTAGE_SYMBOL ;
	public final void cp_term_symbol() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_term_symbol");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1187, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:5: ( PERCENTAGE_SYMBOL )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:7: PERCENTAGE_SYMBOL
			{
			dbg.location(1188,7);
			match(input,PERCENTAGE_SYMBOL,FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol8362); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1189, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_term_symbol");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_term_symbol"



	// $ANTLR start "function"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1191:1: function : functionName LPAREN ( ws )? ( fnAttributes |) RPAREN ;
	public final void function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1191, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1192:2: ( functionName LPAREN ( ws )? ( fnAttributes |) RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1192:5: functionName LPAREN ( ws )? ( fnAttributes |) RPAREN
			{
			dbg.location(1192,5);
			pushFollow(FOLLOW_functionName_in_function8378);
			functionName();
			state._fsp--;
			if (state.failed) return;dbg.location(1193,3);
			match(input,LPAREN,FOLLOW_LPAREN_in_function8382); if (state.failed) return;dbg.location(1193,10);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:10: ( ws )?
			int alt379=2;
			try { dbg.enterSubRule(379);
			try { dbg.enterDecision(379, decisionCanBacktrack[379]);

			int LA379_0 = input.LA(1);
			if ( (LA379_0==COMMENT||LA379_0==NL||LA379_0==WS) ) {
				alt379=1;
			}
			} finally {dbg.exitDecision(379);}

			switch (alt379) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:10: ws
					{
					dbg.location(1193,10);
					pushFollow(FOLLOW_ws_in_function8384);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(379);}
			dbg.location(1194,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1194:3: ( fnAttributes |)
			int alt380=2;
			try { dbg.enterSubRule(380);
			try { dbg.enterDecision(380, decisionCanBacktrack[380]);

			int LA380_0 = input.LA(1);
			if ( ((LA380_0 >= ANGLE && LA380_0 <= AT_SIGN)||(LA380_0 >= BOTTOMCENTER_SYM && LA380_0 <= BOTTOMRIGHT_SYM)||LA380_0==CHARSET_SYM||LA380_0==COUNTER_STYLE_SYM||LA380_0==DIMENSION||LA380_0==EMS||LA380_0==EXS||(LA380_0 >= FONT_FACE_SYM && LA380_0 <= FREQ)||LA380_0==GEN||(LA380_0 >= HASH && LA380_0 <= HASH_SYMBOL)||(LA380_0 >= IDENT && LA380_0 <= IMPORT_SYM)||(LA380_0 >= LBRACE && LA380_0 <= LENGTH)||(LA380_0 >= LESS_AND && LA380_0 <= LESS_JS_STRING)||LA380_0==LPAREN||(LA380_0 >= MEDIA_SYM && LA380_0 <= MOZ_DOCUMENT_SYM)||LA380_0==NAMESPACE_SYM||(LA380_0 >= NOT && LA380_0 <= NUMBER)||(LA380_0 >= PAGE_SYM && LA380_0 <= PERCENTAGE_SYMBOL)||LA380_0==PLUS||(LA380_0 >= REM && LA380_0 <= RIGHTTOP_SYM)||(LA380_0 >= SASS_AT_ROOT && LA380_0 <= SASS_DEBUG)||(LA380_0 >= SASS_EACH && LA380_0 <= SASS_ELSE)||LA380_0==SASS_EXTEND||(LA380_0 >= SASS_FOR && LA380_0 <= SASS_FUNCTION)||(LA380_0 >= SASS_IF && LA380_0 <= SASS_MIXIN)||(LA380_0 >= SASS_RETURN && LA380_0 <= SASS_WHILE)||LA380_0==STRING||(LA380_0 >= TILDE && LA380_0 <= TOPRIGHT_SYM)||(LA380_0 >= URANGE && LA380_0 <= URI)||LA380_0==VARIABLE||LA380_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt380=1;
			}
			else if ( (LA380_0==RPAREN) ) {
				alt380=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 380, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(380);}

			switch (alt380) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:21: fnAttributes
					{
					dbg.location(1195,21);
					pushFollow(FOLLOW_fnAttributes_in_function8411);
					fnAttributes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1197:3: 
					{
					}
					break;

			}
			} finally {dbg.exitSubRule(380);}
			dbg.location(1198,3);
			match(input,RPAREN,FOLLOW_RPAREN_in_function8442); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RPAREN, SEMI, RBRACE));

		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1199, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "function"



	// $ANTLR start "functionName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1205:1: functionName : ( IDENT COLON )? IDENT ( DOT IDENT )* ;
	public final void functionName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "functionName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1205, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:2: ( ( IDENT COLON )? IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:9: ( IDENT COLON )? IDENT ( DOT IDENT )*
			{
			dbg.location(1210,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:9: ( IDENT COLON )?
			int alt381=2;
			try { dbg.enterSubRule(381);
			try { dbg.enterDecision(381, decisionCanBacktrack[381]);

			int LA381_0 = input.LA(1);
			if ( (LA381_0==IDENT) ) {
				int LA381_1 = input.LA(2);
				if ( (LA381_1==COLON) ) {
					alt381=1;
				}
			}
			} finally {dbg.exitDecision(381);}

			switch (alt381) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:10: IDENT COLON
					{
					dbg.location(1210,10);
					match(input,IDENT,FOLLOW_IDENT_in_functionName8494); if (state.failed) return;dbg.location(1210,16);
					match(input,COLON,FOLLOW_COLON_in_functionName8496); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(381);}
			dbg.location(1210,24);
			match(input,IDENT,FOLLOW_IDENT_in_functionName8500); if (state.failed) return;dbg.location(1210,30);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:30: ( DOT IDENT )*
			try { dbg.enterSubRule(382);

			loop382:
			while (true) {
				int alt382=2;
				try { dbg.enterDecision(382, decisionCanBacktrack[382]);

				int LA382_0 = input.LA(1);
				if ( (LA382_0==DOT) ) {
					alt382=1;
				}

				} finally {dbg.exitDecision(382);}

				switch (alt382) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:31: DOT IDENT
					{
					dbg.location(1210,31);
					match(input,DOT,FOLLOW_DOT_in_functionName8503); if (state.failed) return;dbg.location(1210,35);
					match(input,IDENT,FOLLOW_IDENT_in_functionName8505); if (state.failed) return;
					}
					break;

				default :
					break loop382;
				}
			}
			} finally {dbg.exitSubRule(382);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1211, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "functionName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "functionName"



	// $ANTLR start "fnAttributes"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:1: fnAttributes : fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? ;
	public final void fnAttributes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1213, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:5: ( fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:5: fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )?
			{
			dbg.location(1215,5);
			pushFollow(FOLLOW_fnAttribute_in_fnAttributes8529);
			fnAttribute();
			state._fsp--;
			if (state.failed) return;dbg.location(1215,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*
			try { dbg.enterSubRule(386);

			loop386:
			while (true) {
				int alt386=2;
				try { dbg.enterDecision(386, decisionCanBacktrack[386]);

				try {
					isCyclicDecision = true;
					alt386 = dfa386.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(386);}

				switch (alt386) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:18: ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute
					{
					dbg.location(1215,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:18: ( ws )?
					int alt383=2;
					try { dbg.enterSubRule(383);
					try { dbg.enterDecision(383, decisionCanBacktrack[383]);

					int LA383_0 = input.LA(1);
					if ( (LA383_0==COMMENT||LA383_0==NL||LA383_0==WS) ) {
						alt383=1;
					}
					} finally {dbg.exitDecision(383);}

					switch (alt383) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:18: ws
							{
							dbg.location(1215,18);
							pushFollow(FOLLOW_ws_in_fnAttributes8532);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(383);}
					dbg.location(1215,22);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:22: ( COMMA |{...}? SEMI )
					int alt384=2;
					try { dbg.enterSubRule(384);
					try { dbg.enterDecision(384, decisionCanBacktrack[384]);

					int LA384_0 = input.LA(1);
					if ( (LA384_0==COMMA) ) {
						alt384=1;
					}
					else if ( (LA384_0==SEMI) ) {
						alt384=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 384, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(384);}

					switch (alt384) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:23: COMMA
							{
							dbg.location(1215,23);
							match(input,COMMA,FOLLOW_COMMA_in_fnAttributes8536); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:31: {...}? SEMI
							{
							dbg.location(1215,31);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "fnAttributes", "isLessSource()");
							}dbg.location(1215,49);
							match(input,SEMI,FOLLOW_SEMI_in_fnAttributes8542); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(384);}
					dbg.location(1215,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:55: ( ws )?
					int alt385=2;
					try { dbg.enterSubRule(385);
					try { dbg.enterDecision(385, decisionCanBacktrack[385]);

					int LA385_0 = input.LA(1);
					if ( (LA385_0==COMMENT||LA385_0==NL||LA385_0==WS) ) {
						alt385=1;
					}
					} finally {dbg.exitDecision(385);}

					switch (alt385) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:55: ws
							{
							dbg.location(1215,55);
							pushFollow(FOLLOW_ws_in_fnAttributes8545);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(385);}
					dbg.location(1215,59);
					pushFollow(FOLLOW_fnAttribute_in_fnAttributes8548);
					fnAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop386;
				}
			}
			} finally {dbg.exitSubRule(386);}
			dbg.location(1215,73);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:73: ( ws )?
			int alt387=2;
			try { dbg.enterSubRule(387);
			try { dbg.enterDecision(387, decisionCanBacktrack[387]);

			int LA387_0 = input.LA(1);
			if ( (LA387_0==COMMENT||LA387_0==NL||LA387_0==WS) ) {
				alt387=1;
			}
			} finally {dbg.exitDecision(387);}

			switch (alt387) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:73: ws
					{
					dbg.location(1215,73);
					pushFollow(FOLLOW_ws_in_fnAttributes8552);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(387);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1216, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributes"



	// $ANTLR start "fnAttribute"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1218:1: fnAttribute : ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression );
	public final void fnAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1218, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1219:2: ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression )
			int alt390=3;
			try { dbg.enterDecision(390, decisionCanBacktrack[390]);

			int LA390_0 = input.LA(1);
			if ( (LA390_0==IDENT) ) {
				int LA390_1 = input.LA(2);
				if ( (synpred51_Css3()) ) {
					alt390=1;
				}
				else if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==AT_IDENT||(LA390_0 >= BOTTOMCENTER_SYM && LA390_0 <= BOTTOMRIGHT_SYM)||LA390_0==CHARSET_SYM||LA390_0==COUNTER_STYLE_SYM||LA390_0==FONT_FACE_SYM||LA390_0==IMPORT_SYM||(LA390_0 >= LEFTBOTTOM_SYM && LA390_0 <= LEFTTOP_SYM)||LA390_0==MEDIA_SYM||LA390_0==MOZ_DOCUMENT_SYM||LA390_0==NAMESPACE_SYM||LA390_0==PAGE_SYM||(LA390_0 >= RIGHTBOTTOM_SYM && LA390_0 <= RIGHTTOP_SYM)||(LA390_0 >= SASS_AT_ROOT && LA390_0 <= SASS_DEBUG)||(LA390_0 >= SASS_EACH && LA390_0 <= SASS_ELSE)||LA390_0==SASS_EXTEND||(LA390_0 >= SASS_FOR && LA390_0 <= SASS_FUNCTION)||(LA390_0 >= SASS_IF && LA390_0 <= SASS_MIXIN)||(LA390_0 >= SASS_RETURN && LA390_0 <= SASS_USE)||(LA390_0 >= SASS_WARN && LA390_0 <= SASS_WHILE)||(LA390_0 >= TOPCENTER_SYM && LA390_0 <= TOPRIGHT_SYM)||LA390_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA390_2 = input.LA(2);
				if ( (((synpred51_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt390=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {
					alt390=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt390=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 390, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA390_0==SASS_VAR) ) {
				int LA390_3 = input.LA(2);
				if ( (((synpred51_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt390=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred52_Css3())) ) {
					alt390=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt390=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 390, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA390_0==LBRACE) && (synpred52_Css3())) {
				alt390=2;
			}
			else if ( (LA390_0==NOT) && (synpred52_Css3())) {
				alt390=2;
			}
			else if ( (LA390_0==MINUS||LA390_0==PLUS) ) {
				int LA390_6 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==VARIABLE) ) {
				int LA390_7 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==LBRACKET) ) {
				int LA390_8 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==NUMBER) ) {
				int LA390_9 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==URANGE) ) {
				int LA390_10 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==PERCENTAGE) ) {
				int LA390_11 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==LENGTH) ) {
				int LA390_12 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==EMS) ) {
				int LA390_13 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==REM) ) {
				int LA390_14 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==EXS) ) {
				int LA390_15 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==ANGLE) ) {
				int LA390_16 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==TIME) ) {
				int LA390_17 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==FREQ) ) {
				int LA390_18 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==RESOLUTION) ) {
				int LA390_19 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==DIMENSION) ) {
				int LA390_20 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==STRING) ) {
				int LA390_21 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==TILDE) ) {
				int LA390_22 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==LESS_JS_STRING) ) {
				int LA390_23 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==GEN) ) {
				int LA390_24 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==URI) ) {
				int LA390_25 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==HASH) ) {
				int LA390_26 = input.LA(2);
				if ( (synpred52_Css3()) ) {
					alt390=2;
				}
				else if ( (true) ) {
					alt390=3;
				}

			}
			else if ( (LA390_0==LESS_AND) ) {
				int LA390_27 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred52_Css3())) ) {
					alt390=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt390=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 390, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA390_0==HASH_SYMBOL) ) {
				int LA390_28 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred52_Css3())) ) {
					alt390=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt390=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 390, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA390_0==AT_SIGN) ) {
				int LA390_29 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred52_Css3())) ) {
					alt390=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt390=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 390, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA390_0==PERCENTAGE_SYMBOL) ) {
				int LA390_30 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred52_Css3())) ) {
					alt390=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt390=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 390, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA390_0==IMPORTANT_SYM) && (synpred52_Css3())) {
				alt390=2;
			}
			else if ( (LA390_0==LPAREN) && (synpred52_Css3())) {
				alt390=2;
			}

			} finally {dbg.exitDecision(390);}

			switch (alt390) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue
					{
					dbg.location(1220,46);
					pushFollow(FOLLOW_fnAttributeName_in_fnAttribute8589);
					fnAttributeName();
					state._fsp--;
					if (state.failed) return;dbg.location(1220,62);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:62: ( ws )?
					int alt388=2;
					try { dbg.enterSubRule(388);
					try { dbg.enterDecision(388, decisionCanBacktrack[388]);

					int LA388_0 = input.LA(1);
					if ( (LA388_0==COMMENT||LA388_0==NL||LA388_0==WS) ) {
						alt388=1;
					}
					} finally {dbg.exitDecision(388);}

					switch (alt388) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:62: ws
							{
							dbg.location(1220,62);
							pushFollow(FOLLOW_ws_in_fnAttribute8591);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(388);}
					dbg.location(1220,66);
					if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1220,79);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:79: ( ws )?
					int alt389=2;
					try { dbg.enterSubRule(389);
					try { dbg.enterDecision(389, decisionCanBacktrack[389]);

					int LA389_0 = input.LA(1);
					if ( (LA389_0==COMMENT||LA389_0==NL||LA389_0==WS) ) {
						alt389=1;
					}
					} finally {dbg.exitDecision(389);}

					switch (alt389) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:79: ws
							{
							dbg.location(1220,79);
							pushFollow(FOLLOW_ws_in_fnAttribute8600);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(389);}
					dbg.location(1220,83);
					pushFollow(FOLLOW_fnAttributeValue_in_fnAttribute8603);
					fnAttributeValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:11: ( cp_expression )=> cp_expression
					{
					dbg.location(1221,29);
					pushFollow(FOLLOW_cp_expression_in_fnAttribute8620);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1222:11: expression
					{
					dbg.location(1222,11);
					pushFollow(FOLLOW_expression_in_fnAttribute8632);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1223, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttribute"



	// $ANTLR start "fnAttributeName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:1: fnAttributeName : ( IDENT ( DOT IDENT )* |{...}? cp_variable );
	public final void fnAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1225, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1226:2: ( IDENT ( DOT IDENT )* |{...}? cp_variable )
			int alt392=2;
			try { dbg.enterDecision(392, decisionCanBacktrack[392]);

			int LA392_0 = input.LA(1);
			if ( (LA392_0==IDENT) ) {
				int LA392_1 = input.LA(2);
				if ( (LA392_1==DOT) ) {
					int LA392_3 = input.LA(3);
					if ( (LA392_3==SASS_VAR) ) {
						alt392=2;
					}
					else if ( (LA392_3==IDENT) ) {
						alt392=1;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 392, 3, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}
				else if ( (LA392_1==COLON||LA392_1==COMMENT||LA392_1==NL||LA392_1==OPEQ||LA392_1==WS) ) {
					alt392=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 392, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA392_0==AT_IDENT||(LA392_0 >= BOTTOMCENTER_SYM && LA392_0 <= BOTTOMRIGHT_SYM)||LA392_0==CHARSET_SYM||LA392_0==COUNTER_STYLE_SYM||LA392_0==FONT_FACE_SYM||LA392_0==IMPORT_SYM||(LA392_0 >= LEFTBOTTOM_SYM && LA392_0 <= LEFTTOP_SYM)||LA392_0==MEDIA_SYM||LA392_0==MOZ_DOCUMENT_SYM||LA392_0==NAMESPACE_SYM||LA392_0==PAGE_SYM||(LA392_0 >= RIGHTBOTTOM_SYM && LA392_0 <= RIGHTTOP_SYM)||(LA392_0 >= SASS_AT_ROOT && LA392_0 <= SASS_DEBUG)||(LA392_0 >= SASS_EACH && LA392_0 <= SASS_ELSE)||LA392_0==SASS_EXTEND||(LA392_0 >= SASS_FOR && LA392_0 <= SASS_FUNCTION)||(LA392_0 >= SASS_IF && LA392_0 <= SASS_MIXIN)||(LA392_0 >= SASS_RETURN && LA392_0 <= SASS_WHILE)||(LA392_0 >= TOPCENTER_SYM && LA392_0 <= TOPRIGHT_SYM)||LA392_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt392=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 392, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(392);}

			switch (alt392) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1227:13: IDENT ( DOT IDENT )*
					{
					dbg.location(1227,13);
					match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName8655); if (state.failed) return;dbg.location(1227,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1227:19: ( DOT IDENT )*
					try { dbg.enterSubRule(391);

					loop391:
					while (true) {
						int alt391=2;
						try { dbg.enterDecision(391, decisionCanBacktrack[391]);

						int LA391_0 = input.LA(1);
						if ( (LA391_0==DOT) ) {
							alt391=1;
						}

						} finally {dbg.exitDecision(391);}

						switch (alt391) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1227:20: DOT IDENT
							{
							dbg.location(1227,20);
							match(input,DOT,FOLLOW_DOT_in_fnAttributeName8658); if (state.failed) return;dbg.location(1227,24);
							match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName8660); if (state.failed) return;
							}
							break;

						default :
							break loop391;
						}
					}
					} finally {dbg.exitSubRule(391);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1228:15: {...}? cp_variable
					{
					dbg.location(1228,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeName", "isCssPreprocessorSource()");
					}dbg.location(1228,44);
					pushFollow(FOLLOW_cp_variable_in_fnAttributeName8680);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1229, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeName"



	// $ANTLR start "fnAttributeValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:1: fnAttributeValue : ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression );
	public final void fnAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1231, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1232:2: ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression )
			int alt397=2;
			try { dbg.enterDecision(397, decisionCanBacktrack[397]);

			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA397_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA397_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				int LA397_3 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LBRACKET:
				{
				int LA397_4 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NUMBER:
				{
				int LA397_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URANGE:
				{
				int LA397_6 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA397_7 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LENGTH:
				{
				int LA397_8 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EMS:
				{
				int LA397_9 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case REM:
				{
				int LA397_10 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EXS:
				{
				int LA397_11 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
				{
				int LA397_12 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TIME:
				{
				int LA397_13 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case FREQ:
				{
				int LA397_14 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case RESOLUTION:
				{
				int LA397_15 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DIMENSION:
				{
				int LA397_16 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				int LA397_17 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TILDE:
				{
				int LA397_18 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA397_19 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA397_20 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URI:
				{
				int LA397_21 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH:
				{
				int LA397_22 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA397_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt397=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA397_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt397=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA397_25 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt397=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA397_26 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt397=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA397_27 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt397=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA397_28 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt397=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 397, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORTANT_SYM:
			case LPAREN:
				{
				alt397=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 397, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(397);}

			switch (alt397) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:13: term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					{
					dbg.location(1233,13);
					pushFollow(FOLLOW_term_in_fnAttributeValue8703);
					term();
					state._fsp--;
					if (state.failed) return;dbg.location(1233,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					try { dbg.enterSubRule(396);

					loop396:
					while (true) {
						int alt396=2;
						try { dbg.enterDecision(396, decisionCanBacktrack[396]);

						try {
							isCyclicDecision = true;
							alt396 = dfa396.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(396);}

						switch (alt396) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
							{
							dbg.location(1233,71);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
							int alt395=3;
							try { dbg.enterSubRule(395);
							try { dbg.enterDecision(395, decisionCanBacktrack[395]);

							try {
								isCyclicDecision = true;
								alt395 = dfa395.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(395);}

							switch (alt395) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:73: ws
									{
									dbg.location(1233,73);
									pushFollow(FOLLOW_ws_in_fnAttributeValue8735);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:78: ( ( ws )? SOLIDUS ( ws )? )
									{
									dbg.location(1233,78);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:78: ( ( ws )? SOLIDUS ( ws )? )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:79: ( ws )? SOLIDUS ( ws )?
									{
									dbg.location(1233,79);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:79: ( ws )?
									int alt393=2;
									try { dbg.enterSubRule(393);
									try { dbg.enterDecision(393, decisionCanBacktrack[393]);

									int LA393_0 = input.LA(1);
									if ( (LA393_0==COMMENT||LA393_0==NL||LA393_0==WS) ) {
										alt393=1;
									}
									} finally {dbg.exitDecision(393);}

									switch (alt393) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:79: ws
											{
											dbg.location(1233,79);
											pushFollow(FOLLOW_ws_in_fnAttributeValue8740);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(393);}
									dbg.location(1233,83);
									match(input,SOLIDUS,FOLLOW_SOLIDUS_in_fnAttributeValue8743); if (state.failed) return;dbg.location(1233,91);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:91: ( ws )?
									int alt394=2;
									try { dbg.enterSubRule(394);
									try { dbg.enterDecision(394, decisionCanBacktrack[394]);

									int LA394_0 = input.LA(1);
									if ( (LA394_0==COMMENT||LA394_0==NL||LA394_0==WS) ) {
										alt394=1;
									}
									} finally {dbg.exitDecision(394);}

									switch (alt394) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:91: ws
											{
											dbg.location(1233,91);
											pushFollow(FOLLOW_ws_in_fnAttributeValue8745);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(394);}

									}

									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:111: 
									{
									}
									break;

							}
							} finally {dbg.exitSubRule(395);}
							dbg.location(1233,113);
							pushFollow(FOLLOW_term_in_fnAttributeValue8754);
							term();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop396;
						}
					}
					} finally {dbg.exitSubRule(396);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1234:15: {...}? cp_math_expression
					{
					dbg.location(1234,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeValue", "isCssPreprocessorSource()");
					}dbg.location(1234,44);
					pushFollow(FOLLOW_cp_math_expression_in_fnAttributeValue8775);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1235, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeValue"



	// $ANTLR start "hexColor"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:1: hexColor : HASH ;
	public final void hexColor() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "hexColor");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1237, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:5: ( HASH )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:7: HASH
			{
			dbg.location(1238,7);
			match(input,HASH,FOLLOW_HASH_in_hexColor8789); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1239, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "hexColor");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "hexColor"



	// $ANTLR start "ws"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1241:1: ws : ( WS | NL | COMMENT )+ ;
	public final void ws() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "ws");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1241, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1242:5: ( ( WS | NL | COMMENT )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1242:7: ( WS | NL | COMMENT )+
			{
			dbg.location(1242,7);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1242:7: ( WS | NL | COMMENT )+
			int cnt398=0;
			try { dbg.enterSubRule(398);

			loop398:
			while (true) {
				int alt398=2;
				try { dbg.enterDecision(398, decisionCanBacktrack[398]);

				int LA398_0 = input.LA(1);
				if ( (LA398_0==COMMENT||LA398_0==NL||LA398_0==WS) ) {
					alt398=1;
				}

				} finally {dbg.exitDecision(398);}

				switch (alt398) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1242,7);
					if ( input.LA(1)==COMMENT||input.LA(1)==NL||input.LA(1)==WS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt398 >= 1 ) break loop398;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(398, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt398++;
			}
			} finally {dbg.exitSubRule(398);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1243, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ws");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "ws"



	// $ANTLR start "cp_variable_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1248:1: cp_variable_declaration : ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* );
	public final void cp_variable_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1248, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1249:5: ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			int alt406=2;
			try { dbg.enterDecision(406, decisionCanBacktrack[406]);

			switch ( input.LA(1) ) {
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA406_1 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt406=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt406=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 406, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA406_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt406=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt406=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 406, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA406_3 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt406=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt406=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 406, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 406, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(406);}

			switch (alt406) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list
					{
					dbg.location(1250,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isLessSource()");
					}dbg.location(1250,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration8849);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1250,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:39: ( ws )?
					int alt399=2;
					try { dbg.enterSubRule(399);
					try { dbg.enterDecision(399, decisionCanBacktrack[399]);

					int LA399_0 = input.LA(1);
					if ( (LA399_0==COMMENT||LA399_0==NL||LA399_0==WS) ) {
						alt399=1;
					}
					} finally {dbg.exitDecision(399);}

					switch (alt399) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:39: ws
							{
							dbg.location(1250,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration8851);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(399);}
					dbg.location(1250,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration8854); if (state.failed) return;dbg.location(1250,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:49: ( ws )?
					int alt400=2;
					try { dbg.enterSubRule(400);
					try { dbg.enterDecision(400, decisionCanBacktrack[400]);

					int LA400_0 = input.LA(1);
					if ( (LA400_0==COMMENT||LA400_0==NL||LA400_0==WS) ) {
						alt400=1;
					}
					} finally {dbg.exitDecision(400);}

					switch (alt400) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:49: ws
							{
							dbg.location(1250,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration8856);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(400);}
					dbg.location(1250,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration8859);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					{
					dbg.location(1252,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isScssSource()");
					}dbg.location(1252,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration8881);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1252,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:39: ( ws )?
					int alt401=2;
					try { dbg.enterSubRule(401);
					try { dbg.enterDecision(401, decisionCanBacktrack[401]);

					int LA401_0 = input.LA(1);
					if ( (LA401_0==COMMENT||LA401_0==NL||LA401_0==WS) ) {
						alt401=1;
					}
					} finally {dbg.exitDecision(401);}

					switch (alt401) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:39: ws
							{
							dbg.location(1252,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration8883);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(401);}
					dbg.location(1252,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration8886); if (state.failed) return;dbg.location(1252,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:49: ( ws )?
					int alt402=2;
					try { dbg.enterSubRule(402);
					try { dbg.enterDecision(402, decisionCanBacktrack[402]);

					int LA402_0 = input.LA(1);
					if ( (LA402_0==COMMENT||LA402_0==NL||LA402_0==WS) ) {
						alt402=1;
					}
					} finally {dbg.exitDecision(402);}

					switch (alt402) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:49: ws
							{
							dbg.location(1252,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration8888);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(402);}
					dbg.location(1252,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration8891);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1252,72);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					try { dbg.enterSubRule(405);

					loop405:
					while (true) {
						int alt405=3;
						try { dbg.enterDecision(405, decisionCanBacktrack[405]);

						try {
							isCyclicDecision = true;
							alt405 = dfa405.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(405);}

						switch (alt405) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:73: ( ( ws )? SASS_DEFAULT )
							{
							dbg.location(1252,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:73: ( ( ws )? SASS_DEFAULT )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:74: ( ws )? SASS_DEFAULT
							{
							dbg.location(1252,74);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:74: ( ws )?
							int alt403=2;
							try { dbg.enterSubRule(403);
							try { dbg.enterDecision(403, decisionCanBacktrack[403]);

							int LA403_0 = input.LA(1);
							if ( (LA403_0==COMMENT||LA403_0==NL||LA403_0==WS) ) {
								alt403=1;
							}
							} finally {dbg.exitDecision(403);}

							switch (alt403) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:74: ws
									{
									dbg.location(1252,74);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration8895);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(403);}
							dbg.location(1252,78);
							match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_cp_variable_declaration8898); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:94: ( ( ws )? SASS_GLOBAL )
							{
							dbg.location(1252,94);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:94: ( ( ws )? SASS_GLOBAL )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:95: ( ws )? SASS_GLOBAL
							{
							dbg.location(1252,95);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:95: ( ws )?
							int alt404=2;
							try { dbg.enterSubRule(404);
							try { dbg.enterDecision(404, decisionCanBacktrack[404]);

							int LA404_0 = input.LA(1);
							if ( (LA404_0==COMMENT||LA404_0==NL||LA404_0==WS) ) {
								alt404=1;
							}
							} finally {dbg.exitDecision(404);}

							switch (alt404) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:95: ws
									{
									dbg.location(1252,95);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration8904);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(404);}
							dbg.location(1252,99);
							match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_cp_variable_declaration8907); if (state.failed) return;
							}

							}
							break;

						default :
							break loop405;
						}
					}
					} finally {dbg.exitSubRule(405);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1253, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable_declaration"



	// $ANTLR start "cp_variable"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1256:1: cp_variable : ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT | SASS_USE | SASS_FORWARD ) |{...}? ( SASS_VAR | IDENT DOT SASS_VAR ) );
	public final void cp_variable() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1256, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:5: ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT | SASS_USE | SASS_FORWARD ) |{...}? ( SASS_VAR | IDENT DOT SASS_VAR ) )
			int alt408=2;
			try { dbg.enterDecision(408, decisionCanBacktrack[408]);

			int LA408_0 = input.LA(1);
			if ( (LA408_0==AT_IDENT||(LA408_0 >= BOTTOMCENTER_SYM && LA408_0 <= BOTTOMRIGHT_SYM)||LA408_0==CHARSET_SYM||LA408_0==COUNTER_STYLE_SYM||LA408_0==FONT_FACE_SYM||LA408_0==IMPORT_SYM||(LA408_0 >= LEFTBOTTOM_SYM && LA408_0 <= LEFTTOP_SYM)||LA408_0==MEDIA_SYM||LA408_0==MOZ_DOCUMENT_SYM||LA408_0==NAMESPACE_SYM||LA408_0==PAGE_SYM||(LA408_0 >= RIGHTBOTTOM_SYM && LA408_0 <= RIGHTTOP_SYM)||(LA408_0 >= SASS_AT_ROOT && LA408_0 <= SASS_DEBUG)||(LA408_0 >= SASS_EACH && LA408_0 <= SASS_ELSE)||LA408_0==SASS_EXTEND||(LA408_0 >= SASS_FOR && LA408_0 <= SASS_FUNCTION)||(LA408_0 >= SASS_IF && LA408_0 <= SASS_MIXIN)||(LA408_0 >= SASS_RETURN && LA408_0 <= SASS_USE)||(LA408_0 >= SASS_WARN && LA408_0 <= SASS_WHILE)||(LA408_0 >= TOPCENTER_SYM && LA408_0 <= TOPRIGHT_SYM)||LA408_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt408=1;
			}
			else if ( (LA408_0==IDENT||LA408_0==SASS_VAR) ) {
				alt408=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 408, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(408);}

			switch (alt408) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1259:9: {...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT | SASS_USE | SASS_FORWARD )
					{
					dbg.location(1259,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isLessSource()");
					}dbg.location(1259,27);
					if ( input.LA(1)==AT_IDENT||(input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||input.LA(1)==CHARSET_SYM||input.LA(1)==COUNTER_STYLE_SYM||input.LA(1)==FONT_FACE_SYM||input.LA(1)==IMPORT_SYM||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||input.LA(1)==MEDIA_SYM||input.LA(1)==MOZ_DOCUMENT_SYM||input.LA(1)==NAMESPACE_SYM||input.LA(1)==PAGE_SYM||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= SASS_AT_ROOT && input.LA(1) <= SASS_DEBUG)||(input.LA(1) >= SASS_EACH && input.LA(1) <= SASS_ELSE)||input.LA(1)==SASS_EXTEND||(input.LA(1) >= SASS_FOR && input.LA(1) <= SASS_FUNCTION)||(input.LA(1) >= SASS_IF && input.LA(1) <= SASS_MIXIN)||(input.LA(1) >= SASS_RETURN && input.LA(1) <= SASS_USE)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM)||input.LA(1)==WEBKIT_KEYFRAMES_SYM ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1261:9: {...}? ( SASS_VAR | IDENT DOT SASS_VAR )
					{
					dbg.location(1261,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isScssSource()");
					}dbg.location(1261,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1261:27: ( SASS_VAR | IDENT DOT SASS_VAR )
					int alt407=2;
					try { dbg.enterSubRule(407);
					try { dbg.enterDecision(407, decisionCanBacktrack[407]);

					int LA407_0 = input.LA(1);
					if ( (LA407_0==SASS_VAR) ) {
						alt407=1;
					}
					else if ( (LA407_0==IDENT) ) {
						alt407=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 407, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(407);}

					switch (alt407) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1261:29: SASS_VAR
							{
							dbg.location(1261,29);
							match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable9139); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1261:40: IDENT DOT SASS_VAR
							{
							dbg.location(1261,40);
							match(input,IDENT,FOLLOW_IDENT_in_cp_variable9143); if (state.failed) return;dbg.location(1261,46);
							match(input,DOT,FOLLOW_DOT_in_cp_variable9145); if (state.failed) return;dbg.location(1261,50);
							match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable9147); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(407);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1262, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable"



	// $ANTLR start "cp_expression_list"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1265:1: cp_expression_list : ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* ;
	public final void cp_expression_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1265, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1266:5: ( ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:5: ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			{
			dbg.location(1267,24);
			pushFollow(FOLLOW_cp_expression_in_cp_expression_list9177);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1268,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			try { dbg.enterSubRule(411);

			loop411:
			while (true) {
				int alt411=2;
				try { dbg.enterDecision(411, decisionCanBacktrack[411]);

				try {
					isCyclicDecision = true;
					alt411 = dfa411.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(411);}

				switch (alt411) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:6: ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression
					{
					dbg.location(1268,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:37: ( ws )?
					int alt409=2;
					try { dbg.enterSubRule(409);
					try { dbg.enterDecision(409, decisionCanBacktrack[409]);

					int LA409_0 = input.LA(1);
					if ( (LA409_0==COMMENT||LA409_0==NL||LA409_0==WS) ) {
						alt409=1;
					}
					} finally {dbg.exitDecision(409);}

					switch (alt409) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:37: ws
							{
							dbg.location(1268,37);
							pushFollow(FOLLOW_ws_in_cp_expression_list9196);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(409);}
					dbg.location(1268,41);
					match(input,COMMA,FOLLOW_COMMA_in_cp_expression_list9199); if (state.failed) return;dbg.location(1268,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:47: ( ws )?
					int alt410=2;
					try { dbg.enterSubRule(410);
					try { dbg.enterDecision(410, decisionCanBacktrack[410]);

					int LA410_0 = input.LA(1);
					if ( (LA410_0==COMMENT||LA410_0==NL||LA410_0==WS) ) {
						alt410=1;
					}
					} finally {dbg.exitDecision(410);}

					switch (alt410) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:47: ws
							{
							dbg.location(1268,47);
							pushFollow(FOLLOW_ws_in_cp_expression_list9201);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(410);}
					dbg.location(1268,51);
					pushFollow(FOLLOW_cp_expression_in_cp_expression_list9204);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop411;
				}
			}
			} finally {dbg.exitSubRule(411);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1269, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_list"



	// $ANTLR start "cp_expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1281:1: cp_expression : ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN );
	public final void cp_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1281, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:5: ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN )
			int alt420=3;
			try { dbg.enterDecision(420, decisionCanBacktrack[420]);

			int LA420_0 = input.LA(1);
			if ( (LA420_0==LBRACE) ) {
				alt420=1;
			}
			else if ( (LA420_0==NOT) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==MINUS||LA420_0==PLUS) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==IDENT) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==VARIABLE) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==LBRACKET) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==NUMBER) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==URANGE) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==PERCENTAGE) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==LENGTH) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==EMS) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==REM) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==EXS) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==ANGLE) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==TIME) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==FREQ) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==RESOLUTION) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==DIMENSION) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==STRING) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==TILDE) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==LESS_JS_STRING) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==GEN) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==URI) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==HASH) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==AT_IDENT||(LA420_0 >= BOTTOMCENTER_SYM && LA420_0 <= BOTTOMRIGHT_SYM)||LA420_0==CHARSET_SYM||LA420_0==COUNTER_STYLE_SYM||LA420_0==FONT_FACE_SYM||LA420_0==IMPORT_SYM||(LA420_0 >= LEFTBOTTOM_SYM && LA420_0 <= LEFTTOP_SYM)||LA420_0==MEDIA_SYM||LA420_0==MOZ_DOCUMENT_SYM||LA420_0==NAMESPACE_SYM||LA420_0==PAGE_SYM||(LA420_0 >= RIGHTBOTTOM_SYM && LA420_0 <= RIGHTTOP_SYM)||(LA420_0 >= SASS_AT_ROOT && LA420_0 <= SASS_DEBUG)||(LA420_0 >= SASS_EACH && LA420_0 <= SASS_ELSE)||LA420_0==SASS_EXTEND||(LA420_0 >= SASS_FOR && LA420_0 <= SASS_FUNCTION)||(LA420_0 >= SASS_IF && LA420_0 <= SASS_MIXIN)||(LA420_0 >= SASS_RETURN && LA420_0 <= SASS_USE)||(LA420_0 >= SASS_WARN && LA420_0 <= SASS_WHILE)||(LA420_0 >= TOPCENTER_SYM && LA420_0 <= TOPRIGHT_SYM)||LA420_0==WEBKIT_KEYFRAMES_SYM) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==SASS_VAR) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==LESS_AND) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==HASH_SYMBOL) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==AT_SIGN) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==PERCENTAGE_SYMBOL) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==IMPORTANT_SYM) && (synpred56_Css3())) {
				alt420=2;
			}
			else if ( (LA420_0==LPAREN) ) {
				int LA420_32 = input.LA(2);
				if ( (synpred56_Css3()) ) {
					alt420=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt420=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 420, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 420, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(420);}

			switch (alt420) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:5: {...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					{
					dbg.location(1283,5);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isLessSource()");
					}dbg.location(1283,23);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:23: ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:24: LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(1283,24);
					match(input,LBRACE,FOLLOW_LBRACE_in_cp_expression9240); if (state.failed) return;dbg.location(1283,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:31: ( ws )?
					int alt412=2;
					try { dbg.enterSubRule(412);
					try { dbg.enterDecision(412, decisionCanBacktrack[412]);

					int LA412_0 = input.LA(1);
					if ( (LA412_0==COMMENT||LA412_0==NL||LA412_0==WS) ) {
						alt412=1;
					}
					} finally {dbg.exitDecision(412);}

					switch (alt412) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:31: ws
							{
							dbg.location(1283,31);
							pushFollow(FOLLOW_ws_in_cp_expression9242);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(412);}
					dbg.location(1283,35);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression9245);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1283,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:48: ( declarations )?
					int alt413=2;
					try { dbg.enterSubRule(413);
					try { dbg.enterDecision(413, decisionCanBacktrack[413]);

					int LA413_0 = input.LA(1);
					if ( ((LA413_0 >= AT_IDENT && LA413_0 <= AT_SIGN)||(LA413_0 >= BOTTOMCENTER_SYM && LA413_0 <= BOTTOMRIGHT_SYM)||(LA413_0 >= CHARSET_SYM && LA413_0 <= COLON)||LA413_0==CONTAINER_SYM||LA413_0==COUNTER_STYLE_SYM||(LA413_0 >= DCOLON && LA413_0 <= DOT)||LA413_0==FONT_FACE_SYM||(LA413_0 >= GEN && LA413_0 <= GREATER)||(LA413_0 >= HASH && LA413_0 <= HASH_SYMBOL)||LA413_0==IDENT||LA413_0==IMPORT_SYM||LA413_0==LAYER_SYM||(LA413_0 >= LBRACKET && LA413_0 <= LEFTTOP_SYM)||LA413_0==LESS_AND||(LA413_0 >= MEDIA_SYM && LA413_0 <= MOZ_DOCUMENT_SYM)||LA413_0==NAMESPACE_SYM||LA413_0==PAGE_SYM||(LA413_0 >= PIPE && LA413_0 <= PLUS)||(LA413_0 >= RIGHTBOTTOM_SYM && LA413_0 <= RIGHTTOP_SYM)||(LA413_0 >= SASS_AT_ROOT && LA413_0 <= SASS_DEBUG)||(LA413_0 >= SASS_EACH && LA413_0 <= SASS_ELSE)||(LA413_0 >= SASS_ERROR && LA413_0 <= SASS_FUNCTION)||(LA413_0 >= SASS_IF && LA413_0 <= SASS_MIXIN)||(LA413_0 >= SASS_RETURN && LA413_0 <= SEMI)||LA413_0==STAR||LA413_0==SUPPORTS_SYM||LA413_0==TILDE||(LA413_0 >= TOPCENTER_SYM && LA413_0 <= TOPRIGHT_SYM)||LA413_0==VARIABLE||LA413_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt413=1;
					}
					} finally {dbg.exitDecision(413);}

					switch (alt413) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:48: declarations
							{
							dbg.location(1283,48);
							pushFollow(FOLLOW_declarations_in_cp_expression9247);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(413);}
					dbg.location(1283,62);
					match(input,RBRACE,FOLLOW_RBRACE_in_cp_expression9250); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1284:7: ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					{
					dbg.location(1284,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1284:31: ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1284:32: cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					{
					dbg.location(1284,32);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression9266);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;dbg.location(1285,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1285:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					try { dbg.enterSubRule(417);

					loop417:
					while (true) {
						int alt417=3;
						try { dbg.enterDecision(417, decisionCanBacktrack[417]);

						try {
							isCyclicDecision = true;
							alt417 = dfa417.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(417);}

						switch (alt417) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:9: ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom
							{
							dbg.location(1286,39);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:39: ( ( ws )? cp_expression_operator ( ws )? )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:40: ( ws )? cp_expression_operator ( ws )?
							{
							dbg.location(1286,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:40: ( ws )?
							int alt414=2;
							try { dbg.enterSubRule(414);
							try { dbg.enterDecision(414, decisionCanBacktrack[414]);

							int LA414_0 = input.LA(1);
							if ( (LA414_0==COMMENT||LA414_0==NL||LA414_0==WS) ) {
								alt414=1;
							}
							} finally {dbg.exitDecision(414);}

							switch (alt414) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:40: ws
									{
									dbg.location(1286,40);
									pushFollow(FOLLOW_ws_in_cp_expression9290);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(414);}
							dbg.location(1286,44);
							pushFollow(FOLLOW_cp_expression_operator_in_cp_expression9293);
							cp_expression_operator();
							state._fsp--;
							if (state.failed) return;dbg.location(1286,67);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:67: ( ws )?
							int alt415=2;
							try { dbg.enterSubRule(415);
							try { dbg.enterDecision(415, decisionCanBacktrack[415]);

							int LA415_0 = input.LA(1);
							if ( (LA415_0==COMMENT||LA415_0==NL||LA415_0==WS) ) {
								alt415=1;
							}
							} finally {dbg.exitDecision(415);}

							switch (alt415) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:67: ws
									{
									dbg.location(1286,67);
									pushFollow(FOLLOW_ws_in_cp_expression9295);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(415);}

							}
							dbg.location(1286,72);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression9299);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:11: ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom
							{
							dbg.location(1287,37);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:37: ( ws )?
							int alt416=2;
							try { dbg.enterSubRule(416);
							try { dbg.enterDecision(416, decisionCanBacktrack[416]);

							int LA416_0 = input.LA(1);
							if ( (LA416_0==COMMENT||LA416_0==NL||LA416_0==WS) ) {
								alt416=1;
							}
							} finally {dbg.exitDecision(416);}

							switch (alt416) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:37: ws
									{
									dbg.location(1287,37);
									pushFollow(FOLLOW_ws_in_cp_expression9318);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(416);}
							dbg.location(1287,41);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression9321);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop417;
						}
					}
					} finally {dbg.exitSubRule(417);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:7: {...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN
					{
					dbg.location(1289,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isScssSource()");
					}dbg.location(1289,25);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression9339); if (state.failed) return;dbg.location(1289,32);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:32: ( ws )?
					int alt418=2;
					try { dbg.enterSubRule(418);
					try { dbg.enterDecision(418, decisionCanBacktrack[418]);

					int LA418_0 = input.LA(1);
					if ( (LA418_0==COMMENT||LA418_0==NL||LA418_0==WS) ) {
						alt418=1;
					}
					} finally {dbg.exitDecision(418);}

					switch (alt418) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:32: ws
							{
							dbg.location(1289,32);
							pushFollow(FOLLOW_ws_in_cp_expression9341);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(418);}
					dbg.location(1289,36);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression9344);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1289,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:49: ( sass_map_pairs )?
					int alt419=2;
					try { dbg.enterSubRule(419);
					try { dbg.enterDecision(419, decisionCanBacktrack[419]);

					int LA419_0 = input.LA(1);
					if ( ((LA419_0 >= AT_IDENT && LA419_0 <= AT_SIGN)||(LA419_0 >= BOTTOMCENTER_SYM && LA419_0 <= BOTTOMRIGHT_SYM)||LA419_0==CHARSET_SYM||LA419_0==COMMA||LA419_0==COUNTER_STYLE_SYM||LA419_0==FONT_FACE_SYM||LA419_0==GEN||LA419_0==HASH_SYMBOL||LA419_0==IDENT||LA419_0==IMPORT_SYM||(LA419_0 >= LEFTBOTTOM_SYM && LA419_0 <= LEFTTOP_SYM)||(LA419_0 >= MEDIA_SYM && LA419_0 <= MOZ_DOCUMENT_SYM)||LA419_0==NAMESPACE_SYM||LA419_0==NUMBER||LA419_0==PAGE_SYM||(LA419_0 >= RIGHTBOTTOM_SYM && LA419_0 <= RIGHTTOP_SYM)||(LA419_0 >= SASS_AT_ROOT && LA419_0 <= SASS_DEBUG)||(LA419_0 >= SASS_EACH && LA419_0 <= SASS_ELSE)||LA419_0==SASS_EXTEND||(LA419_0 >= SASS_FOR && LA419_0 <= SASS_FUNCTION)||(LA419_0 >= SASS_IF && LA419_0 <= SASS_MIXIN)||(LA419_0 >= SASS_RETURN && LA419_0 <= SASS_WHILE)||LA419_0==STRING||(LA419_0 >= TOPCENTER_SYM && LA419_0 <= TOPRIGHT_SYM)||LA419_0==VARIABLE||LA419_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt419=1;
					}
					} finally {dbg.exitDecision(419);}

					switch (alt419) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:49: sass_map_pairs
							{
							dbg.location(1289,49);
							pushFollow(FOLLOW_sass_map_pairs_in_cp_expression9346);
							sass_map_pairs();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(419);}
					dbg.location(1289,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression9349); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1290, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression"



	// $ANTLR start "cp_expression_operator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:1: cp_expression_operator : ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ );
	public final void cp_expression_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1292, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:5: ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ )
			int alt421=8;
			try { dbg.enterDecision(421, decisionCanBacktrack[421]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA421_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt421=1;
				}
				else if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt421=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 421, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CP_EQ:
				{
				alt421=3;
				}
				break;
			case CP_NOT_EQ:
				{
				alt421=4;
				}
				break;
			case LESS:
				{
				alt421=5;
				}
				break;
			case LESS_OR_EQ:
				{
				alt421=6;
				}
				break;
			case GREATER:
				{
				alt421=7;
				}
				break;
			case GREATER_OR_EQ:
				{
				alt421=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 421, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(421);}

			switch (alt421) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:5: key_or
					{
					dbg.location(1294,5);
					pushFollow(FOLLOW_key_or_in_cp_expression_operator9370);
					key_or();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:14: key_and
					{
					dbg.location(1294,14);
					pushFollow(FOLLOW_key_and_in_cp_expression_operator9374);
					key_and();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:25: CP_EQ
					{
					dbg.location(1294,25);
					match(input,CP_EQ,FOLLOW_CP_EQ_in_cp_expression_operator9379); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:33: CP_NOT_EQ
					{
					dbg.location(1294,33);
					match(input,CP_NOT_EQ,FOLLOW_CP_NOT_EQ_in_cp_expression_operator9383); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:45: LESS
					{
					dbg.location(1294,45);
					match(input,LESS,FOLLOW_LESS_in_cp_expression_operator9387); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:52: LESS_OR_EQ
					{
					dbg.location(1294,52);
					match(input,LESS_OR_EQ,FOLLOW_LESS_OR_EQ_in_cp_expression_operator9391); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:65: GREATER
					{
					dbg.location(1294,65);
					match(input,GREATER,FOLLOW_GREATER_in_cp_expression_operator9395); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:75: GREATER_OR_EQ
					{
					dbg.location(1294,75);
					match(input,GREATER_OR_EQ,FOLLOW_GREATER_OR_EQ_in_cp_expression_operator9399); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1295, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_operator"



	// $ANTLR start "cp_expression_atom"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:1: cp_expression_atom : ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) ;
	public final void cp_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1297, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:5: ( ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:9: ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			{
			dbg.location(1299,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:9: ( NOT ( ws )? )?
			int alt423=2;
			try { dbg.enterSubRule(423);
			try { dbg.enterDecision(423, decisionCanBacktrack[423]);

			int LA423_0 = input.LA(1);
			if ( (LA423_0==NOT) ) {
				alt423=1;
			}
			} finally {dbg.exitDecision(423);}

			switch (alt423) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:10: NOT ( ws )?
					{
					dbg.location(1299,10);
					match(input,NOT,FOLLOW_NOT_in_cp_expression_atom9425); if (state.failed) return;dbg.location(1299,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:14: ( ws )?
					int alt422=2;
					try { dbg.enterSubRule(422);
					try { dbg.enterDecision(422, decisionCanBacktrack[422]);

					int LA422_0 = input.LA(1);
					if ( (LA422_0==COMMENT||LA422_0==NL||LA422_0==WS) ) {
						alt422=1;
					}
					} finally {dbg.exitDecision(422);}

					switch (alt422) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:14: ws
							{
							dbg.location(1299,14);
							pushFollow(FOLLOW_ws_in_cp_expression_atom9427);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(422);}

					}
					break;

			}
			} finally {dbg.exitSubRule(423);}
			dbg.location(1300,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1300:9: ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			int alt427=2;
			try { dbg.enterSubRule(427);
			try { dbg.enterDecision(427, decisionCanBacktrack[427]);

			int LA427_0 = input.LA(1);
			if ( (LA427_0==MINUS||LA427_0==PLUS) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==IDENT) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==VARIABLE) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==LBRACKET) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==NUMBER) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==URANGE) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==PERCENTAGE) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==LENGTH) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==EMS) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==REM) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==EXS) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==ANGLE) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==TIME) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==FREQ) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==RESOLUTION) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==DIMENSION) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==STRING) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==TILDE) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==LESS_JS_STRING) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==GEN) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==URI) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==HASH) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==AT_IDENT||(LA427_0 >= BOTTOMCENTER_SYM && LA427_0 <= BOTTOMRIGHT_SYM)||LA427_0==CHARSET_SYM||LA427_0==COUNTER_STYLE_SYM||LA427_0==FONT_FACE_SYM||LA427_0==IMPORT_SYM||(LA427_0 >= LEFTBOTTOM_SYM && LA427_0 <= LEFTTOP_SYM)||LA427_0==MEDIA_SYM||LA427_0==MOZ_DOCUMENT_SYM||LA427_0==NAMESPACE_SYM||LA427_0==PAGE_SYM||(LA427_0 >= RIGHTBOTTOM_SYM && LA427_0 <= RIGHTTOP_SYM)||(LA427_0 >= SASS_AT_ROOT && LA427_0 <= SASS_DEBUG)||(LA427_0 >= SASS_EACH && LA427_0 <= SASS_ELSE)||LA427_0==SASS_EXTEND||(LA427_0 >= SASS_FOR && LA427_0 <= SASS_FUNCTION)||(LA427_0 >= SASS_IF && LA427_0 <= SASS_MIXIN)||(LA427_0 >= SASS_RETURN && LA427_0 <= SASS_USE)||(LA427_0 >= SASS_WARN && LA427_0 <= SASS_WHILE)||(LA427_0 >= TOPCENTER_SYM && LA427_0 <= TOPRIGHT_SYM)||LA427_0==WEBKIT_KEYFRAMES_SYM) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==SASS_VAR) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==LESS_AND) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==HASH_SYMBOL) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==AT_SIGN) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==PERCENTAGE_SYMBOL) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==IMPORTANT_SYM) && (synpred59_Css3())) {
				alt427=1;
			}
			else if ( (LA427_0==LPAREN) ) {
				int LA427_30 = input.LA(2);
				if ( (synpred59_Css3()) ) {
					alt427=1;
				}
				else if ( (true) ) {
					alt427=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 427, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(427);}

			switch (alt427) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:13: ( cp_math_expression )=> cp_math_expression
					{
					dbg.location(1301,35);
					pushFollow(FOLLOW_cp_math_expression_in_cp_expression_atom9458);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:15: LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN
					{
					dbg.location(1302,15);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression_atom9474); if (state.failed) return;dbg.location(1302,22);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:22: ( ws )?
					int alt424=2;
					try { dbg.enterSubRule(424);
					try { dbg.enterDecision(424, decisionCanBacktrack[424]);

					int LA424_0 = input.LA(1);
					if ( (LA424_0==COMMENT||LA424_0==NL||LA424_0==WS) ) {
						alt424=1;
					}
					} finally {dbg.exitDecision(424);}

					switch (alt424) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:22: ws
							{
							dbg.location(1302,22);
							pushFollow(FOLLOW_ws_in_cp_expression_atom9476);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(424);}
					dbg.location(1302,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:26: ( cp_expression_list ( ws )? )?
					int alt426=2;
					try { dbg.enterSubRule(426);
					try { dbg.enterDecision(426, decisionCanBacktrack[426]);

					int LA426_0 = input.LA(1);
					if ( ((LA426_0 >= ANGLE && LA426_0 <= AT_SIGN)||(LA426_0 >= BOTTOMCENTER_SYM && LA426_0 <= BOTTOMRIGHT_SYM)||LA426_0==CHARSET_SYM||LA426_0==COUNTER_STYLE_SYM||LA426_0==DIMENSION||LA426_0==EMS||LA426_0==EXS||(LA426_0 >= FONT_FACE_SYM && LA426_0 <= FREQ)||LA426_0==GEN||(LA426_0 >= HASH && LA426_0 <= HASH_SYMBOL)||(LA426_0 >= IDENT && LA426_0 <= IMPORT_SYM)||(LA426_0 >= LBRACE && LA426_0 <= LENGTH)||(LA426_0 >= LESS_AND && LA426_0 <= LESS_JS_STRING)||LA426_0==LPAREN||(LA426_0 >= MEDIA_SYM && LA426_0 <= MOZ_DOCUMENT_SYM)||LA426_0==NAMESPACE_SYM||(LA426_0 >= NOT && LA426_0 <= NUMBER)||(LA426_0 >= PAGE_SYM && LA426_0 <= PERCENTAGE_SYMBOL)||LA426_0==PLUS||(LA426_0 >= REM && LA426_0 <= RIGHTTOP_SYM)||(LA426_0 >= SASS_AT_ROOT && LA426_0 <= SASS_DEBUG)||(LA426_0 >= SASS_EACH && LA426_0 <= SASS_ELSE)||LA426_0==SASS_EXTEND||(LA426_0 >= SASS_FOR && LA426_0 <= SASS_FUNCTION)||(LA426_0 >= SASS_IF && LA426_0 <= SASS_MIXIN)||(LA426_0 >= SASS_RETURN && LA426_0 <= SASS_WHILE)||LA426_0==STRING||(LA426_0 >= TILDE && LA426_0 <= TOPRIGHT_SYM)||(LA426_0 >= URANGE && LA426_0 <= URI)||LA426_0==VARIABLE||LA426_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt426=1;
					}
					} finally {dbg.exitDecision(426);}

					switch (alt426) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:27: cp_expression_list ( ws )?
							{
							dbg.location(1302,27);
							pushFollow(FOLLOW_cp_expression_list_in_cp_expression_atom9480);
							cp_expression_list();
							state._fsp--;
							if (state.failed) return;dbg.location(1302,46);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:46: ( ws )?
							int alt425=2;
							try { dbg.enterSubRule(425);
							try { dbg.enterDecision(425, decisionCanBacktrack[425]);

							int LA425_0 = input.LA(1);
							if ( (LA425_0==COMMENT||LA425_0==NL||LA425_0==WS) ) {
								alt425=1;
							}
							} finally {dbg.exitDecision(425);}

							switch (alt425) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:46: ws
									{
									dbg.location(1302,46);
									pushFollow(FOLLOW_ws_in_cp_expression_atom9482);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(425);}

							}
							break;

					}
					} finally {dbg.exitSubRule(426);}
					dbg.location(1302,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression_atom9487); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(427);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1304, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_atom"



	// $ANTLR start "cp_math_expressions"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1307:1: cp_math_expressions : cp_math_expression ( ws cp_math_expression )* ;
	public final void cp_math_expressions() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expressions");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1307, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1308:5: ( cp_math_expression ( ws cp_math_expression )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1309:5: cp_math_expression ( ws cp_math_expression )*
			{
			dbg.location(1309,5);
			pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions9519);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1310,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1310:5: ( ws cp_math_expression )*
			try { dbg.enterSubRule(428);

			loop428:
			while (true) {
				int alt428=2;
				try { dbg.enterDecision(428, decisionCanBacktrack[428]);

				int LA428_0 = input.LA(1);
				if ( (LA428_0==COMMENT||LA428_0==NL||LA428_0==WS) ) {
					alt428=1;
				}

				} finally {dbg.exitDecision(428);}

				switch (alt428) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1310:6: ws cp_math_expression
					{
					dbg.location(1310,6);
					pushFollow(FOLLOW_ws_in_cp_math_expressions9526);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1310,9);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions9528);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop428;
				}
			}
			} finally {dbg.exitSubRule(428);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1311, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expressions");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expressions"



	// $ANTLR start "cp_math_expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:1: cp_math_expression : cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* ;
	public final void cp_math_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1325, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:5: ( cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:10: cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			{
			dbg.location(1326,10);
			pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression9562);
			cp_math_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1327,10);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1327:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			try { dbg.enterSubRule(431);

			loop431:
			while (true) {
				int alt431=2;
				try { dbg.enterDecision(431, decisionCanBacktrack[431]);

				try {
					isCyclicDecision = true;
					alt431 = dfa431.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(431);}

				switch (alt431) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom
					{
					dbg.location(1328,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:48: ( ws )?
					int alt429=2;
					try { dbg.enterSubRule(429);
					try { dbg.enterDecision(429, decisionCanBacktrack[429]);

					int LA429_0 = input.LA(1);
					if ( (LA429_0==COMMENT||LA429_0==NL||LA429_0==WS) ) {
						alt429=1;
					}
					} finally {dbg.exitDecision(429);}

					switch (alt429) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:48: ws
							{
							dbg.location(1328,48);
							pushFollow(FOLLOW_ws_in_cp_math_expression9604);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(429);}
					dbg.location(1328,52);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1328,78);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:78: ( ws )?
					int alt430=2;
					try { dbg.enterSubRule(430);
					try { dbg.enterDecision(430, decisionCanBacktrack[430]);

					int LA430_0 = input.LA(1);
					if ( (LA430_0==COMMENT||LA430_0==NL||LA430_0==WS) ) {
						alt430=1;
					}
					} finally {dbg.exitDecision(430);}

					switch (alt430) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:78: ws
							{
							dbg.location(1328,78);
							pushFollow(FOLLOW_ws_in_cp_math_expression9617);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(430);}
					dbg.location(1328,82);
					pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression9620);
					cp_math_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop431;
				}
			}
			} finally {dbg.exitSubRule(431);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1330, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression"



	// $ANTLR start "cp_math_expression_atom"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1332:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );
	public final void cp_math_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1332, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:5: ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN )
			int alt436=3;
			try { dbg.enterDecision(436, decisionCanBacktrack[436]);

			try {
				isCyclicDecision = true;
				alt436 = dfa436.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(436);}

			switch (alt436) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:5: term
					{
					dbg.location(1334,5);
					pushFollow(FOLLOW_term_in_cp_math_expression_atom9653);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1335:7: IMPORTANT_SYM
					{
					dbg.location(1335,7);
					match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom9661); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:7: ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN
					{
					dbg.location(1336,7);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:7: ( unaryOperator ( ws )? )?
					int alt433=2;
					try { dbg.enterSubRule(433);
					try { dbg.enterDecision(433, decisionCanBacktrack[433]);

					int LA433_0 = input.LA(1);
					if ( (LA433_0==MINUS||LA433_0==PLUS) ) {
						alt433=1;
					}
					} finally {dbg.exitDecision(433);}

					switch (alt433) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:9: unaryOperator ( ws )?
							{
							dbg.location(1336,9);
							pushFollow(FOLLOW_unaryOperator_in_cp_math_expression_atom9672);
							unaryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(1336,23);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:23: ( ws )?
							int alt432=2;
							try { dbg.enterSubRule(432);
							try { dbg.enterDecision(432, decisionCanBacktrack[432]);

							int LA432_0 = input.LA(1);
							if ( (LA432_0==COMMENT||LA432_0==NL||LA432_0==WS) ) {
								alt432=1;
							}
							} finally {dbg.exitDecision(432);}

							switch (alt432) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:23: ws
									{
									dbg.location(1336,23);
									pushFollow(FOLLOW_ws_in_cp_math_expression_atom9674);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(432);}

							}
							break;

					}
					} finally {dbg.exitSubRule(433);}
					dbg.location(1336,30);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_math_expression_atom9680); if (state.failed) return;dbg.location(1336,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:37: ( ws )?
					int alt434=2;
					try { dbg.enterSubRule(434);
					try { dbg.enterDecision(434, decisionCanBacktrack[434]);

					int LA434_0 = input.LA(1);
					if ( (LA434_0==COMMENT||LA434_0==NL||LA434_0==WS) ) {
						alt434=1;
					}
					} finally {dbg.exitDecision(434);}

					switch (alt434) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:37: ws
							{
							dbg.location(1336,37);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom9682);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(434);}
					dbg.location(1336,41);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expression_atom9685);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1336,60);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:60: ( ws )?
					int alt435=2;
					try { dbg.enterSubRule(435);
					try { dbg.enterDecision(435, decisionCanBacktrack[435]);

					int LA435_0 = input.LA(1);
					if ( (LA435_0==COMMENT||LA435_0==NL||LA435_0==WS) ) {
						alt435=1;
					}
					} finally {dbg.exitDecision(435);}

					switch (alt435) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:60: ws
							{
							dbg.location(1336,60);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom9687);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(435);}
					dbg.location(1336,64);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_math_expression_atom9690); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1337, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression_atom"



	// $ANTLR start "cp_mixin_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1345:1: cp_mixin_declaration : ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block ;
	public final void cp_mixin_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1345, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:5: ( ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1347:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block
			{
			dbg.location(1347,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1347:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? )
			int alt448=2;
			try { dbg.enterSubRule(448);
			try { dbg.enterDecision(448, decisionCanBacktrack[448]);

			int LA448_0 = input.LA(1);
			if ( (LA448_0==DOT||LA448_0==HASH||LA448_0==LESS_AND) ) {
				alt448=1;
			}
			else if ( (LA448_0==SASS_MIXIN) ) {
				alt448=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 448, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(448);}

			switch (alt448) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:9: {...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )?
					{
					dbg.location(1348,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isLessSource()");
					}dbg.location(1348,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:27: ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) )
					int alt441=2;
					try { dbg.enterSubRule(441);
					try { dbg.enterDecision(441, decisionCanBacktrack[441]);

					int LA441_0 = input.LA(1);
					if ( (LA441_0==LESS_AND) ) {
						alt441=1;
					}
					else if ( (LA441_0==DOT||LA441_0==HASH) ) {
						alt441=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 441, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(441);}

					switch (alt441) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:28: LESS_AND
							{
							dbg.location(1348,28);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_declaration9730); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							{
							dbg.location(1348,39);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:40: ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1348,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:40: ( ( DOT cp_mixin_name ) | HASH )
							int alt437=2;
							try { dbg.enterSubRule(437);
							try { dbg.enterDecision(437, decisionCanBacktrack[437]);

							int LA437_0 = input.LA(1);
							if ( (LA437_0==DOT) ) {
								alt437=1;
							}
							else if ( (LA437_0==HASH) ) {
								alt437=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 437, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}

							} finally {dbg.exitDecision(437);}

							switch (alt437) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:41: ( DOT cp_mixin_name )
									{
									dbg.location(1348,41);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:41: ( DOT cp_mixin_name )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:42: DOT cp_mixin_name
									{
									dbg.location(1348,42);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_declaration9737); if (state.failed) return;dbg.location(1348,46);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration9739);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:63: HASH
									{
									dbg.location(1348,63);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_declaration9744); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(437);}
							dbg.location(1348,69);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:69: ( ws )?
							int alt438=2;
							try { dbg.enterSubRule(438);
							try { dbg.enterDecision(438, decisionCanBacktrack[438]);

							int LA438_0 = input.LA(1);
							if ( (LA438_0==COMMENT||LA438_0==NL||LA438_0==WS) ) {
								alt438=1;
							}
							} finally {dbg.exitDecision(438);}

							switch (alt438) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:69: ws
									{
									dbg.location(1348,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration9747);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(438);}
							dbg.location(1348,73);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration9750); if (state.failed) return;dbg.location(1348,80);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:80: ( ws )?
							int alt439=2;
							try { dbg.enterSubRule(439);
							try { dbg.enterDecision(439, decisionCanBacktrack[439]);

							int LA439_0 = input.LA(1);
							if ( (LA439_0==COMMENT||LA439_0==NL||LA439_0==WS) ) {
								alt439=1;
							}
							} finally {dbg.exitDecision(439);}

							switch (alt439) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:80: ws
									{
									dbg.location(1348,80);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration9752);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(439);}
							dbg.location(1348,84);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:84: ( cp_args_list )?
							int alt440=2;
							try { dbg.enterSubRule(440);
							try { dbg.enterDecision(440, decisionCanBacktrack[440]);

							int LA440_0 = input.LA(1);
							if ( (LA440_0==AT_IDENT||(LA440_0 >= BOTTOMCENTER_SYM && LA440_0 <= BOTTOMRIGHT_SYM)||LA440_0==CHARSET_SYM||(LA440_0 >= COUNTER_STYLE_SYM && LA440_0 <= CP_DOTS)||LA440_0==FONT_FACE_SYM||LA440_0==IDENT||LA440_0==IMPORT_SYM||(LA440_0 >= LEFTBOTTOM_SYM && LA440_0 <= LEFTTOP_SYM)||LA440_0==LESS_REST||LA440_0==MEDIA_SYM||LA440_0==MOZ_DOCUMENT_SYM||LA440_0==NAMESPACE_SYM||LA440_0==PAGE_SYM||(LA440_0 >= RIGHTBOTTOM_SYM && LA440_0 <= RIGHTTOP_SYM)||(LA440_0 >= SASS_AT_ROOT && LA440_0 <= SASS_DEBUG)||(LA440_0 >= SASS_EACH && LA440_0 <= SASS_ELSE)||LA440_0==SASS_EXTEND||(LA440_0 >= SASS_FOR && LA440_0 <= SASS_FUNCTION)||(LA440_0 >= SASS_IF && LA440_0 <= SASS_MIXIN)||(LA440_0 >= SASS_RETURN && LA440_0 <= SASS_WHILE)||(LA440_0 >= TOPCENTER_SYM && LA440_0 <= TOPRIGHT_SYM)||LA440_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt440=1;
							}
							} finally {dbg.exitDecision(440);}

							switch (alt440) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:84: cp_args_list
									{
									dbg.location(1348,84);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration9755);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(440);}
							dbg.location(1348,98);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration9758); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(441);}
					dbg.location(1348,107);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:107: ( ( ws )? less_mixin_guarded )?
					int alt443=2;
					try { dbg.enterSubRule(443);
					try { dbg.enterDecision(443, decisionCanBacktrack[443]);

					try {
						isCyclicDecision = true;
						alt443 = dfa443.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(443);}

					switch (alt443) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:108: ( ws )? less_mixin_guarded
							{
							dbg.location(1348,108);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:108: ( ws )?
							int alt442=2;
							try { dbg.enterSubRule(442);
							try { dbg.enterDecision(442, decisionCanBacktrack[442]);

							int LA442_0 = input.LA(1);
							if ( (LA442_0==COMMENT||LA442_0==NL||LA442_0==WS) ) {
								alt442=1;
							}
							} finally {dbg.exitDecision(442);}

							switch (alt442) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:108: ws
									{
									dbg.location(1348,108);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration9763);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(442);}
							dbg.location(1348,112);
							pushFollow(FOLLOW_less_mixin_guarded_in_cp_mixin_declaration9766);
							less_mixin_guarded();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(443);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:9: {...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					{
					dbg.location(1350,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isScssSource()");
					}dbg.location(1350,27);
					match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_cp_mixin_declaration9790); if (state.failed) return;dbg.location(1350,38);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration9792);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1350,41);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration9794);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1350,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					int alt447=2;
					try { dbg.enterSubRule(447);
					try { dbg.enterDecision(447, decisionCanBacktrack[447]);

					try {
						isCyclicDecision = true;
						alt447 = dfa447.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(447);}

					switch (alt447) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:56: ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1350,56);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:56: ( ws )?
							int alt444=2;
							try { dbg.enterSubRule(444);
							try { dbg.enterDecision(444, decisionCanBacktrack[444]);

							int LA444_0 = input.LA(1);
							if ( (LA444_0==COMMENT||LA444_0==NL||LA444_0==WS) ) {
								alt444=1;
							}
							} finally {dbg.exitDecision(444);}

							switch (alt444) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:56: ws
									{
									dbg.location(1350,56);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration9797);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(444);}
							dbg.location(1350,60);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration9800); if (state.failed) return;dbg.location(1350,67);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:67: ( ws )?
							int alt445=2;
							try { dbg.enterSubRule(445);
							try { dbg.enterDecision(445, decisionCanBacktrack[445]);

							int LA445_0 = input.LA(1);
							if ( (LA445_0==COMMENT||LA445_0==NL||LA445_0==WS) ) {
								alt445=1;
							}
							} finally {dbg.exitDecision(445);}

							switch (alt445) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:67: ws
									{
									dbg.location(1350,67);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration9802);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(445);}
							dbg.location(1350,71);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:71: ( cp_args_list )?
							int alt446=2;
							try { dbg.enterSubRule(446);
							try { dbg.enterDecision(446, decisionCanBacktrack[446]);

							int LA446_0 = input.LA(1);
							if ( (LA446_0==AT_IDENT||(LA446_0 >= BOTTOMCENTER_SYM && LA446_0 <= BOTTOMRIGHT_SYM)||LA446_0==CHARSET_SYM||(LA446_0 >= COUNTER_STYLE_SYM && LA446_0 <= CP_DOTS)||LA446_0==FONT_FACE_SYM||LA446_0==IDENT||LA446_0==IMPORT_SYM||(LA446_0 >= LEFTBOTTOM_SYM && LA446_0 <= LEFTTOP_SYM)||LA446_0==LESS_REST||LA446_0==MEDIA_SYM||LA446_0==MOZ_DOCUMENT_SYM||LA446_0==NAMESPACE_SYM||LA446_0==PAGE_SYM||(LA446_0 >= RIGHTBOTTOM_SYM && LA446_0 <= RIGHTTOP_SYM)||(LA446_0 >= SASS_AT_ROOT && LA446_0 <= SASS_DEBUG)||(LA446_0 >= SASS_EACH && LA446_0 <= SASS_ELSE)||LA446_0==SASS_EXTEND||(LA446_0 >= SASS_FOR && LA446_0 <= SASS_FUNCTION)||(LA446_0 >= SASS_IF && LA446_0 <= SASS_MIXIN)||(LA446_0 >= SASS_RETURN && LA446_0 <= SASS_WHILE)||(LA446_0 >= TOPCENTER_SYM && LA446_0 <= TOPRIGHT_SYM)||LA446_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt446=1;
							}
							} finally {dbg.exitDecision(446);}

							switch (alt446) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:71: cp_args_list
									{
									dbg.location(1350,71);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration9805);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(446);}
							dbg.location(1350,85);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration9808); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(447);}

					}
					break;

			}
			} finally {dbg.exitSubRule(448);}
			dbg.location(1352,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1352:5: ( ws )?
			int alt449=2;
			try { dbg.enterSubRule(449);
			try { dbg.enterDecision(449, decisionCanBacktrack[449]);

			int LA449_0 = input.LA(1);
			if ( (LA449_0==COMMENT||LA449_0==NL||LA449_0==WS) ) {
				alt449=1;
			}
			} finally {dbg.exitDecision(449);}

			switch (alt449) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1352:5: ws
					{
					dbg.location(1352,5);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration9822);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(449);}
			dbg.location(1352,9);
			pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_declaration9825);
			cp_mixin_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1353, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_declaration"



	// $ANTLR start "cp_mixin_call"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1357:1: cp_mixin_call : ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) ;
	public final void cp_mixin_call() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1357, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1358:5: ( ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1359:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			{
			dbg.location(1359,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1359:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			int alt465=2;
			try { dbg.enterSubRule(465);
			try { dbg.enterDecision(465, decisionCanBacktrack[465]);

			int LA465_0 = input.LA(1);
			if ( (LA465_0==AT_IDENT||LA465_0==DOT||LA465_0==HASH||LA465_0==LESS_AND) ) {
				alt465=1;
			}
			else if ( (LA465_0==SASS_INCLUDE) ) {
				alt465=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 465, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(465);}

			switch (alt465) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:9: {...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					{
					dbg.location(1360,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isLessSource()");
					}dbg.location(1360,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:27: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
					int alt450=4;
					try { dbg.enterSubRule(450);
					try { dbg.enterDecision(450, decisionCanBacktrack[450]);

					switch ( input.LA(1) ) {
					case DOT:
						{
						alt450=1;
						}
						break;
					case HASH:
						{
						alt450=2;
						}
						break;
					case AT_IDENT:
						{
						alt450=3;
						}
						break;
					case LESS_AND:
						{
						alt450=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 450, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(450);}

					switch (alt450) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:28: DOT cp_mixin_name
							{
							dbg.location(1360,28);
							match(input,DOT,FOLLOW_DOT_in_cp_mixin_call9861); if (state.failed) return;dbg.location(1360,32);
							pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call9863);
							cp_mixin_name();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:48: HASH
							{
							dbg.location(1360,48);
							match(input,HASH,FOLLOW_HASH_in_cp_mixin_call9867); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:55: AT_IDENT
							{
							dbg.location(1360,55);
							match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call9871); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:66: LESS_AND
							{
							dbg.location(1360,66);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call9875); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(450);}
					dbg.location(1360,76);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:76: ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )*
					try { dbg.enterSubRule(454);

					loop454:
					while (true) {
						int alt454=2;
						try { dbg.enterDecision(454, decisionCanBacktrack[454]);

						int LA454_0 = input.LA(1);
						if ( (LA454_0==COMMENT||LA454_0==NL||LA454_0==WS) ) {
							int LA454_2 = input.LA(2);
							if ( (synpred61_Css3()) ) {
								alt454=1;
							}

						}
						else if ( (LA454_0==GREATER||LA454_0==PLUS||LA454_0==TILDE) ) {
							int LA454_14 = input.LA(2);
							if ( (synpred61_Css3()) ) {
								alt454=1;
							}

						}

						} finally {dbg.exitDecision(454);}

						switch (alt454) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:77: ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
							{
							dbg.location(1360,101);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:101: ( ws )?
							int alt451=2;
							try { dbg.enterSubRule(451);
							try { dbg.enterDecision(451, decisionCanBacktrack[451]);

							int LA451_0 = input.LA(1);
							if ( (LA451_0==COMMENT||LA451_0==NL||LA451_0==WS) ) {
								alt451=1;
							}
							} finally {dbg.exitDecision(451);}

							switch (alt451) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:101: ws
									{
									dbg.location(1360,101);
									pushFollow(FOLLOW_ws_in_cp_mixin_call9891);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(451);}
							dbg.location(1360,105);
							pushFollow(FOLLOW_combinator_in_cp_mixin_call9894);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(1360,116);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:116: ( ws )?
							int alt452=2;
							try { dbg.enterSubRule(452);
							try { dbg.enterDecision(452, decisionCanBacktrack[452]);

							int LA452_0 = input.LA(1);
							if ( (LA452_0==COMMENT||LA452_0==NL||LA452_0==WS) ) {
								alt452=1;
							}
							} finally {dbg.exitDecision(452);}

							switch (alt452) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:116: ws
									{
									dbg.location(1360,116);
									pushFollow(FOLLOW_ws_in_cp_mixin_call9896);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(452);}
							dbg.location(1360,120);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:120: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
							int alt453=4;
							try { dbg.enterSubRule(453);
							try { dbg.enterDecision(453, decisionCanBacktrack[453]);

							switch ( input.LA(1) ) {
							case DOT:
								{
								alt453=1;
								}
								break;
							case HASH:
								{
								alt453=2;
								}
								break;
							case AT_IDENT:
								{
								alt453=3;
								}
								break;
							case LESS_AND:
								{
								alt453=4;
								}
								break;
							default:
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 453, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(453);}

							switch (alt453) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:121: DOT cp_mixin_name
									{
									dbg.location(1360,121);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_call9900); if (state.failed) return;dbg.location(1360,125);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call9902);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:141: HASH
									{
									dbg.location(1360,141);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_call9906); if (state.failed) return;
									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:148: AT_IDENT
									{
									dbg.location(1360,148);
									match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call9910); if (state.failed) return;
									}
									break;
								case 4 :
									dbg.enterAlt(4);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:159: LESS_AND
									{
									dbg.location(1360,159);
									match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call9914); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(453);}

							}
							break;

						default :
							break loop454;
						}
					}
					} finally {dbg.exitSubRule(454);}
					dbg.location(1360,171);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:171: ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					int alt458=3;
					try { dbg.enterSubRule(458);
					try { dbg.enterDecision(458, decisionCanBacktrack[458]);

					int LA458_0 = input.LA(1);
					if ( (LA458_0==COLON||LA458_0==DCOLON) ) {
						int LA458_1 = input.LA(2);
						if ( (synpred62_Css3()) ) {
							alt458=1;
						}
					}
					else if ( (LA458_0==COMMENT||LA458_0==NL||LA458_0==WS) ) {
						int LA458_2 = input.LA(2);
						if ( (synpred63_Css3()) ) {
							alt458=2;
						}
					}
					else if ( (LA458_0==LPAREN) && (synpred63_Css3())) {
						alt458=2;
					}
					} finally {dbg.exitDecision(458);}

					switch (alt458) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:172: ( pseudo )=> pseudo
							{
							dbg.location(1360,182);
							pushFollow(FOLLOW_pseudo_in_cp_mixin_call9924);
							pseudo();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:191: ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							{
							dbg.location(1360,205);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:205: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:206: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1360,206);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:206: ( ws )?
							int alt455=2;
							try { dbg.enterSubRule(455);
							try { dbg.enterDecision(455, decisionCanBacktrack[455]);

							int LA455_0 = input.LA(1);
							if ( (LA455_0==COMMENT||LA455_0==NL||LA455_0==WS) ) {
								alt455=1;
							}
							} finally {dbg.exitDecision(455);}

							switch (alt455) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:206: ws
									{
									dbg.location(1360,206);
									pushFollow(FOLLOW_ws_in_cp_mixin_call9936);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(455);}
							dbg.location(1360,210);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call9939); if (state.failed) return;dbg.location(1360,217);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:217: ( ws )?
							int alt456=2;
							try { dbg.enterSubRule(456);
							try { dbg.enterDecision(456, decisionCanBacktrack[456]);

							int LA456_0 = input.LA(1);
							if ( (LA456_0==COMMENT||LA456_0==NL||LA456_0==WS) ) {
								alt456=1;
							}
							} finally {dbg.exitDecision(456);}

							switch (alt456) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:217: ws
									{
									dbg.location(1360,217);
									pushFollow(FOLLOW_ws_in_cp_mixin_call9941);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(456);}
							dbg.location(1360,221);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:221: ( cp_mixin_call_args )?
							int alt457=2;
							try { dbg.enterSubRule(457);
							try { dbg.enterDecision(457, decisionCanBacktrack[457]);

							int LA457_0 = input.LA(1);
							if ( ((LA457_0 >= ANGLE && LA457_0 <= AT_SIGN)||(LA457_0 >= BOTTOMCENTER_SYM && LA457_0 <= BOTTOMRIGHT_SYM)||LA457_0==CHARSET_SYM||LA457_0==COUNTER_STYLE_SYM||LA457_0==DIMENSION||LA457_0==EMS||LA457_0==EXS||(LA457_0 >= FONT_FACE_SYM && LA457_0 <= FREQ)||LA457_0==GEN||(LA457_0 >= HASH && LA457_0 <= HASH_SYMBOL)||(LA457_0 >= IDENT && LA457_0 <= IMPORT_SYM)||(LA457_0 >= LBRACE && LA457_0 <= LENGTH)||(LA457_0 >= LESS_AND && LA457_0 <= LESS_JS_STRING)||LA457_0==LPAREN||(LA457_0 >= MEDIA_SYM && LA457_0 <= MOZ_DOCUMENT_SYM)||LA457_0==NAMESPACE_SYM||(LA457_0 >= NOT && LA457_0 <= NUMBER)||(LA457_0 >= PAGE_SYM && LA457_0 <= PERCENTAGE_SYMBOL)||LA457_0==PLUS||(LA457_0 >= REM && LA457_0 <= RIGHTTOP_SYM)||(LA457_0 >= SASS_AT_ROOT && LA457_0 <= SASS_DEBUG)||(LA457_0 >= SASS_EACH && LA457_0 <= SASS_ELSE)||LA457_0==SASS_EXTEND||(LA457_0 >= SASS_FOR && LA457_0 <= SASS_FUNCTION)||(LA457_0 >= SASS_IF && LA457_0 <= SASS_MIXIN)||(LA457_0 >= SASS_RETURN && LA457_0 <= SASS_WHILE)||LA457_0==STRING||(LA457_0 >= TILDE && LA457_0 <= TOPRIGHT_SYM)||(LA457_0 >= URANGE && LA457_0 <= URI)||LA457_0==VARIABLE||LA457_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt457=1;
							}
							} finally {dbg.exitDecision(457);}

							switch (alt457) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:221: cp_mixin_call_args
									{
									dbg.location(1360,221);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call9944);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(457);}
							dbg.location(1360,241);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call9947); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(458);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:9: {...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )?
					{
					dbg.location(1362,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isScssSource()");
					}dbg.location(1362,27);
					match(input,SASS_INCLUDE,FOLLOW_SASS_INCLUDE_in_cp_mixin_call9972); if (state.failed) return;dbg.location(1362,40);
					pushFollow(FOLLOW_ws_in_cp_mixin_call9974);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1362,43);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call9976);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1362,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt462=2;
					try { dbg.enterSubRule(462);
					try { dbg.enterDecision(462, decisionCanBacktrack[462]);

					try {
						isCyclicDecision = true;
						alt462 = dfa462.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(462);}

					switch (alt462) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:58: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1362,58);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:58: ( ws )?
							int alt459=2;
							try { dbg.enterSubRule(459);
							try { dbg.enterDecision(459, decisionCanBacktrack[459]);

							int LA459_0 = input.LA(1);
							if ( (LA459_0==COMMENT||LA459_0==NL||LA459_0==WS) ) {
								alt459=1;
							}
							} finally {dbg.exitDecision(459);}

							switch (alt459) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:58: ws
									{
									dbg.location(1362,58);
									pushFollow(FOLLOW_ws_in_cp_mixin_call9979);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(459);}
							dbg.location(1362,62);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call9982); if (state.failed) return;dbg.location(1362,69);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:69: ( ws )?
							int alt460=2;
							try { dbg.enterSubRule(460);
							try { dbg.enterDecision(460, decisionCanBacktrack[460]);

							int LA460_0 = input.LA(1);
							if ( (LA460_0==COMMENT||LA460_0==NL||LA460_0==WS) ) {
								alt460=1;
							}
							} finally {dbg.exitDecision(460);}

							switch (alt460) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:69: ws
									{
									dbg.location(1362,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_call9984);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(460);}
							dbg.location(1362,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:73: ( cp_mixin_call_args )?
							int alt461=2;
							try { dbg.enterSubRule(461);
							try { dbg.enterDecision(461, decisionCanBacktrack[461]);

							int LA461_0 = input.LA(1);
							if ( ((LA461_0 >= ANGLE && LA461_0 <= AT_SIGN)||(LA461_0 >= BOTTOMCENTER_SYM && LA461_0 <= BOTTOMRIGHT_SYM)||LA461_0==CHARSET_SYM||LA461_0==COUNTER_STYLE_SYM||LA461_0==DIMENSION||LA461_0==EMS||LA461_0==EXS||(LA461_0 >= FONT_FACE_SYM && LA461_0 <= FREQ)||LA461_0==GEN||(LA461_0 >= HASH && LA461_0 <= HASH_SYMBOL)||(LA461_0 >= IDENT && LA461_0 <= IMPORT_SYM)||(LA461_0 >= LBRACE && LA461_0 <= LENGTH)||(LA461_0 >= LESS_AND && LA461_0 <= LESS_JS_STRING)||LA461_0==LPAREN||(LA461_0 >= MEDIA_SYM && LA461_0 <= MOZ_DOCUMENT_SYM)||LA461_0==NAMESPACE_SYM||(LA461_0 >= NOT && LA461_0 <= NUMBER)||(LA461_0 >= PAGE_SYM && LA461_0 <= PERCENTAGE_SYMBOL)||LA461_0==PLUS||(LA461_0 >= REM && LA461_0 <= RIGHTTOP_SYM)||(LA461_0 >= SASS_AT_ROOT && LA461_0 <= SASS_DEBUG)||(LA461_0 >= SASS_EACH && LA461_0 <= SASS_ELSE)||LA461_0==SASS_EXTEND||(LA461_0 >= SASS_FOR && LA461_0 <= SASS_FUNCTION)||(LA461_0 >= SASS_IF && LA461_0 <= SASS_MIXIN)||(LA461_0 >= SASS_RETURN && LA461_0 <= SASS_WHILE)||LA461_0==STRING||(LA461_0 >= TILDE && LA461_0 <= TOPRIGHT_SYM)||(LA461_0 >= URANGE && LA461_0 <= URI)||LA461_0==VARIABLE||LA461_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt461=1;
							}
							} finally {dbg.exitDecision(461);}

							switch (alt461) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:73: cp_mixin_call_args
									{
									dbg.location(1362,73);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call9987);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(461);}
							dbg.location(1362,93);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call9990); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(462);}
					dbg.location(1362,102);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:102: ( ( ws )? cp_mixin_block )?
					int alt464=2;
					try { dbg.enterSubRule(464);
					try { dbg.enterDecision(464, decisionCanBacktrack[464]);

					try {
						isCyclicDecision = true;
						alt464 = dfa464.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(464);}

					switch (alt464) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:103: ( ws )? cp_mixin_block
							{
							dbg.location(1362,103);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:103: ( ws )?
							int alt463=2;
							try { dbg.enterSubRule(463);
							try { dbg.enterDecision(463, decisionCanBacktrack[463]);

							int LA463_0 = input.LA(1);
							if ( (LA463_0==COMMENT||LA463_0==NL||LA463_0==WS) ) {
								alt463=1;
							}
							} finally {dbg.exitDecision(463);}

							switch (alt463) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:103: ws
									{
									dbg.location(1362,103);
									pushFollow(FOLLOW_ws_in_cp_mixin_call9995);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(463);}
							dbg.location(1362,107);
							pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_call9998);
							cp_mixin_block();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(464);}

					}
					break;

			}
			} finally {dbg.exitSubRule(465);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1364, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call"



	// $ANTLR start "cp_mixin_block"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1366:1: cp_mixin_block : LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE ;
	public final void cp_mixin_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1366, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:5: ( LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:5: LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE
			{
			dbg.location(1368,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_cp_mixin_block10027); if (state.failed) return;dbg.location(1368,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:12: ( ws )?
			int alt466=2;
			try { dbg.enterSubRule(466);
			try { dbg.enterDecision(466, decisionCanBacktrack[466]);

			int LA466_0 = input.LA(1);
			if ( (LA466_0==COMMENT||LA466_0==NL||LA466_0==WS) ) {
				alt466=1;
			}
			} finally {dbg.exitDecision(466);}

			switch (alt466) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:12: ws
					{
					dbg.location(1368,12);
					pushFollow(FOLLOW_ws_in_cp_mixin_block10029);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(466);}
			dbg.location(1368,16);
			pushFollow(FOLLOW_syncToFollow_in_cp_mixin_block10032);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1369,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:9: ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )?
			int alt469=3;
			try { dbg.enterSubRule(469);
			try { dbg.enterDecision(469, decisionCanBacktrack[469]);

			int LA469_0 = input.LA(1);
			if ( ((LA469_0 >= AT_IDENT && LA469_0 <= AT_SIGN)||(LA469_0 >= BOTTOMCENTER_SYM && LA469_0 <= BOTTOMRIGHT_SYM)||(LA469_0 >= CHARSET_SYM && LA469_0 <= COLON)||LA469_0==CONTAINER_SYM||LA469_0==COUNTER_STYLE_SYM||(LA469_0 >= DCOLON && LA469_0 <= DOT)||LA469_0==FONT_FACE_SYM||(LA469_0 >= GEN && LA469_0 <= GREATER)||(LA469_0 >= HASH && LA469_0 <= HASH_SYMBOL)||LA469_0==IMPORT_SYM||LA469_0==LAYER_SYM||(LA469_0 >= LBRACKET && LA469_0 <= LEFTTOP_SYM)||LA469_0==LESS_AND||(LA469_0 >= MEDIA_SYM && LA469_0 <= MOZ_DOCUMENT_SYM)||LA469_0==NAMESPACE_SYM||LA469_0==PAGE_SYM||(LA469_0 >= PIPE && LA469_0 <= PLUS)||(LA469_0 >= RIGHTBOTTOM_SYM && LA469_0 <= RIGHTTOP_SYM)||LA469_0==SASS_AT_ROOT||LA469_0==SASS_DEBUG||(LA469_0 >= SASS_EACH && LA469_0 <= SASS_ELSE)||(LA469_0 >= SASS_ERROR && LA469_0 <= SASS_FUNCTION)||(LA469_0 >= SASS_IF && LA469_0 <= SASS_MIXIN)||(LA469_0 >= SASS_RETURN && LA469_0 <= SEMI)||LA469_0==STAR||LA469_0==SUPPORTS_SYM||LA469_0==TILDE||(LA469_0 >= TOPCENTER_SYM && LA469_0 <= TOPRIGHT_SYM)||LA469_0==VARIABLE||LA469_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt469=1;
			}
			else if ( (LA469_0==IDENT) ) {
				int LA469_4 = input.LA(2);
				if ( (true) ) {
					alt469=1;
				}
				else if ( (((evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")||evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")"))&&synpred64_Css3())) ) {
					alt469=2;
				}
			}
			else if ( (LA469_0==SASS_CONTENT) ) {
				int LA469_38 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))||((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt469=1;
				}
				else if ( ((synpred64_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt469=2;
				}
			}
			else if ( (LA469_0==PERCENTAGE) && (synpred64_Css3())) {
				alt469=2;
			}
			else if ( (LA469_0==RBRACE) ) {
				int LA469_44 = input.LA(2);
				if ( (synpred64_Css3()) ) {
					alt469=2;
				}
			}
			} finally {dbg.exitDecision(469);}

			switch (alt469) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:10: declarations
					{
					dbg.location(1369,10);
					pushFollow(FOLLOW_declarations_in_cp_mixin_block10043);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:25: ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )*
					{
					dbg.location(1370,3);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1370:3: ( webkitKeyframesBlock ( ws )? )*
					try { dbg.enterSubRule(468);

					loop468:
					while (true) {
						int alt468=2;
						try { dbg.enterDecision(468, decisionCanBacktrack[468]);

						int LA468_0 = input.LA(1);
						if ( (LA468_0==IDENT||LA468_0==PERCENTAGE||LA468_0==SASS_CONTENT) ) {
							alt468=1;
						}

						} finally {dbg.exitDecision(468);}

						switch (alt468) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1370:5: webkitKeyframesBlock ( ws )?
							{
							dbg.location(1370,5);
							pushFollow(FOLLOW_webkitKeyframesBlock_in_cp_mixin_block10058);
							webkitKeyframesBlock();
							state._fsp--;
							if (state.failed) return;dbg.location(1370,26);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1370:26: ( ws )?
							int alt467=2;
							try { dbg.enterSubRule(467);
							try { dbg.enterDecision(467, decisionCanBacktrack[467]);

							int LA467_0 = input.LA(1);
							if ( (LA467_0==COMMENT||LA467_0==NL||LA467_0==WS) ) {
								alt467=1;
							}
							} finally {dbg.exitDecision(467);}

							switch (alt467) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1370:26: ws
									{
									dbg.location(1370,26);
									pushFollow(FOLLOW_ws_in_cp_mixin_block10060);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(467);}

							}
							break;

						default :
							break loop468;
						}
					}
					} finally {dbg.exitSubRule(468);}

					}
					break;

			}
			} finally {dbg.exitSubRule(469);}
			dbg.location(1371,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_cp_mixin_block10072); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1372, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_block"



	// $ANTLR start "cp_mixin_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1374:1: cp_mixin_name : IDENT ;
	public final void cp_mixin_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1374, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1375:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1376:5: IDENT
			{
			dbg.location(1376,5);
			match(input,IDENT,FOLLOW_IDENT_in_cp_mixin_name10093); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1377, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_name"



	// $ANTLR start "cp_mixin_call_args"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1379:1: cp_mixin_call_args : cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )? ;
	public final void cp_mixin_call_args() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_args");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1379, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1380:5: ( cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:5: cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )?
			{
			dbg.location(1383,5);
			pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10124);
			cp_mixin_call_arg();
			state._fsp--;
			if (state.failed) return;dbg.location(1383,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:23: ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )*
			try { dbg.enterSubRule(471);

			loop471:
			while (true) {
				int alt471=2;
				try { dbg.enterDecision(471, decisionCanBacktrack[471]);

				int LA471_0 = input.LA(1);
				if ( (LA471_0==SEMI) ) {
					int LA471_2 = input.LA(2);
					if ( ((LA471_2 >= ANGLE && LA471_2 <= AT_SIGN)||(LA471_2 >= BOTTOMCENTER_SYM && LA471_2 <= BOTTOMRIGHT_SYM)||LA471_2==CHARSET_SYM||LA471_2==COMMENT||LA471_2==COUNTER_STYLE_SYM||LA471_2==DIMENSION||LA471_2==EMS||LA471_2==EXS||(LA471_2 >= FONT_FACE_SYM && LA471_2 <= FREQ)||LA471_2==GEN||(LA471_2 >= HASH && LA471_2 <= HASH_SYMBOL)||(LA471_2 >= IDENT && LA471_2 <= IMPORT_SYM)||(LA471_2 >= LBRACE && LA471_2 <= LENGTH)||(LA471_2 >= LESS_AND && LA471_2 <= LESS_JS_STRING)||LA471_2==LPAREN||(LA471_2 >= MEDIA_SYM && LA471_2 <= MOZ_DOCUMENT_SYM)||(LA471_2 >= NAMESPACE_SYM && LA471_2 <= NL)||(LA471_2 >= NOT && LA471_2 <= NUMBER)||(LA471_2 >= PAGE_SYM && LA471_2 <= PERCENTAGE_SYMBOL)||LA471_2==PLUS||(LA471_2 >= REM && LA471_2 <= RIGHTTOP_SYM)||(LA471_2 >= SASS_AT_ROOT && LA471_2 <= SASS_DEBUG)||(LA471_2 >= SASS_EACH && LA471_2 <= SASS_ELSE)||LA471_2==SASS_EXTEND||(LA471_2 >= SASS_FOR && LA471_2 <= SASS_FUNCTION)||(LA471_2 >= SASS_IF && LA471_2 <= SASS_MIXIN)||(LA471_2 >= SASS_RETURN && LA471_2 <= SASS_WHILE)||LA471_2==STRING||(LA471_2 >= TILDE && LA471_2 <= TOPRIGHT_SYM)||(LA471_2 >= URANGE && LA471_2 <= URI)||LA471_2==VARIABLE||(LA471_2 >= WEBKIT_KEYFRAMES_SYM && LA471_2 <= WS)) ) {
						alt471=1;
					}

				}
				else if ( (LA471_0==COMMA) ) {
					alt471=1;
				}

				} finally {dbg.exitDecision(471);}

				switch (alt471) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:25: ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg
					{
					dbg.location(1383,25);
					if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1383,40);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:40: ( ws )?
					int alt470=2;
					try { dbg.enterSubRule(470);
					try { dbg.enterDecision(470, decisionCanBacktrack[470]);

					int LA470_0 = input.LA(1);
					if ( (LA470_0==COMMENT||LA470_0==NL||LA470_0==WS) ) {
						alt470=1;
					}
					} finally {dbg.exitDecision(470);}

					switch (alt470) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:40: ws
							{
							dbg.location(1383,40);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args10136);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(470);}
					dbg.location(1383,44);
					pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10139);
					cp_mixin_call_arg();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop471;
				}
			}
			} finally {dbg.exitSubRule(471);}
			dbg.location(1383,65);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:65: ( CP_DOTS ( ws )? )?
			int alt473=2;
			try { dbg.enterSubRule(473);
			try { dbg.enterDecision(473, decisionCanBacktrack[473]);

			int LA473_0 = input.LA(1);
			if ( (LA473_0==CP_DOTS) ) {
				alt473=1;
			}
			} finally {dbg.exitDecision(473);}

			switch (alt473) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:66: CP_DOTS ( ws )?
					{
					dbg.location(1383,66);
					match(input,CP_DOTS,FOLLOW_CP_DOTS_in_cp_mixin_call_args10145); if (state.failed) return;dbg.location(1383,74);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:74: ( ws )?
					int alt472=2;
					try { dbg.enterSubRule(472);
					try { dbg.enterDecision(472, decisionCanBacktrack[472]);

					int LA472_0 = input.LA(1);
					if ( (LA472_0==COMMENT||LA472_0==NL||LA472_0==WS) ) {
						alt472=1;
					}
					} finally {dbg.exitDecision(472);}

					switch (alt472) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:74: ws
							{
							dbg.location(1383,74);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args10147);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(472);}

					}
					break;

			}
			} finally {dbg.exitSubRule(473);}
			dbg.location(1383,80);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:80: ( SEMI )?
			int alt474=2;
			try { dbg.enterSubRule(474);
			try { dbg.enterDecision(474, decisionCanBacktrack[474]);

			int LA474_0 = input.LA(1);
			if ( (LA474_0==SEMI) ) {
				alt474=1;
			}
			} finally {dbg.exitDecision(474);}

			switch (alt474) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:80: SEMI
					{
					dbg.location(1383,80);
					match(input,SEMI,FOLLOW_SEMI_in_cp_mixin_call_args10152); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(474);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1384, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_args");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_args"



	// $ANTLR start "cp_mixin_call_arg"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1386:1: cp_mixin_call_arg : ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? ;
	public final void cp_mixin_call_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1386, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1387:5: ( ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )?
			{
			dbg.location(1388,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )
			int alt477=2;
			try { dbg.enterSubRule(477);
			try { dbg.enterDecision(477, decisionCanBacktrack[477]);

			try {
				isCyclicDecision = true;
				alt477 = dfa477.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(477);}

			switch (alt477) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1389:9: cp_variable ( ws )? COLON ( ws )? cp_expression
					{
					dbg.location(1389,9);
					pushFollow(FOLLOW_cp_variable_in_cp_mixin_call_arg10184);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1389,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1389:21: ( ws )?
					int alt475=2;
					try { dbg.enterSubRule(475);
					try { dbg.enterDecision(475, decisionCanBacktrack[475]);

					int LA475_0 = input.LA(1);
					if ( (LA475_0==COMMENT||LA475_0==NL||LA475_0==WS) ) {
						alt475=1;
					}
					} finally {dbg.exitDecision(475);}

					switch (alt475) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1389:21: ws
							{
							dbg.location(1389,21);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg10186);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(475);}
					dbg.location(1389,25);
					match(input,COLON,FOLLOW_COLON_in_cp_mixin_call_arg10189); if (state.failed) return;dbg.location(1389,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1389:31: ( ws )?
					int alt476=2;
					try { dbg.enterSubRule(476);
					try { dbg.enterDecision(476, decisionCanBacktrack[476]);

					int LA476_0 = input.LA(1);
					if ( (LA476_0==COMMENT||LA476_0==NL||LA476_0==WS) ) {
						alt476=1;
					}
					} finally {dbg.exitDecision(476);}

					switch (alt476) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1389:31: ws
							{
							dbg.location(1389,31);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg10191);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(476);}
					dbg.location(1389,35);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg10194);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1390:11: cp_expression
					{
					dbg.location(1390,11);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg10206);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(477);}
			dbg.location(1391,7);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1391:7: ( ws )?
			int alt478=2;
			try { dbg.enterSubRule(478);
			try { dbg.enterDecision(478, decisionCanBacktrack[478]);

			int LA478_0 = input.LA(1);
			if ( (LA478_0==COMMENT||LA478_0==NL||LA478_0==WS) ) {
				alt478=1;
			}
			} finally {dbg.exitDecision(478);}

			switch (alt478) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1391:7: ws
					{
					dbg.location(1391,7);
					pushFollow(FOLLOW_ws_in_cp_mixin_call_arg10214);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(478);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1392, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_arg"



	// $ANTLR start "cp_args_list"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1395:1: cp_args_list : ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? );
	public final void cp_args_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_args_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1395, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1396:5: ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? )
			int alt486=2;
			try { dbg.enterDecision(486, decisionCanBacktrack[486]);

			int LA486_0 = input.LA(1);
			if ( (LA486_0==AT_IDENT||(LA486_0 >= BOTTOMCENTER_SYM && LA486_0 <= BOTTOMRIGHT_SYM)||LA486_0==CHARSET_SYM||LA486_0==COUNTER_STYLE_SYM||LA486_0==FONT_FACE_SYM||LA486_0==IDENT||LA486_0==IMPORT_SYM||(LA486_0 >= LEFTBOTTOM_SYM && LA486_0 <= LEFTTOP_SYM)||LA486_0==MEDIA_SYM||LA486_0==MOZ_DOCUMENT_SYM||LA486_0==NAMESPACE_SYM||LA486_0==PAGE_SYM||(LA486_0 >= RIGHTBOTTOM_SYM && LA486_0 <= RIGHTTOP_SYM)||(LA486_0 >= SASS_AT_ROOT && LA486_0 <= SASS_DEBUG)||(LA486_0 >= SASS_EACH && LA486_0 <= SASS_ELSE)||LA486_0==SASS_EXTEND||(LA486_0 >= SASS_FOR && LA486_0 <= SASS_FUNCTION)||(LA486_0 >= SASS_IF && LA486_0 <= SASS_MIXIN)||(LA486_0 >= SASS_RETURN && LA486_0 <= SASS_WHILE)||(LA486_0 >= TOPCENTER_SYM && LA486_0 <= TOPRIGHT_SYM)||LA486_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt486=1;
			}
			else if ( (LA486_0==CP_DOTS||LA486_0==LESS_REST) ) {
				alt486=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 486, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(486);}

			switch (alt486) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					{
					dbg.location(1403,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:7: cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					{
					dbg.location(1403,7);
					pushFollow(FOLLOW_cp_arg_in_cp_args_list10261);
					cp_arg();
					state._fsp--;
					if (state.failed) return;dbg.location(1403,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*
					try { dbg.enterSubRule(480);

					loop480:
					while (true) {
						int alt480=2;
						try { dbg.enterDecision(480, decisionCanBacktrack[480]);

						try {
							isCyclicDecision = true;
							alt480 = dfa480.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(480);}

						switch (alt480) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:16: ( COMMA | SEMI ) ( ws )? cp_arg
							{
							dbg.location(1403,16);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1403,33);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:33: ( ws )?
							int alt479=2;
							try { dbg.enterSubRule(479);
							try { dbg.enterDecision(479, decisionCanBacktrack[479]);

							int LA479_0 = input.LA(1);
							if ( (LA479_0==COMMENT||LA479_0==NL||LA479_0==WS) ) {
								alt479=1;
							}
							} finally {dbg.exitDecision(479);}

							switch (alt479) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:33: ws
									{
									dbg.location(1403,33);
									pushFollow(FOLLOW_ws_in_cp_args_list10275);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(479);}
							dbg.location(1403,37);
							pushFollow(FOLLOW_cp_arg_in_cp_args_list10278);
							cp_arg();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop480;
						}
					}
					} finally {dbg.exitSubRule(480);}
					dbg.location(1403,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:47: ( ( COMMA | SEMI ) ( ws )? )?
					int alt482=2;
					try { dbg.enterSubRule(482);
					try { dbg.enterDecision(482, decisionCanBacktrack[482]);

					int LA482_0 = input.LA(1);
					if ( (LA482_0==COMMA||LA482_0==SEMI) ) {
						alt482=1;
					}
					} finally {dbg.exitDecision(482);}

					switch (alt482) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:49: ( COMMA | SEMI ) ( ws )?
							{
							dbg.location(1403,49);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1403,64);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:64: ( ws )?
							int alt481=2;
							try { dbg.enterSubRule(481);
							try { dbg.enterDecision(481, decisionCanBacktrack[481]);

							int LA481_0 = input.LA(1);
							if ( (LA481_0==COMMENT||LA481_0==NL||LA481_0==WS) ) {
								alt481=1;
							}
							} finally {dbg.exitDecision(481);}

							switch (alt481) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:64: ws
									{
									dbg.location(1403,64);
									pushFollow(FOLLOW_ws_in_cp_args_list10293);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(481);}

							}
							break;

					}
					} finally {dbg.exitSubRule(482);}
					dbg.location(1403,71);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:71: ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					int alt484=2;
					try { dbg.enterSubRule(484);
					try { dbg.enterDecision(484, decisionCanBacktrack[484]);

					int LA484_0 = input.LA(1);
					if ( (LA484_0==CP_DOTS||LA484_0==LESS_REST) ) {
						alt484=1;
					}
					} finally {dbg.exitDecision(484);}

					switch (alt484) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:73: ( CP_DOTS | LESS_REST ) ( ws )?
							{
							dbg.location(1403,73);
							if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1403,95);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:95: ( ws )?
							int alt483=2;
							try { dbg.enterSubRule(483);
							try { dbg.enterDecision(483, decisionCanBacktrack[483]);

							int LA483_0 = input.LA(1);
							if ( (LA483_0==COMMENT||LA483_0==NL||LA483_0==WS) ) {
								alt483=1;
							}
							} finally {dbg.exitDecision(483);}

							switch (alt483) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1403:95: ws
									{
									dbg.location(1403,95);
									pushFollow(FOLLOW_ws_in_cp_args_list10309);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(483);}

							}
							break;

					}
					} finally {dbg.exitSubRule(484);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1405:5: ( CP_DOTS | LESS_REST ) ( ws )?
					{
					dbg.location(1405,5);
					if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1405,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1405:27: ( ws )?
					int alt485=2;
					try { dbg.enterSubRule(485);
					try { dbg.enterDecision(485, decisionCanBacktrack[485]);

					int LA485_0 = input.LA(1);
					if ( (LA485_0==COMMENT||LA485_0==NL||LA485_0==WS) ) {
						alt485=1;
					}
					} finally {dbg.exitDecision(485);}

					switch (alt485) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1405:27: ws
							{
							dbg.location(1405,27);
							pushFollow(FOLLOW_ws_in_cp_args_list10334);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(485);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1406, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_args_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_args_list"



	// $ANTLR start "cp_arg"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1409:1: cp_arg : ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT );
	public final void cp_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1409, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1410:5: ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT )
			int alt491=2;
			try { dbg.enterDecision(491, decisionCanBacktrack[491]);

			int LA491_0 = input.LA(1);
			if ( (LA491_0==AT_IDENT||(LA491_0 >= BOTTOMCENTER_SYM && LA491_0 <= BOTTOMRIGHT_SYM)||LA491_0==CHARSET_SYM||LA491_0==COUNTER_STYLE_SYM||LA491_0==FONT_FACE_SYM||LA491_0==IMPORT_SYM||(LA491_0 >= LEFTBOTTOM_SYM && LA491_0 <= LEFTTOP_SYM)||LA491_0==MEDIA_SYM||LA491_0==MOZ_DOCUMENT_SYM||LA491_0==NAMESPACE_SYM||LA491_0==PAGE_SYM||(LA491_0 >= RIGHTBOTTOM_SYM && LA491_0 <= RIGHTTOP_SYM)||(LA491_0 >= SASS_AT_ROOT && LA491_0 <= SASS_DEBUG)||(LA491_0 >= SASS_EACH && LA491_0 <= SASS_ELSE)||LA491_0==SASS_EXTEND||(LA491_0 >= SASS_FOR && LA491_0 <= SASS_FUNCTION)||(LA491_0 >= SASS_IF && LA491_0 <= SASS_MIXIN)||(LA491_0 >= SASS_RETURN && LA491_0 <= SASS_WHILE)||(LA491_0 >= TOPCENTER_SYM && LA491_0 <= TOPRIGHT_SYM)||LA491_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt491=1;
			}
			else if ( (LA491_0==IDENT) ) {
				int LA491_2 = input.LA(2);
				if ( (LA491_2==DOT) ) {
					alt491=1;
				}
				else if ( (LA491_2==COMMA||LA491_2==CP_DOTS||LA491_2==LESS_REST||LA491_2==RPAREN||LA491_2==SEMI) ) {
					alt491=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 491, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 491, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(491);}

			switch (alt491) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1411:5: cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )?
					{
					dbg.location(1411,5);
					pushFollow(FOLLOW_cp_variable_in_cp_arg10357);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1411,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1411:17: ( ws )?
					int alt487=2;
					try { dbg.enterSubRule(487);
					try { dbg.enterDecision(487, decisionCanBacktrack[487]);

					int LA487_0 = input.LA(1);
					if ( (LA487_0==COMMENT||LA487_0==NL||LA487_0==WS) ) {
						alt487=1;
					}
					} finally {dbg.exitDecision(487);}

					switch (alt487) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1411:17: ws
							{
							dbg.location(1411,17);
							pushFollow(FOLLOW_ws_in_cp_arg10359);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(487);}
					dbg.location(1411,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1411:21: ( COLON ( ws )? cp_expression ( ws )? )?
					int alt490=2;
					try { dbg.enterSubRule(490);
					try { dbg.enterDecision(490, decisionCanBacktrack[490]);

					int LA490_0 = input.LA(1);
					if ( (LA490_0==COLON) ) {
						alt490=1;
					}
					} finally {dbg.exitDecision(490);}

					switch (alt490) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1411:23: COLON ( ws )? cp_expression ( ws )?
							{
							dbg.location(1411,23);
							match(input,COLON,FOLLOW_COLON_in_cp_arg10364); if (state.failed) return;dbg.location(1411,29);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1411:29: ( ws )?
							int alt488=2;
							try { dbg.enterSubRule(488);
							try { dbg.enterDecision(488, decisionCanBacktrack[488]);

							int LA488_0 = input.LA(1);
							if ( (LA488_0==COMMENT||LA488_0==NL||LA488_0==WS) ) {
								alt488=1;
							}
							} finally {dbg.exitDecision(488);}

							switch (alt488) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1411:29: ws
									{
									dbg.location(1411,29);
									pushFollow(FOLLOW_ws_in_cp_arg10366);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(488);}
							dbg.location(1411,33);
							pushFollow(FOLLOW_cp_expression_in_cp_arg10369);
							cp_expression();
							state._fsp--;
							if (state.failed) return;dbg.location(1411,47);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1411:47: ( ws )?
							int alt489=2;
							try { dbg.enterSubRule(489);
							try { dbg.enterDecision(489, decisionCanBacktrack[489]);

							int LA489_0 = input.LA(1);
							if ( (LA489_0==COMMENT||LA489_0==NL||LA489_0==WS) ) {
								alt489=1;
							}
							} finally {dbg.exitDecision(489);}

							switch (alt489) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1411:47: ws
									{
									dbg.location(1411,47);
									pushFollow(FOLLOW_ws_in_cp_arg10371);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(489);}

							}
							break;

					}
					} finally {dbg.exitSubRule(490);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1412:7: {...}? IDENT
					{
					dbg.location(1412,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_arg", "isLessSource()");
					}dbg.location(1412,25);
					match(input,IDENT,FOLLOW_IDENT_in_cp_arg10384); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1413, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_arg"



	// $ANTLR start "less_mixin_guarded"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1417:1: less_mixin_guarded : less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* ;
	public final void less_mixin_guarded() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_mixin_guarded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1417, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1418:5: ( less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:5: less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			{
			dbg.location(1419,5);
			pushFollow(FOLLOW_less_when_in_less_mixin_guarded10407);
			less_when();
			state._fsp--;
			if (state.failed) return;dbg.location(1419,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:15: ( ws )?
			int alt492=2;
			try { dbg.enterSubRule(492);
			try { dbg.enterDecision(492, decisionCanBacktrack[492]);

			int LA492_0 = input.LA(1);
			if ( (LA492_0==COMMENT||LA492_0==NL||LA492_0==WS) ) {
				alt492=1;
			}
			} finally {dbg.exitDecision(492);}

			switch (alt492) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:15: ws
					{
					dbg.location(1419,15);
					pushFollow(FOLLOW_ws_in_less_mixin_guarded10409);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(492);}
			dbg.location(1419,19);
			pushFollow(FOLLOW_less_condition_in_less_mixin_guarded10412);
			less_condition();
			state._fsp--;
			if (state.failed) return;dbg.location(1419,34);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			try { dbg.enterSubRule(496);

			loop496:
			while (true) {
				int alt496=2;
				try { dbg.enterDecision(496, decisionCanBacktrack[496]);

				try {
					isCyclicDecision = true;
					alt496 = dfa496.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(496);}

				switch (alt496) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:35: ( ws )? ( COMMA | key_and ) ( ws )? less_condition
					{
					dbg.location(1419,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:35: ( ws )?
					int alt493=2;
					try { dbg.enterSubRule(493);
					try { dbg.enterDecision(493, decisionCanBacktrack[493]);

					int LA493_0 = input.LA(1);
					if ( (LA493_0==COMMENT||LA493_0==NL||LA493_0==WS) ) {
						alt493=1;
					}
					} finally {dbg.exitDecision(493);}

					switch (alt493) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:35: ws
							{
							dbg.location(1419,35);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded10415);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(493);}
					dbg.location(1419,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:39: ( COMMA | key_and )
					int alt494=2;
					try { dbg.enterSubRule(494);
					try { dbg.enterDecision(494, decisionCanBacktrack[494]);

					int LA494_0 = input.LA(1);
					if ( (LA494_0==COMMA) ) {
						alt494=1;
					}
					else if ( (LA494_0==IDENT) ) {
						alt494=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 494, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(494);}

					switch (alt494) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:40: COMMA
							{
							dbg.location(1419,40);
							match(input,COMMA,FOLLOW_COMMA_in_less_mixin_guarded10419); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:48: key_and
							{
							dbg.location(1419,48);
							pushFollow(FOLLOW_key_and_in_less_mixin_guarded10423);
							key_and();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(494);}
					dbg.location(1419,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:57: ( ws )?
					int alt495=2;
					try { dbg.enterSubRule(495);
					try { dbg.enterDecision(495, decisionCanBacktrack[495]);

					int LA495_0 = input.LA(1);
					if ( (LA495_0==COMMENT||LA495_0==NL||LA495_0==WS) ) {
						alt495=1;
					}
					} finally {dbg.exitDecision(495);}

					switch (alt495) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1419:57: ws
							{
							dbg.location(1419,57);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded10426);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(495);}
					dbg.location(1419,61);
					pushFollow(FOLLOW_less_condition_in_less_mixin_guarded10429);
					less_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop496;
				}
			}
			} finally {dbg.exitSubRule(496);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1420, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_mixin_guarded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_mixin_guarded"



	// $ANTLR start "less_condition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:1: less_condition : ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN ;
	public final void less_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1424, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1425:5: ( ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1426:5: ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN
			{
			dbg.location(1426,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1426:5: ( NOT ( ws )? )?
			int alt498=2;
			try { dbg.enterSubRule(498);
			try { dbg.enterDecision(498, decisionCanBacktrack[498]);

			int LA498_0 = input.LA(1);
			if ( (LA498_0==NOT) ) {
				alt498=1;
			}
			} finally {dbg.exitDecision(498);}

			switch (alt498) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1426:6: NOT ( ws )?
					{
					dbg.location(1426,6);
					match(input,NOT,FOLLOW_NOT_in_less_condition10455); if (state.failed) return;dbg.location(1426,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1426:10: ( ws )?
					int alt497=2;
					try { dbg.enterSubRule(497);
					try { dbg.enterDecision(497, decisionCanBacktrack[497]);

					int LA497_0 = input.LA(1);
					if ( (LA497_0==COMMENT||LA497_0==NL||LA497_0==WS) ) {
						alt497=1;
					}
					} finally {dbg.exitDecision(497);}

					switch (alt497) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1426:10: ws
							{
							dbg.location(1426,10);
							pushFollow(FOLLOW_ws_in_less_condition10457);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(497);}

					}
					break;

			}
			} finally {dbg.exitSubRule(498);}
			dbg.location(1427,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_condition10466); if (state.failed) return;dbg.location(1427,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1427:12: ( ws )?
			int alt499=2;
			try { dbg.enterSubRule(499);
			try { dbg.enterDecision(499, decisionCanBacktrack[499]);

			int LA499_0 = input.LA(1);
			if ( (LA499_0==COMMENT||LA499_0==NL||LA499_0==WS) ) {
				alt499=1;
			}
			} finally {dbg.exitDecision(499);}

			switch (alt499) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1427:12: ws
					{
					dbg.location(1427,12);
					pushFollow(FOLLOW_ws_in_less_condition10468);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(499);}
			dbg.location(1428,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1428:9: ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:14: ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )?
			{
			dbg.location(1429,14);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:14: ( cp_variable | less_function_in_condition )
			int alt500=2;
			try { dbg.enterSubRule(500);
			try { dbg.enterDecision(500, decisionCanBacktrack[500]);

			int LA500_0 = input.LA(1);
			if ( (LA500_0==AT_IDENT||(LA500_0 >= BOTTOMCENTER_SYM && LA500_0 <= BOTTOMRIGHT_SYM)||LA500_0==CHARSET_SYM||LA500_0==COUNTER_STYLE_SYM||LA500_0==FONT_FACE_SYM||LA500_0==IMPORT_SYM||(LA500_0 >= LEFTBOTTOM_SYM && LA500_0 <= LEFTTOP_SYM)||LA500_0==MEDIA_SYM||LA500_0==MOZ_DOCUMENT_SYM||LA500_0==NAMESPACE_SYM||LA500_0==PAGE_SYM||(LA500_0 >= RIGHTBOTTOM_SYM && LA500_0 <= RIGHTTOP_SYM)||(LA500_0 >= SASS_AT_ROOT && LA500_0 <= SASS_DEBUG)||(LA500_0 >= SASS_EACH && LA500_0 <= SASS_ELSE)||LA500_0==SASS_EXTEND||(LA500_0 >= SASS_FOR && LA500_0 <= SASS_FUNCTION)||(LA500_0 >= SASS_IF && LA500_0 <= SASS_MIXIN)||(LA500_0 >= SASS_RETURN && LA500_0 <= SASS_WHILE)||(LA500_0 >= TOPCENTER_SYM && LA500_0 <= TOPRIGHT_SYM)||LA500_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt500=1;
			}
			else if ( (LA500_0==IDENT) ) {
				int LA500_2 = input.LA(2);
				if ( (LA500_2==DOT) ) {
					alt500=1;
				}
				else if ( (LA500_2==COMMENT||LA500_2==LPAREN||LA500_2==NL||LA500_2==WS) ) {
					alt500=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 500, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 500, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(500);}

			switch (alt500) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:15: cp_variable
					{
					dbg.location(1429,15);
					pushFollow(FOLLOW_cp_variable_in_less_condition10495);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:29: less_function_in_condition
					{
					dbg.location(1429,29);
					pushFollow(FOLLOW_less_function_in_condition_in_less_condition10499);
					less_function_in_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(500);}
			dbg.location(1429,57);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:57: ( ws )?
			int alt501=2;
			try { dbg.enterSubRule(501);
			try { dbg.enterDecision(501, decisionCanBacktrack[501]);

			int LA501_0 = input.LA(1);
			if ( (LA501_0==COMMENT||LA501_0==NL||LA501_0==WS) ) {
				alt501=1;
			}
			} finally {dbg.exitDecision(501);}

			switch (alt501) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:57: ws
					{
					dbg.location(1429,57);
					pushFollow(FOLLOW_ws_in_less_condition10502);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(501);}
			dbg.location(1429,61);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:61: ( less_condition_operator ( ws )? cp_math_expression )?
			int alt503=2;
			try { dbg.enterSubRule(503);
			try { dbg.enterDecision(503, decisionCanBacktrack[503]);

			int LA503_0 = input.LA(1);
			if ( ((LA503_0 >= GREATER && LA503_0 <= GREATER_OR_EQ)||LA503_0==LESS||LA503_0==LESS_OR_EQ||LA503_0==OPEQ) ) {
				alt503=1;
			}
			} finally {dbg.exitDecision(503);}

			switch (alt503) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:62: less_condition_operator ( ws )? cp_math_expression
					{
					dbg.location(1429,62);
					pushFollow(FOLLOW_less_condition_operator_in_less_condition10506);
					less_condition_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1429,86);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:86: ( ws )?
					int alt502=2;
					try { dbg.enterSubRule(502);
					try { dbg.enterDecision(502, decisionCanBacktrack[502]);

					int LA502_0 = input.LA(1);
					if ( (LA502_0==COMMENT||LA502_0==NL||LA502_0==WS) ) {
						alt502=1;
					}
					} finally {dbg.exitDecision(502);}

					switch (alt502) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:86: ws
							{
							dbg.location(1429,86);
							pushFollow(FOLLOW_ws_in_less_condition10508);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(502);}
					dbg.location(1429,90);
					pushFollow(FOLLOW_cp_math_expression_in_less_condition10511);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(503);}

			}
			dbg.location(1431,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_condition10529); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1432, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition"



	// $ANTLR start "less_function_in_condition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1435:1: less_function_in_condition : less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN ;
	public final void less_function_in_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_function_in_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1435, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1436:5: ( less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1437:5: less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN
			{
			dbg.location(1437,5);
			pushFollow(FOLLOW_less_fn_name_in_less_function_in_condition10551);
			less_fn_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1437,18);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1437:18: ( ws )?
			int alt504=2;
			try { dbg.enterSubRule(504);
			try { dbg.enterDecision(504, decisionCanBacktrack[504]);

			int LA504_0 = input.LA(1);
			if ( (LA504_0==COMMENT||LA504_0==NL||LA504_0==WS) ) {
				alt504=1;
			}
			} finally {dbg.exitDecision(504);}

			switch (alt504) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1437:18: ws
					{
					dbg.location(1437,18);
					pushFollow(FOLLOW_ws_in_less_function_in_condition10553);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(504);}
			dbg.location(1437,22);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_function_in_condition10556); if (state.failed) return;dbg.location(1437,29);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1437:29: ( ws )?
			int alt505=2;
			try { dbg.enterSubRule(505);
			try { dbg.enterDecision(505, decisionCanBacktrack[505]);

			int LA505_0 = input.LA(1);
			if ( (LA505_0==COMMENT||LA505_0==NL||LA505_0==WS) ) {
				alt505=1;
			}
			} finally {dbg.exitDecision(505);}

			switch (alt505) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1437:29: ws
					{
					dbg.location(1437,29);
					pushFollow(FOLLOW_ws_in_less_function_in_condition10558);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(505);}
			dbg.location(1437,33);
			pushFollow(FOLLOW_cp_variable_in_less_function_in_condition10561);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1437,45);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1437:45: ( ws )?
			int alt506=2;
			try { dbg.enterSubRule(506);
			try { dbg.enterDecision(506, decisionCanBacktrack[506]);

			int LA506_0 = input.LA(1);
			if ( (LA506_0==COMMENT||LA506_0==NL||LA506_0==WS) ) {
				alt506=1;
			}
			} finally {dbg.exitDecision(506);}

			switch (alt506) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1437:45: ws
					{
					dbg.location(1437,45);
					pushFollow(FOLLOW_ws_in_less_function_in_condition10563);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(506);}
			dbg.location(1437,49);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_function_in_condition10566); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1438, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_function_in_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_function_in_condition"



	// $ANTLR start "less_fn_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1441:1: less_fn_name : IDENT ;
	public final void less_fn_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_fn_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1441, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1442:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1443:5: IDENT
			{
			dbg.location(1443,5);
			match(input,IDENT,FOLLOW_IDENT_in_less_fn_name10588); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1444, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_fn_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_fn_name"



	// $ANTLR start "less_condition_operator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1446:1: less_condition_operator : ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ );
	public final void less_condition_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1446, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1447:5: ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1447,5);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1449, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition_operator"



	// $ANTLR start "less_selector_interpolation_exp"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1451:1: less_selector_interpolation_exp : ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void less_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1451, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1451:33: ( ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1452:5: ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1452,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1452:5: ( IDENT | MINUS )?
			int alt507=2;
			try { dbg.enterSubRule(507);
			try { dbg.enterDecision(507, decisionCanBacktrack[507]);

			int LA507_0 = input.LA(1);
			if ( (LA507_0==IDENT||LA507_0==MINUS) ) {
				alt507=1;
			}
			} finally {dbg.exitDecision(507);}

			switch (alt507) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1452,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(507);}
			dbg.location(1452,22);
			pushFollow(FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp10651);
			less_selector_interpolation();
			state._fsp--;
			if (state.failed) return;dbg.location(1452,50);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1452:50: ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt509=3;
			try { dbg.enterSubRule(509);
			try { dbg.enterDecision(509, decisionCanBacktrack[509]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA509_1 = input.LA(2);
					if ( (LA509_1==AT_SIGN) ) {
						alt509=1;
					}
					else if ( ((LA509_1 >= COLON && LA509_1 <= COMMENT)||(LA509_1 >= DCOLON && LA509_1 <= DOT)||LA509_1==GREATER||(LA509_1 >= HASH && LA509_1 <= HASH_SYMBOL)||LA509_1==IDENT||(LA509_1 >= LBRACE && LA509_1 <= LBRACKET)||LA509_1==LENGTH||LA509_1==LESS_AND||LA509_1==MINUS||LA509_1==NL||LA509_1==PLUS||LA509_1==RBRACE||LA509_1==RPAREN||LA509_1==SASS_EXTEND_ONLY_SELECTOR||LA509_1==SEMI||LA509_1==TILDE||LA509_1==WS) ) {
						alt509=2;
					}
					}
					break;
				case AT_SIGN:
					{
					alt509=1;
					}
					break;
				case DIMENSION:
					{
					int LA509_3 = input.LA(2);
					if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
						alt509=2;
					}
					}
					break;
				case LENGTH:
					{
					alt509=2;
					}
					break;
			}
			} finally {dbg.exitDecision(509);}

			switch (alt509) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1452:51: less_selector_interpolation_exp
					{
					dbg.location(1452,51);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp10654);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1452:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1452,85);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1452:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt508=0;
					try { dbg.enterSubRule(508);

					loop508:
					while (true) {
						int alt508=2;
						try { dbg.enterDecision(508, decisionCanBacktrack[508]);

						int LA508_0 = input.LA(1);
						if ( (LA508_0==DIMENSION) ) {
							int LA508_2 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt508=1;
							}

						}
						else if ( (LA508_0==IDENT||LA508_0==LENGTH||LA508_0==MINUS) ) {
							alt508=1;
						}

						} finally {dbg.exitDecision(508);}

						switch (alt508) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1452,85);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt508 >= 1 ) break loop508;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(508, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt508++;
					}
					} finally {dbg.exitSubRule(508);}

					}
					break;

			}
			} finally {dbg.exitSubRule(509);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1453, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation_exp"



	// $ANTLR start "less_selector_interpolation"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1455:1: less_selector_interpolation : AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE ;
	public final void less_selector_interpolation() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1455, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1456:5: ( AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:5: AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE
			{
			dbg.location(1457,5);
			match(input,AT_SIGN,FOLLOW_AT_SIGN_in_less_selector_interpolation10697); if (state.failed) return;dbg.location(1457,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_less_selector_interpolation10699); if (state.failed) return;dbg.location(1457,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:20: ( ws )?
			int alt510=2;
			try { dbg.enterSubRule(510);
			try { dbg.enterDecision(510, decisionCanBacktrack[510]);

			int LA510_0 = input.LA(1);
			if ( (LA510_0==COMMENT||LA510_0==NL||LA510_0==WS) ) {
				alt510=1;
			}
			} finally {dbg.exitDecision(510);}

			switch (alt510) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:20: ws
					{
					dbg.location(1457,20);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation10701);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(510);}
			dbg.location(1457,24);
			match(input,IDENT,FOLLOW_IDENT_in_less_selector_interpolation10704); if (state.failed) return;dbg.location(1457,30);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:30: ( ws )?
			int alt511=2;
			try { dbg.enterSubRule(511);
			try { dbg.enterDecision(511, decisionCanBacktrack[511]);

			int LA511_0 = input.LA(1);
			if ( (LA511_0==COMMENT||LA511_0==NL||LA511_0==WS) ) {
				alt511=1;
			}
			} finally {dbg.exitDecision(511);}

			switch (alt511) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:30: ws
					{
					dbg.location(1457,30);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation10706);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(511);}
			dbg.location(1457,34);
			match(input,RBRACE,FOLLOW_RBRACE_in_less_selector_interpolation10709); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1458, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation"



	// $ANTLR start "sass_selector_interpolation_exp"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1461:1: sass_selector_interpolation_exp : ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void sass_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1461, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1461:33: ( ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:5: ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1462,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:5: ( IDENT | MINUS )?
			int alt512=2;
			try { dbg.enterSubRule(512);
			try { dbg.enterDecision(512, decisionCanBacktrack[512]);

			int LA512_0 = input.LA(1);
			if ( (LA512_0==IDENT||LA512_0==MINUS) ) {
				alt512=1;
			}
			} finally {dbg.exitDecision(512);}

			switch (alt512) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1462,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(512);}
			dbg.location(1462,22);
			pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp10736);
			sass_interpolation_expression_var();
			state._fsp--;
			if (state.failed) return;dbg.location(1462,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:56: ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt514=3;
			try { dbg.enterSubRule(514);
			try { dbg.enterDecision(514, decisionCanBacktrack[514]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA514_1 = input.LA(2);
					if ( (LA514_1==HASH_SYMBOL) ) {
						int LA514_6 = input.LA(3);
						if ( (LA514_6==LBRACE) ) {
							alt514=1;
						}
						else if ( (LA514_6==AT_SIGN||LA514_6==IDENT||LA514_6==MINUS||LA514_6==NAME) ) {
							alt514=2;
						}
					}
					else if ( ((LA514_1 >= COLON && LA514_1 <= COMMENT)||(LA514_1 >= DCOLON && LA514_1 <= DOT)||LA514_1==GREATER||LA514_1==HASH||LA514_1==IDENT||(LA514_1 >= LBRACE && LA514_1 <= LBRACKET)||LA514_1==LENGTH||LA514_1==LESS_AND||LA514_1==MINUS||LA514_1==NL||LA514_1==PLUS||LA514_1==RBRACE||LA514_1==RPAREN||LA514_1==SASS_EXTEND_ONLY_SELECTOR||LA514_1==SEMI||LA514_1==TILDE||LA514_1==WS) ) {
						alt514=2;
					}
					}
					break;
				case HASH_SYMBOL:
					{
					int LA514_2 = input.LA(2);
					if ( (LA514_2==LBRACE) ) {
						alt514=1;
					}
					}
					break;
				case DIMENSION:
					{
					int LA514_3 = input.LA(2);
					if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
						alt514=2;
					}
					}
					break;
				case LENGTH:
					{
					alt514=2;
					}
					break;
			}
			} finally {dbg.exitDecision(514);}

			switch (alt514) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:57: sass_selector_interpolation_exp
					{
					dbg.location(1462,57);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp10739);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1462,91);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt513=0;
					try { dbg.enterSubRule(513);

					loop513:
					while (true) {
						int alt513=2;
						try { dbg.enterDecision(513, decisionCanBacktrack[513]);

						int LA513_0 = input.LA(1);
						if ( (LA513_0==DIMENSION) ) {
							int LA513_2 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt513=1;
							}

						}
						else if ( (LA513_0==IDENT||LA513_0==LENGTH||LA513_0==MINUS) ) {
							alt513=1;
						}

						} finally {dbg.exitDecision(513);}

						switch (alt513) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1462,91);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt513 >= 1 ) break loop513;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(513, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt513++;
					}
					} finally {dbg.exitSubRule(513);}

					}
					break;

			}
			} finally {dbg.exitSubRule(514);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1463, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_selector_interpolation_exp"



	// $ANTLR start "sass_interpolation_expression_var"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1465:1: sass_interpolation_expression_var : HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE ;
	public final void sass_interpolation_expression_var() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_interpolation_expression_var");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1465, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1466:5: ( HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:9: HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE
			{
			dbg.location(1467,9);
			match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var10786); if (state.failed) return;dbg.location(1467,21);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_interpolation_expression_var10788); if (state.failed) return;dbg.location(1467,28);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:28: ( WS )?
			int alt515=2;
			try { dbg.enterSubRule(515);
			try { dbg.enterDecision(515, decisionCanBacktrack[515]);

			int LA515_0 = input.LA(1);
			if ( (LA515_0==WS) ) {
				alt515=1;
			}
			} finally {dbg.exitDecision(515);}

			switch (alt515) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:28: WS
					{
					dbg.location(1467,28);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var10790); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(515);}
			dbg.location(1467,32);
			pushFollow(FOLLOW_cp_expression_in_sass_interpolation_expression_var10793);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1467,46);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:46: ( WS )?
			int alt516=2;
			try { dbg.enterSubRule(516);
			try { dbg.enterDecision(516, decisionCanBacktrack[516]);

			int LA516_0 = input.LA(1);
			if ( (LA516_0==WS) ) {
				alt516=1;
			}
			} finally {dbg.exitDecision(516);}

			switch (alt516) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:46: WS
					{
					dbg.location(1467,46);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var10795); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(516);}
			dbg.location(1467,50);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_interpolation_expression_var10798); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1468, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_interpolation_expression_var");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_interpolation_expression_var"



	// $ANTLR start "sass_nested_properties"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1488:1: sass_nested_properties : property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void sass_nested_properties() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_nested_properties");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1488, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1489:5: ( property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:5: property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1490,5);
			pushFollow(FOLLOW_property_in_sass_nested_properties10838);
			property();
			state._fsp--;
			if (state.failed) return;dbg.location(1490,14);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:14: ( ws )?
			int alt517=2;
			try { dbg.enterSubRule(517);
			try { dbg.enterDecision(517, decisionCanBacktrack[517]);

			int LA517_0 = input.LA(1);
			if ( (LA517_0==COMMENT||LA517_0==NL||LA517_0==WS) ) {
				alt517=1;
			}
			} finally {dbg.exitDecision(517);}

			switch (alt517) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:14: ws
					{
					dbg.location(1490,14);
					pushFollow(FOLLOW_ws_in_sass_nested_properties10840);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(517);}
			dbg.location(1490,18);
			match(input,COLON,FOLLOW_COLON_in_sass_nested_properties10843); if (state.failed) return;dbg.location(1490,24);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:24: ( ws )?
			int alt518=2;
			try { dbg.enterSubRule(518);
			try { dbg.enterDecision(518, decisionCanBacktrack[518]);

			int LA518_0 = input.LA(1);
			if ( (LA518_0==COMMENT||LA518_0==NL||LA518_0==WS) ) {
				alt518=1;
			}
			} finally {dbg.exitDecision(518);}

			switch (alt518) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:24: ws
					{
					dbg.location(1490,24);
					pushFollow(FOLLOW_ws_in_sass_nested_properties10845);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(518);}
			dbg.location(1490,28);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:28: ( propertyValue ( ws )? )?
			int alt520=2;
			try { dbg.enterSubRule(520);
			try { dbg.enterDecision(520, decisionCanBacktrack[520]);

			int LA520_0 = input.LA(1);
			if ( ((LA520_0 >= ANGLE && LA520_0 <= AT_SIGN)||(LA520_0 >= BOTTOMCENTER_SYM && LA520_0 <= BOTTOMRIGHT_SYM)||LA520_0==CHARSET_SYM||LA520_0==COUNTER_STYLE_SYM||LA520_0==DIMENSION||LA520_0==EMS||LA520_0==EXS||(LA520_0 >= FONT_FACE_SYM && LA520_0 <= FREQ)||LA520_0==GEN||(LA520_0 >= HASH && LA520_0 <= HASH_SYMBOL)||LA520_0==IDENT||LA520_0==IMPORT_SYM||(LA520_0 >= LBRACKET && LA520_0 <= LENGTH)||(LA520_0 >= LESS_AND && LA520_0 <= LESS_JS_STRING)||(LA520_0 >= MEDIA_SYM && LA520_0 <= MOZ_DOCUMENT_SYM)||LA520_0==NAMESPACE_SYM||LA520_0==NUMBER||(LA520_0 >= PAGE_SYM && LA520_0 <= PERCENTAGE_SYMBOL)||LA520_0==PLUS||(LA520_0 >= REM && LA520_0 <= RIGHTTOP_SYM)||(LA520_0 >= SASS_AT_ROOT && LA520_0 <= SASS_DEBUG)||(LA520_0 >= SASS_EACH && LA520_0 <= SASS_ELSE)||LA520_0==SASS_EXTEND||(LA520_0 >= SASS_FOR && LA520_0 <= SASS_FUNCTION)||(LA520_0 >= SASS_IF && LA520_0 <= SASS_MIXIN)||(LA520_0 >= SASS_RETURN && LA520_0 <= SASS_WHILE)||LA520_0==STRING||(LA520_0 >= TILDE && LA520_0 <= TOPRIGHT_SYM)||(LA520_0 >= URANGE && LA520_0 <= URI)||LA520_0==VARIABLE||LA520_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt520=1;
			}
			} finally {dbg.exitDecision(520);}

			switch (alt520) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:29: propertyValue ( ws )?
					{
					dbg.location(1490,29);
					pushFollow(FOLLOW_propertyValue_in_sass_nested_properties10849);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1490,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:43: ( ws )?
					int alt519=2;
					try { dbg.enterSubRule(519);
					try { dbg.enterDecision(519, decisionCanBacktrack[519]);

					int LA519_0 = input.LA(1);
					if ( (LA519_0==COMMENT||LA519_0==NL||LA519_0==WS) ) {
						alt519=1;
					}
					} finally {dbg.exitDecision(519);}

					switch (alt519) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:43: ws
							{
							dbg.location(1490,43);
							pushFollow(FOLLOW_ws_in_sass_nested_properties10851);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(519);}

					}
					break;

			}
			} finally {dbg.exitSubRule(520);}
			dbg.location(1490,49);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_nested_properties10856); if (state.failed) return;dbg.location(1490,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:56: ( ws )?
			int alt521=2;
			try { dbg.enterSubRule(521);
			try { dbg.enterDecision(521, decisionCanBacktrack[521]);

			int LA521_0 = input.LA(1);
			if ( (LA521_0==COMMENT||LA521_0==NL||LA521_0==WS) ) {
				alt521=1;
			}
			} finally {dbg.exitDecision(521);}

			switch (alt521) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:56: ws
					{
					dbg.location(1490,56);
					pushFollow(FOLLOW_ws_in_sass_nested_properties10858);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(521);}
			dbg.location(1490,60);
			pushFollow(FOLLOW_syncToFollow_in_sass_nested_properties10861);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1490,73);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:73: ( declarations )?
			int alt522=2;
			try { dbg.enterSubRule(522);
			try { dbg.enterDecision(522, decisionCanBacktrack[522]);

			int LA522_0 = input.LA(1);
			if ( ((LA522_0 >= AT_IDENT && LA522_0 <= AT_SIGN)||(LA522_0 >= BOTTOMCENTER_SYM && LA522_0 <= BOTTOMRIGHT_SYM)||(LA522_0 >= CHARSET_SYM && LA522_0 <= COLON)||LA522_0==CONTAINER_SYM||LA522_0==COUNTER_STYLE_SYM||(LA522_0 >= DCOLON && LA522_0 <= DOT)||LA522_0==FONT_FACE_SYM||(LA522_0 >= GEN && LA522_0 <= GREATER)||(LA522_0 >= HASH && LA522_0 <= HASH_SYMBOL)||LA522_0==IDENT||LA522_0==IMPORT_SYM||LA522_0==LAYER_SYM||(LA522_0 >= LBRACKET && LA522_0 <= LEFTTOP_SYM)||LA522_0==LESS_AND||(LA522_0 >= MEDIA_SYM && LA522_0 <= MOZ_DOCUMENT_SYM)||LA522_0==NAMESPACE_SYM||LA522_0==PAGE_SYM||(LA522_0 >= PIPE && LA522_0 <= PLUS)||(LA522_0 >= RIGHTBOTTOM_SYM && LA522_0 <= RIGHTTOP_SYM)||(LA522_0 >= SASS_AT_ROOT && LA522_0 <= SASS_DEBUG)||(LA522_0 >= SASS_EACH && LA522_0 <= SASS_ELSE)||(LA522_0 >= SASS_ERROR && LA522_0 <= SASS_FUNCTION)||(LA522_0 >= SASS_IF && LA522_0 <= SASS_MIXIN)||(LA522_0 >= SASS_RETURN && LA522_0 <= SEMI)||LA522_0==STAR||LA522_0==SUPPORTS_SYM||LA522_0==TILDE||(LA522_0 >= TOPCENTER_SYM && LA522_0 <= TOPRIGHT_SYM)||LA522_0==VARIABLE||LA522_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt522=1;
			}
			} finally {dbg.exitDecision(522);}

			switch (alt522) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1490:73: declarations
					{
					dbg.location(1490,73);
					pushFollow(FOLLOW_declarations_in_sass_nested_properties10863);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(522);}
			dbg.location(1490,87);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_nested_properties10866); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1491, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_nested_properties");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_nested_properties"



	// $ANTLR start "sass_extend"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1493:1: sass_extend : SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )? ;
	public final void sass_extend() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1493, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1494:5: ( SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:5: SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )?
			{
			dbg.location(1495,5);
			match(input,SASS_EXTEND,FOLLOW_SASS_EXTEND_in_sass_extend10887); if (state.failed) return;dbg.location(1495,17);
			pushFollow(FOLLOW_ws_in_sass_extend10889);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1495,20);
			pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend10891);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(1495,43);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:43: ( ( ws )? COMMA ( ws )? simpleSelectorSequence )*
			try { dbg.enterSubRule(525);

			loop525:
			while (true) {
				int alt525=2;
				try { dbg.enterDecision(525, decisionCanBacktrack[525]);

				try {
					isCyclicDecision = true;
					alt525 = dfa525.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(525);}

				switch (alt525) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:44: ( ws )? COMMA ( ws )? simpleSelectorSequence
					{
					dbg.location(1495,44);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:44: ( ws )?
					int alt523=2;
					try { dbg.enterSubRule(523);
					try { dbg.enterDecision(523, decisionCanBacktrack[523]);

					int LA523_0 = input.LA(1);
					if ( (LA523_0==COMMENT||LA523_0==NL||LA523_0==WS) ) {
						alt523=1;
					}
					} finally {dbg.exitDecision(523);}

					switch (alt523) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:44: ws
							{
							dbg.location(1495,44);
							pushFollow(FOLLOW_ws_in_sass_extend10894);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(523);}
					dbg.location(1495,48);
					match(input,COMMA,FOLLOW_COMMA_in_sass_extend10897); if (state.failed) return;dbg.location(1495,54);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:54: ( ws )?
					int alt524=2;
					try { dbg.enterSubRule(524);
					try { dbg.enterDecision(524, decisionCanBacktrack[524]);

					int LA524_0 = input.LA(1);
					if ( (LA524_0==COMMENT||LA524_0==NL||LA524_0==WS) ) {
						alt524=1;
					}
					} finally {dbg.exitDecision(524);}

					switch (alt524) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:54: ws
							{
							dbg.location(1495,54);
							pushFollow(FOLLOW_ws_in_sass_extend10899);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(524);}
					dbg.location(1495,58);
					pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend10902);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop525;
				}
			}
			} finally {dbg.exitSubRule(525);}
			dbg.location(1495,83);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:83: ( ws SASS_OPTIONAL )?
			int alt526=2;
			try { dbg.enterSubRule(526);
			try { dbg.enterDecision(526, decisionCanBacktrack[526]);

			try {
				isCyclicDecision = true;
				alt526 = dfa526.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(526);}

			switch (alt526) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:84: ws SASS_OPTIONAL
					{
					dbg.location(1495,84);
					pushFollow(FOLLOW_ws_in_sass_extend10907);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1495,87);
					match(input,SASS_OPTIONAL,FOLLOW_SASS_OPTIONAL_in_sass_extend10909); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(526);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1496, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend"



	// $ANTLR start "sass_extend_only_selector"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1498:1: sass_extend_only_selector : SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? ;
	public final void sass_extend_only_selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend_only_selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1498, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1499:5: ( SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:5: SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )?
			{
			dbg.location(1500,5);
			match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector10932); if (state.failed) return;dbg.location(1500,31);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:31: ( sass_selector_interpolation_exp )?
			int alt527=2;
			try { dbg.enterSubRule(527);
			try { dbg.enterDecision(527, decisionCanBacktrack[527]);

			int LA527_0 = input.LA(1);
			if ( (LA527_0==IDENT||LA527_0==MINUS) ) {
				alt527=1;
			}
			else if ( (LA527_0==HASH_SYMBOL) ) {
				int LA527_2 = input.LA(2);
				if ( (LA527_2==LBRACE) ) {
					alt527=1;
				}
			}
			} finally {dbg.exitDecision(527);}

			switch (alt527) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:31: sass_selector_interpolation_exp
					{
					dbg.location(1500,31);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector10934);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(527);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1501, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend_only_selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend_only_selector"



	// $ANTLR start "sass_debug"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1503:1: sass_debug : ( SASS_DEBUG | SASS_WARN ) ws cp_expression ;
	public final void sass_debug() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_debug");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1503, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1504:5: ( ( SASS_DEBUG | SASS_WARN ) ws cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1505:5: ( SASS_DEBUG | SASS_WARN ) ws cp_expression
			{
			dbg.location(1505,5);
			if ( input.LA(1)==SASS_DEBUG||input.LA(1)==SASS_WARN ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1505,32);
			pushFollow(FOLLOW_ws_in_sass_debug10966);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1505,35);
			pushFollow(FOLLOW_cp_expression_in_sass_debug10968);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1506, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_debug");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_debug"



	// $ANTLR start "sass_error"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1508:1: sass_error : SASS_ERROR ws STRING ;
	public final void sass_error() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_error");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1508, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1509:5: ( SASS_ERROR ws STRING )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1510:5: SASS_ERROR ws STRING
			{
			dbg.location(1510,5);
			match(input,SASS_ERROR,FOLLOW_SASS_ERROR_in_sass_error10989); if (state.failed) return;dbg.location(1510,16);
			pushFollow(FOLLOW_ws_in_sass_error10991);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1510,19);
			match(input,STRING,FOLLOW_STRING_in_sass_error10993); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1511, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_error");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_error"



	// $ANTLR start "sass_control"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1513:1: sass_control : ( sass_if | sass_for | sass_each | sass_while );
	public final void sass_control() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1513, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1514:5: ( sass_if | sass_for | sass_each | sass_while )
			int alt528=4;
			try { dbg.enterDecision(528, decisionCanBacktrack[528]);

			switch ( input.LA(1) ) {
			case SASS_IF:
				{
				alt528=1;
				}
				break;
			case SASS_FOR:
				{
				alt528=2;
				}
				break;
			case SASS_EACH:
				{
				alt528=3;
				}
				break;
			case SASS_WHILE:
				{
				alt528=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 528, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(528);}

			switch (alt528) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1515:5: sass_if
					{
					dbg.location(1515,5);
					pushFollow(FOLLOW_sass_if_in_sass_control11014);
					sass_if();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1515:15: sass_for
					{
					dbg.location(1515,15);
					pushFollow(FOLLOW_sass_for_in_sass_control11018);
					sass_for();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1515:26: sass_each
					{
					dbg.location(1515,26);
					pushFollow(FOLLOW_sass_each_in_sass_control11022);
					sass_each();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1515:38: sass_while
					{
					dbg.location(1515,38);
					pushFollow(FOLLOW_sass_while_in_sass_control11026);
					sass_while();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1516, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control"



	// $ANTLR start "sass_if"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1518:1: sass_if : SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? ;
	public final void sass_if() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_if");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1518, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1519:5: ( SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:5: SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
			{
			dbg.location(1520,5);
			match(input,SASS_IF,FOLLOW_SASS_IF_in_sass_if11047); if (state.failed) return;dbg.location(1520,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:13: ( ws )?
			int alt529=2;
			try { dbg.enterSubRule(529);
			try { dbg.enterDecision(529, decisionCanBacktrack[529]);

			int LA529_0 = input.LA(1);
			if ( (LA529_0==COMMENT||LA529_0==NL||LA529_0==WS) ) {
				alt529=1;
			}
			} finally {dbg.exitDecision(529);}

			switch (alt529) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:13: ws
					{
					dbg.location(1520,13);
					pushFollow(FOLLOW_ws_in_sass_if11049);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(529);}
			dbg.location(1520,17);
			pushFollow(FOLLOW_sass_control_expression_in_sass_if11052);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1520,41);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:41: ( ws )?
			int alt530=2;
			try { dbg.enterSubRule(530);
			try { dbg.enterDecision(530, decisionCanBacktrack[530]);

			int LA530_0 = input.LA(1);
			if ( (LA530_0==COMMENT||LA530_0==NL||LA530_0==WS) ) {
				alt530=1;
			}
			} finally {dbg.exitDecision(530);}

			switch (alt530) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:41: ws
					{
					dbg.location(1520,41);
					pushFollow(FOLLOW_ws_in_sass_if11054);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(530);}
			dbg.location(1520,45);
			pushFollow(FOLLOW_sass_control_block_in_sass_if11057);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;dbg.location(1520,64);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:64: ( ( ws )? sass_else )?
			int alt532=2;
			try { dbg.enterSubRule(532);
			try { dbg.enterDecision(532, decisionCanBacktrack[532]);

			try {
				isCyclicDecision = true;
				alt532 = dfa532.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(532);}

			switch (alt532) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:65: ( ws )? sass_else
					{
					dbg.location(1520,65);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:65: ( ws )?
					int alt531=2;
					try { dbg.enterSubRule(531);
					try { dbg.enterDecision(531, decisionCanBacktrack[531]);

					int LA531_0 = input.LA(1);
					if ( (LA531_0==COMMENT||LA531_0==NL||LA531_0==WS) ) {
						alt531=1;
					}
					} finally {dbg.exitDecision(531);}

					switch (alt531) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:65: ws
							{
							dbg.location(1520,65);
							pushFollow(FOLLOW_ws_in_sass_if11060);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(531);}
					dbg.location(1520,69);
					pushFollow(FOLLOW_sass_else_in_sass_if11063);
					sass_else();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(532);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1521, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_if");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_if"



	// $ANTLR start "sass_else"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1523:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );
	public final void sass_else() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_else");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1523, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1524:5: ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			int alt540=2;
			try { dbg.enterDecision(540, decisionCanBacktrack[540]);

			try {
				isCyclicDecision = true;
				alt540 = dfa540.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(540);}

			switch (alt540) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:5: SASS_ELSE ( ws )? sass_control_block
					{
					dbg.location(1525,5);
					match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else11086); if (state.failed) return;dbg.location(1525,15);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:15: ( ws )?
					int alt533=2;
					try { dbg.enterSubRule(533);
					try { dbg.enterDecision(533, decisionCanBacktrack[533]);

					int LA533_0 = input.LA(1);
					if ( (LA533_0==COMMENT||LA533_0==NL||LA533_0==WS) ) {
						alt533=1;
					}
					} finally {dbg.exitDecision(533);}

					switch (alt533) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:15: ws
							{
							dbg.location(1525,15);
							pushFollow(FOLLOW_ws_in_sass_else11088);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(533);}
					dbg.location(1525,19);
					pushFollow(FOLLOW_sass_control_block_in_sass_else11091);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
					{
					dbg.location(1527,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF )
					int alt535=2;
					try { dbg.enterSubRule(535);
					try { dbg.enterDecision(535, decisionCanBacktrack[535]);

					int LA535_0 = input.LA(1);
					if ( (LA535_0==SASS_ELSE) ) {
						alt535=1;
					}
					else if ( (LA535_0==SASS_ELSEIF) ) {
						alt535=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 535, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(535);}

					switch (alt535) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							{
							dbg.location(1527,6);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:7: SASS_ELSE ( ws )? {...}? IDENT
							{
							dbg.location(1527,7);
							match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else11105); if (state.failed) return;dbg.location(1527,17);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:17: ( ws )?
							int alt534=2;
							try { dbg.enterSubRule(534);
							try { dbg.enterDecision(534, decisionCanBacktrack[534]);

							int LA534_0 = input.LA(1);
							if ( (LA534_0==COMMENT||LA534_0==NL||LA534_0==WS) ) {
								alt534=1;
							}
							} finally {dbg.exitDecision(534);}

							switch (alt534) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:17: ws
									{
									dbg.location(1527,17);
									pushFollow(FOLLOW_ws_in_sass_else11107);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(534);}
							dbg.location(1527,21);
							if ( !(evalPredicate(tokenNameEquals("if"),"tokenNameEquals(\"if\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "sass_else", "tokenNameEquals(\"if\")");
							}dbg.location(1527,46);
							match(input,IDENT,FOLLOW_IDENT_in_sass_else11112); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:64: SASS_ELSEIF
							{
							dbg.location(1527,64);
							match(input,SASS_ELSEIF,FOLLOW_SASS_ELSEIF_in_sass_else11119); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(535);}
					dbg.location(1527,77);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:77: ( ws )?
					int alt536=2;
					try { dbg.enterSubRule(536);
					try { dbg.enterDecision(536, decisionCanBacktrack[536]);

					int LA536_0 = input.LA(1);
					if ( (LA536_0==COMMENT||LA536_0==NL||LA536_0==WS) ) {
						alt536=1;
					}
					} finally {dbg.exitDecision(536);}

					switch (alt536) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:77: ws
							{
							dbg.location(1527,77);
							pushFollow(FOLLOW_ws_in_sass_else11122);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(536);}
					dbg.location(1527,81);
					pushFollow(FOLLOW_sass_control_expression_in_sass_else11125);
					sass_control_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1527,105);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:105: ( ws )?
					int alt537=2;
					try { dbg.enterSubRule(537);
					try { dbg.enterDecision(537, decisionCanBacktrack[537]);

					int LA537_0 = input.LA(1);
					if ( (LA537_0==COMMENT||LA537_0==NL||LA537_0==WS) ) {
						alt537=1;
					}
					} finally {dbg.exitDecision(537);}

					switch (alt537) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:105: ws
							{
							dbg.location(1527,105);
							pushFollow(FOLLOW_ws_in_sass_else11127);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(537);}
					dbg.location(1527,109);
					pushFollow(FOLLOW_sass_control_block_in_sass_else11130);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;dbg.location(1527,128);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:128: ( ( ws )? sass_else )?
					int alt539=2;
					try { dbg.enterSubRule(539);
					try { dbg.enterDecision(539, decisionCanBacktrack[539]);

					try {
						isCyclicDecision = true;
						alt539 = dfa539.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(539);}

					switch (alt539) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:129: ( ws )? sass_else
							{
							dbg.location(1527,129);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:129: ( ws )?
							int alt538=2;
							try { dbg.enterSubRule(538);
							try { dbg.enterDecision(538, decisionCanBacktrack[538]);

							int LA538_0 = input.LA(1);
							if ( (LA538_0==COMMENT||LA538_0==NL||LA538_0==WS) ) {
								alt538=1;
							}
							} finally {dbg.exitDecision(538);}

							switch (alt538) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1527:129: ws
									{
									dbg.location(1527,129);
									pushFollow(FOLLOW_ws_in_sass_else11133);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(538);}
							dbg.location(1527,133);
							pushFollow(FOLLOW_sass_else_in_sass_else11136);
							sass_else();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(539);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1528, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_else");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_else"



	// $ANTLR start "sass_control_expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1530:1: sass_control_expression : cp_expression ;
	public final void sass_control_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1530, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1531:5: ( cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:5: cp_expression
			{
			dbg.location(1532,5);
			pushFollow(FOLLOW_cp_expression_in_sass_control_expression11159);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1533, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_expression"



	// $ANTLR start "sass_for"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1535:1: sass_for : SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block ;
	public final void sass_for() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_for");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1535, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1536:5: ( SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1537:5: SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block
			{
			dbg.location(1537,5);
			match(input,SASS_FOR,FOLLOW_SASS_FOR_in_sass_for11180); if (state.failed) return;dbg.location(1537,14);
			pushFollow(FOLLOW_ws_in_sass_for11182);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1537,17);
			pushFollow(FOLLOW_cp_variable_in_sass_for11184);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1537,29);
			pushFollow(FOLLOW_ws_in_sass_for11186);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1537,32);
			if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"from\")");
			}dbg.location(1537,59);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for11190); if (state.failed) return;dbg.location(1537,74);
			pushFollow(FOLLOW_ws_in_sass_for11194);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1537,77);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for11196);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1537,96);
			pushFollow(FOLLOW_ws_in_sass_for11198);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1537,99);
			if ( !(evalPredicate(tokenNameEquals("to")|tokenNameEquals("through"),"tokenNameEquals(\"to\")|tokenNameEquals(\"through\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"to\")|tokenNameEquals(\"through\")");
			}dbg.location(1537,151);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for11202); if (state.failed) return;dbg.location(1537,173);
			pushFollow(FOLLOW_ws_in_sass_for11206);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1537,176);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for11208);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1537,195);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1537:195: ( ws )?
			int alt541=2;
			try { dbg.enterSubRule(541);
			try { dbg.enterDecision(541, decisionCanBacktrack[541]);

			int LA541_0 = input.LA(1);
			if ( (LA541_0==COMMENT||LA541_0==NL||LA541_0==WS) ) {
				alt541=1;
			}
			} finally {dbg.exitDecision(541);}

			switch (alt541) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1537:195: ws
					{
					dbg.location(1537,195);
					pushFollow(FOLLOW_ws_in_sass_for11210);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(541);}
			dbg.location(1537,199);
			pushFollow(FOLLOW_sass_control_block_in_sass_for11213);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1538, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_for");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_for"



	// $ANTLR start "sass_each"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1540:1: sass_each : SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block ;
	public final void sass_each() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1540, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1541:5: ( SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:5: SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block
			{
			dbg.location(1542,5);
			match(input,SASS_EACH,FOLLOW_SASS_EACH_in_sass_each11234); if (state.failed) return;dbg.location(1542,15);
			pushFollow(FOLLOW_ws_in_sass_each11236);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,18);
			pushFollow(FOLLOW_sass_each_variables_in_sass_each11238);
			sass_each_variables();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,38);
			pushFollow(FOLLOW_ws_in_sass_each11240);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,41);
			if ( !(evalPredicate(tokenNameEquals("in"),"tokenNameEquals(\"in\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_each", "tokenNameEquals(\"in\")");
			}dbg.location(1542,66);
			match(input,IDENT,FOLLOW_IDENT_in_sass_each11244); if (state.failed) return;dbg.location(1542,79);
			pushFollow(FOLLOW_ws_in_sass_each11248);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,82);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:82: ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+
			int cnt545=0;
			try { dbg.enterSubRule(545);

			loop545:
			while (true) {
				int alt545=2;
				try { dbg.enterDecision(545, decisionCanBacktrack[545]);

				int LA545_0 = input.LA(1);
				if ( (LA545_0==LBRACE) ) {
					int LA545_1 = input.LA(2);
					if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
						alt545=1;
					}

				}
				else if ( ((LA545_0 >= ANGLE && LA545_0 <= AT_SIGN)||(LA545_0 >= BOTTOMCENTER_SYM && LA545_0 <= BOTTOMRIGHT_SYM)||LA545_0==CHARSET_SYM||LA545_0==COUNTER_STYLE_SYM||LA545_0==DIMENSION||LA545_0==EMS||LA545_0==EXS||(LA545_0 >= FONT_FACE_SYM && LA545_0 <= FREQ)||LA545_0==GEN||(LA545_0 >= HASH && LA545_0 <= HASH_SYMBOL)||(LA545_0 >= IDENT && LA545_0 <= IMPORT_SYM)||(LA545_0 >= LBRACKET && LA545_0 <= LENGTH)||(LA545_0 >= LESS_AND && LA545_0 <= LESS_JS_STRING)||LA545_0==LPAREN||(LA545_0 >= MEDIA_SYM && LA545_0 <= MOZ_DOCUMENT_SYM)||LA545_0==NAMESPACE_SYM||(LA545_0 >= NOT && LA545_0 <= NUMBER)||(LA545_0 >= PAGE_SYM && LA545_0 <= PERCENTAGE_SYMBOL)||LA545_0==PLUS||(LA545_0 >= REM && LA545_0 <= RIGHTTOP_SYM)||(LA545_0 >= SASS_AT_ROOT && LA545_0 <= SASS_DEBUG)||(LA545_0 >= SASS_EACH && LA545_0 <= SASS_ELSE)||LA545_0==SASS_EXTEND||(LA545_0 >= SASS_FOR && LA545_0 <= SASS_FUNCTION)||(LA545_0 >= SASS_IF && LA545_0 <= SASS_MIXIN)||(LA545_0 >= SASS_RETURN && LA545_0 <= SASS_WHILE)||LA545_0==STRING||(LA545_0 >= TILDE && LA545_0 <= TOPRIGHT_SYM)||(LA545_0 >= URANGE && LA545_0 <= URI)||LA545_0==VARIABLE||LA545_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt545=1;
				}

				} finally {dbg.exitDecision(545);}

				switch (alt545) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:83: cp_expression_list ( ( ws )? COMMA )? ( ws )?
					{
					dbg.location(1542,83);
					pushFollow(FOLLOW_cp_expression_list_in_sass_each11251);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1542,102);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:102: ( ( ws )? COMMA )?
					int alt543=2;
					try { dbg.enterSubRule(543);
					try { dbg.enterDecision(543, decisionCanBacktrack[543]);

					try {
						isCyclicDecision = true;
						alt543 = dfa543.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(543);}

					switch (alt543) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:103: ( ws )? COMMA
							{
							dbg.location(1542,103);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:103: ( ws )?
							int alt542=2;
							try { dbg.enterSubRule(542);
							try { dbg.enterDecision(542, decisionCanBacktrack[542]);

							int LA542_0 = input.LA(1);
							if ( (LA542_0==COMMENT||LA542_0==NL||LA542_0==WS) ) {
								alt542=1;
							}
							} finally {dbg.exitDecision(542);}

							switch (alt542) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:103: ws
									{
									dbg.location(1542,103);
									pushFollow(FOLLOW_ws_in_sass_each11254);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(542);}
							dbg.location(1542,107);
							match(input,COMMA,FOLLOW_COMMA_in_sass_each11257); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(543);}
					dbg.location(1542,115);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:115: ( ws )?
					int alt544=2;
					try { dbg.enterSubRule(544);
					try { dbg.enterDecision(544, decisionCanBacktrack[544]);

					int LA544_0 = input.LA(1);
					if ( (LA544_0==COMMENT||LA544_0==NL||LA544_0==WS) ) {
						alt544=1;
					}
					} finally {dbg.exitDecision(544);}

					switch (alt544) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:115: ws
							{
							dbg.location(1542,115);
							pushFollow(FOLLOW_ws_in_sass_each11261);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(544);}

					}
					break;

				default :
					if ( cnt545 >= 1 ) break loop545;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(545, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt545++;
			}
			} finally {dbg.exitSubRule(545);}
			dbg.location(1542,122);
			pushFollow(FOLLOW_sass_control_block_in_sass_each11267);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1543, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each"



	// $ANTLR start "sass_each_variables"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1545:1: sass_each_variables : cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* ;
	public final void sass_each_variables() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each_variables");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1545, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1546:5: ( cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:5: cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			{
			dbg.location(1547,5);
			pushFollow(FOLLOW_cp_variable_in_sass_each_variables11288);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1547,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			try { dbg.enterSubRule(548);

			loop548:
			while (true) {
				int alt548=2;
				try { dbg.enterDecision(548, decisionCanBacktrack[548]);

				try {
					isCyclicDecision = true;
					alt548 = dfa548.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(548);}

				switch (alt548) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:19: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable
					{
					dbg.location(1547,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:33: ( ws )?
					int alt546=2;
					try { dbg.enterSubRule(546);
					try { dbg.enterDecision(546, decisionCanBacktrack[546]);

					int LA546_0 = input.LA(1);
					if ( (LA546_0==COMMENT||LA546_0==NL||LA546_0==WS) ) {
						alt546=1;
					}
					} finally {dbg.exitDecision(546);}

					switch (alt546) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:33: ws
							{
							dbg.location(1547,33);
							pushFollow(FOLLOW_ws_in_sass_each_variables11300);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(546);}
					dbg.location(1547,37);
					match(input,COMMA,FOLLOW_COMMA_in_sass_each_variables11303); if (state.failed) return;dbg.location(1547,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:43: ( ws )?
					int alt547=2;
					try { dbg.enterSubRule(547);
					try { dbg.enterDecision(547, decisionCanBacktrack[547]);

					int LA547_0 = input.LA(1);
					if ( (LA547_0==COMMENT||LA547_0==NL||LA547_0==WS) ) {
						alt547=1;
					}
					} finally {dbg.exitDecision(547);}

					switch (alt547) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:43: ws
							{
							dbg.location(1547,43);
							pushFollow(FOLLOW_ws_in_sass_each_variables11305);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(547);}
					dbg.location(1547,47);
					pushFollow(FOLLOW_cp_variable_in_sass_each_variables11308);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop548;
				}
			}
			} finally {dbg.exitSubRule(548);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1548, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each_variables");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each_variables"



	// $ANTLR start "sass_while"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1550:1: sass_while : SASS_WHILE ws sass_control_expression ( ws )? sass_control_block ;
	public final void sass_while() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_while");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1550, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1551:5: ( SASS_WHILE ws sass_control_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:5: SASS_WHILE ws sass_control_expression ( ws )? sass_control_block
			{
			dbg.location(1552,5);
			match(input,SASS_WHILE,FOLLOW_SASS_WHILE_in_sass_while11333); if (state.failed) return;dbg.location(1552,16);
			pushFollow(FOLLOW_ws_in_sass_while11335);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1552,19);
			pushFollow(FOLLOW_sass_control_expression_in_sass_while11337);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1552,43);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:43: ( ws )?
			int alt549=2;
			try { dbg.enterSubRule(549);
			try { dbg.enterDecision(549, decisionCanBacktrack[549]);

			int LA549_0 = input.LA(1);
			if ( (LA549_0==COMMENT||LA549_0==NL||LA549_0==WS) ) {
				alt549=1;
			}
			} finally {dbg.exitDecision(549);}

			switch (alt549) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:43: ws
					{
					dbg.location(1552,43);
					pushFollow(FOLLOW_ws_in_sass_while11339);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(549);}
			dbg.location(1552,47);
			pushFollow(FOLLOW_sass_control_block_in_sass_while11342);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1553, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_while");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_while"



	// $ANTLR start "sass_control_block"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1555:1: sass_control_block : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_control_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1555, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1556:5: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1557:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1557,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_control_block11363); if (state.failed) return;dbg.location(1557,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1557:12: ( ws )?
			int alt550=2;
			try { dbg.enterSubRule(550);
			try { dbg.enterDecision(550, decisionCanBacktrack[550]);

			int LA550_0 = input.LA(1);
			if ( (LA550_0==COMMENT||LA550_0==NL||LA550_0==WS) ) {
				alt550=1;
			}
			} finally {dbg.exitDecision(550);}

			switch (alt550) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1557:12: ws
					{
					dbg.location(1557,12);
					pushFollow(FOLLOW_ws_in_sass_control_block11365);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(550);}
			dbg.location(1557,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1557:16: ( declarations )?
			int alt551=2;
			try { dbg.enterSubRule(551);
			try { dbg.enterDecision(551, decisionCanBacktrack[551]);

			int LA551_0 = input.LA(1);
			if ( ((LA551_0 >= AT_IDENT && LA551_0 <= AT_SIGN)||(LA551_0 >= BOTTOMCENTER_SYM && LA551_0 <= BOTTOMRIGHT_SYM)||(LA551_0 >= CHARSET_SYM && LA551_0 <= COLON)||LA551_0==CONTAINER_SYM||LA551_0==COUNTER_STYLE_SYM||(LA551_0 >= DCOLON && LA551_0 <= DOT)||LA551_0==FONT_FACE_SYM||(LA551_0 >= GEN && LA551_0 <= GREATER)||(LA551_0 >= HASH && LA551_0 <= HASH_SYMBOL)||LA551_0==IDENT||LA551_0==IMPORT_SYM||LA551_0==LAYER_SYM||(LA551_0 >= LBRACKET && LA551_0 <= LEFTTOP_SYM)||LA551_0==LESS_AND||(LA551_0 >= MEDIA_SYM && LA551_0 <= MOZ_DOCUMENT_SYM)||LA551_0==NAMESPACE_SYM||LA551_0==PAGE_SYM||(LA551_0 >= PIPE && LA551_0 <= PLUS)||(LA551_0 >= RIGHTBOTTOM_SYM && LA551_0 <= RIGHTTOP_SYM)||(LA551_0 >= SASS_AT_ROOT && LA551_0 <= SASS_DEBUG)||(LA551_0 >= SASS_EACH && LA551_0 <= SASS_ELSE)||(LA551_0 >= SASS_ERROR && LA551_0 <= SASS_FUNCTION)||(LA551_0 >= SASS_IF && LA551_0 <= SASS_MIXIN)||(LA551_0 >= SASS_RETURN && LA551_0 <= SEMI)||LA551_0==STAR||LA551_0==SUPPORTS_SYM||LA551_0==TILDE||(LA551_0 >= TOPCENTER_SYM && LA551_0 <= TOPRIGHT_SYM)||LA551_0==VARIABLE||LA551_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt551=1;
			}
			} finally {dbg.exitDecision(551);}

			switch (alt551) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1557:16: declarations
					{
					dbg.location(1557,16);
					pushFollow(FOLLOW_declarations_in_sass_control_block11368);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(551);}
			dbg.location(1557,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_control_block11371); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1558, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_block"



	// $ANTLR start "sass_function_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1560:1: sass_function_declaration : SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_function_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1560, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1561:5: ( SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:5: SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1566,5);
			match(input,SASS_FUNCTION,FOLLOW_SASS_FUNCTION_in_sass_function_declaration11413); if (state.failed) return;dbg.location(1566,19);
			pushFollow(FOLLOW_ws_in_sass_function_declaration11415);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1566,22);
			pushFollow(FOLLOW_sass_function_name_in_sass_function_declaration11417);
			sass_function_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1566,41);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:41: ( ws )?
			int alt552=2;
			try { dbg.enterSubRule(552);
			try { dbg.enterDecision(552, decisionCanBacktrack[552]);

			int LA552_0 = input.LA(1);
			if ( (LA552_0==COMMENT||LA552_0==NL||LA552_0==WS) ) {
				alt552=1;
			}
			} finally {dbg.exitDecision(552);}

			switch (alt552) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:41: ws
					{
					dbg.location(1566,41);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11419);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(552);}
			dbg.location(1566,45);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_function_declaration11422); if (state.failed) return;dbg.location(1566,52);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:52: ( ws )?
			int alt553=2;
			try { dbg.enterSubRule(553);
			try { dbg.enterDecision(553, decisionCanBacktrack[553]);

			int LA553_0 = input.LA(1);
			if ( (LA553_0==COMMENT||LA553_0==NL||LA553_0==WS) ) {
				alt553=1;
			}
			} finally {dbg.exitDecision(553);}

			switch (alt553) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:52: ws
					{
					dbg.location(1566,52);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11424);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(553);}
			dbg.location(1566,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:56: ( cp_args_list )?
			int alt554=2;
			try { dbg.enterSubRule(554);
			try { dbg.enterDecision(554, decisionCanBacktrack[554]);

			int LA554_0 = input.LA(1);
			if ( (LA554_0==AT_IDENT||(LA554_0 >= BOTTOMCENTER_SYM && LA554_0 <= BOTTOMRIGHT_SYM)||LA554_0==CHARSET_SYM||(LA554_0 >= COUNTER_STYLE_SYM && LA554_0 <= CP_DOTS)||LA554_0==FONT_FACE_SYM||LA554_0==IDENT||LA554_0==IMPORT_SYM||(LA554_0 >= LEFTBOTTOM_SYM && LA554_0 <= LEFTTOP_SYM)||LA554_0==LESS_REST||LA554_0==MEDIA_SYM||LA554_0==MOZ_DOCUMENT_SYM||LA554_0==NAMESPACE_SYM||LA554_0==PAGE_SYM||(LA554_0 >= RIGHTBOTTOM_SYM && LA554_0 <= RIGHTTOP_SYM)||(LA554_0 >= SASS_AT_ROOT && LA554_0 <= SASS_DEBUG)||(LA554_0 >= SASS_EACH && LA554_0 <= SASS_ELSE)||LA554_0==SASS_EXTEND||(LA554_0 >= SASS_FOR && LA554_0 <= SASS_FUNCTION)||(LA554_0 >= SASS_IF && LA554_0 <= SASS_MIXIN)||(LA554_0 >= SASS_RETURN && LA554_0 <= SASS_WHILE)||(LA554_0 >= TOPCENTER_SYM && LA554_0 <= TOPRIGHT_SYM)||LA554_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt554=1;
			}
			} finally {dbg.exitDecision(554);}

			switch (alt554) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:56: cp_args_list
					{
					dbg.location(1566,56);
					pushFollow(FOLLOW_cp_args_list_in_sass_function_declaration11427);
					cp_args_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(554);}
			dbg.location(1566,70);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_function_declaration11430); if (state.failed) return;dbg.location(1566,77);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:77: ( ws )?
			int alt555=2;
			try { dbg.enterSubRule(555);
			try { dbg.enterDecision(555, decisionCanBacktrack[555]);

			int LA555_0 = input.LA(1);
			if ( (LA555_0==COMMENT||LA555_0==NL||LA555_0==WS) ) {
				alt555=1;
			}
			} finally {dbg.exitDecision(555);}

			switch (alt555) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:77: ws
					{
					dbg.location(1566,77);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11432);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(555);}
			dbg.location(1566,81);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_function_declaration11435); if (state.failed) return;dbg.location(1566,88);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:88: ( ws )?
			int alt556=2;
			try { dbg.enterSubRule(556);
			try { dbg.enterDecision(556, decisionCanBacktrack[556]);

			int LA556_0 = input.LA(1);
			if ( (LA556_0==COMMENT||LA556_0==NL||LA556_0==WS) ) {
				alt556=1;
			}
			} finally {dbg.exitDecision(556);}

			switch (alt556) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:88: ws
					{
					dbg.location(1566,88);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11437);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(556);}
			dbg.location(1566,92);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:92: ( declarations )?
			int alt557=2;
			try { dbg.enterSubRule(557);
			try { dbg.enterDecision(557, decisionCanBacktrack[557]);

			int LA557_0 = input.LA(1);
			if ( ((LA557_0 >= AT_IDENT && LA557_0 <= AT_SIGN)||(LA557_0 >= BOTTOMCENTER_SYM && LA557_0 <= BOTTOMRIGHT_SYM)||(LA557_0 >= CHARSET_SYM && LA557_0 <= COLON)||LA557_0==CONTAINER_SYM||LA557_0==COUNTER_STYLE_SYM||(LA557_0 >= DCOLON && LA557_0 <= DOT)||LA557_0==FONT_FACE_SYM||(LA557_0 >= GEN && LA557_0 <= GREATER)||(LA557_0 >= HASH && LA557_0 <= HASH_SYMBOL)||LA557_0==IDENT||LA557_0==IMPORT_SYM||LA557_0==LAYER_SYM||(LA557_0 >= LBRACKET && LA557_0 <= LEFTTOP_SYM)||LA557_0==LESS_AND||(LA557_0 >= MEDIA_SYM && LA557_0 <= MOZ_DOCUMENT_SYM)||LA557_0==NAMESPACE_SYM||LA557_0==PAGE_SYM||(LA557_0 >= PIPE && LA557_0 <= PLUS)||(LA557_0 >= RIGHTBOTTOM_SYM && LA557_0 <= RIGHTTOP_SYM)||(LA557_0 >= SASS_AT_ROOT && LA557_0 <= SASS_DEBUG)||(LA557_0 >= SASS_EACH && LA557_0 <= SASS_ELSE)||(LA557_0 >= SASS_ERROR && LA557_0 <= SASS_FUNCTION)||(LA557_0 >= SASS_IF && LA557_0 <= SASS_MIXIN)||(LA557_0 >= SASS_RETURN && LA557_0 <= SEMI)||LA557_0==STAR||LA557_0==SUPPORTS_SYM||LA557_0==TILDE||(LA557_0 >= TOPCENTER_SYM && LA557_0 <= TOPRIGHT_SYM)||LA557_0==VARIABLE||LA557_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt557=1;
			}
			} finally {dbg.exitDecision(557);}

			switch (alt557) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:92: declarations
					{
					dbg.location(1566,92);
					pushFollow(FOLLOW_declarations_in_sass_function_declaration11440);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(557);}
			dbg.location(1566,106);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_function_declaration11443); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1567, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_declaration"



	// $ANTLR start "sass_function_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1569:1: sass_function_name : IDENT ;
	public final void sass_function_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1569, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1570:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:5: IDENT
			{
			dbg.location(1571,5);
			match(input,IDENT,FOLLOW_IDENT_in_sass_function_name11464); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1572, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_name"



	// $ANTLR start "sass_function_return"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1574:1: sass_function_return : SASS_RETURN ws cp_expression ;
	public final void sass_function_return() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_return");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1574, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1575:5: ( SASS_RETURN ws cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1576:5: SASS_RETURN ws cp_expression
			{
			dbg.location(1576,5);
			match(input,SASS_RETURN,FOLLOW_SASS_RETURN_in_sass_function_return11485); if (state.failed) return;dbg.location(1576,17);
			pushFollow(FOLLOW_ws_in_sass_function_return11487);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1576,20);
			pushFollow(FOLLOW_cp_expression_in_sass_function_return11489);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1577, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_return");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_return"



	// $ANTLR start "sass_content"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1579:1: sass_content : SASS_CONTENT ;
	public final void sass_content() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_content");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1579, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1580:5: ( SASS_CONTENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1581:5: SASS_CONTENT
			{
			dbg.location(1581,5);
			match(input,SASS_CONTENT,FOLLOW_SASS_CONTENT_in_sass_content11510); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1582, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_content");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_content"



	// $ANTLR start "less_import_types"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1584:1: less_import_types :{...}? IDENT ;
	public final void less_import_types() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_import_types");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1584, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1584:18: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1585:5: {...}? IDENT
			{
			dbg.location(1585,5);
			if ( !(evalPredicate(tokenNameIs(new String[]{"LESS", "CSS", "REFERENCE", "INLINE", "ONCE", "MULTIPLE", "OPTIONAL"}),"tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\", \"OPTIONAL\"})")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_import_types", "tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\", \"OPTIONAL\"})");
			}dbg.location(1585,104);
			match(input,IDENT,FOLLOW_IDENT_in_less_import_types11529); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        input.consume();
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1586, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_import_types");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_import_types"



	// $ANTLR start "less_when"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1591:1: less_when :{...}? IDENT ;
	public final void less_when() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_when");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1591, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1591:10: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1592:5: {...}? IDENT
			{
			dbg.location(1592,5);
			if ( !(evalPredicate(tokenNameEquals("when"),"tokenNameEquals(\"when\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_when", "tokenNameEquals(\"when\")");
			}dbg.location(1592,32);
			match(input,IDENT,FOLLOW_IDENT_in_less_when11552); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1593, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_when");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_when"



	// $ANTLR start "key_and"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1595:1: key_and :{...}? IDENT ;
	public final void key_and() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_and");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1595, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1595:8: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1596:5: {...}? IDENT
			{
			dbg.location(1596,5);
			if ( !(evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_and", "tokenNameEquals(\"and\")");
			}dbg.location(1596,31);
			match(input,IDENT,FOLLOW_IDENT_in_key_and11571); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1597, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_and");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_and"



	// $ANTLR start "key_or"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1599:1: key_or :{...}? IDENT ;
	public final void key_or() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_or");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1599, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1599:7: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1600:5: {...}? IDENT
			{
			dbg.location(1600,5);
			if ( !(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_or", "tokenNameEquals(\"or\")");
			}dbg.location(1600,30);
			match(input,IDENT,FOLLOW_IDENT_in_key_or11589); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1601, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_or");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_or"



	// $ANTLR start "key_only"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1603:1: key_only :{...}? IDENT ;
	public final void key_only() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_only");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1603, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1603:9: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1604:5: {...}? IDENT
			{
			dbg.location(1604,5);
			if ( !(evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_only", "tokenNameEquals(\"only\")");
			}dbg.location(1604,32);
			match(input,IDENT,FOLLOW_IDENT_in_key_only11607); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1605, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_only");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_only"

	// $ANTLR start synpred1_Css3
	public final void synpred1_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:61: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:62: ( ws )? mediaQueryList
		{
		dbg.location(333,62);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:62: ( ws )?
		int alt558=2;
		try { dbg.enterSubRule(558);
		try { dbg.enterDecision(558, decisionCanBacktrack[558]);

		int LA558_0 = input.LA(1);
		if ( (LA558_0==COMMENT||LA558_0==NL||LA558_0==WS) ) {
			alt558=1;
		}
		} finally {dbg.exitDecision(558);}

		switch (alt558) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:62: ws
				{
				dbg.location(333,62);
				pushFollow(FOLLOW_ws_in_synpred1_Css3470);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(558);}
		dbg.location(333,66);
		pushFollow(FOLLOW_mediaQueryList_in_synpred1_Css3473);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred1_Css3

	// $ANTLR start synpred2_Css3
	public final void synpred2_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:115: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:116: ( ws )? mediaQueryList
		{
		dbg.location(336,116);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:116: ( ws )?
		int alt559=2;
		try { dbg.enterSubRule(559);
		try { dbg.enterDecision(559, decisionCanBacktrack[559]);

		int LA559_0 = input.LA(1);
		if ( (LA559_0==COMMENT||LA559_0==NL||LA559_0==WS) ) {
			alt559=1;
		}
		} finally {dbg.exitDecision(559);}

		switch (alt559) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:116: ws
				{
				dbg.location(336,116);
				pushFollow(FOLLOW_ws_in_synpred2_Css3540);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(559);}
		dbg.location(336,120);
		pushFollow(FOLLOW_mediaQueryList_in_synpred2_Css3543);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred2_Css3

	// $ANTLR start synpred3_Css3
	public final void synpred3_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:118: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:119: ( ws )? mediaQueryList
		{
		dbg.location(338,119);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:119: ( ws )?
		int alt560=2;
		try { dbg.enterSubRule(560);
		try { dbg.enterDecision(560, decisionCanBacktrack[560]);

		int LA560_0 = input.LA(1);
		if ( (LA560_0==COMMENT||LA560_0==NL||LA560_0==WS) ) {
			alt560=1;
		}
		} finally {dbg.exitDecision(560);}

		switch (alt560) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:119: ws
				{
				dbg.location(338,119);
				pushFollow(FOLLOW_ws_in_synpred3_Css3600);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(560);}
		dbg.location(338,123);
		pushFollow(FOLLOW_mediaQueryList_in_synpred3_Css3603);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred3_Css3

	// $ANTLR start synpred4_Css3
	public final void synpred4_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:27: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:28: ( ws )? SEMI
		{
		dbg.location(410,28);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:28: ( ws )?
		int alt561=2;
		try { dbg.enterSubRule(561);
		try { dbg.enterDecision(561, decisionCanBacktrack[561]);

		int LA561_0 = input.LA(1);
		if ( (LA561_0==COMMENT||LA561_0==NL||LA561_0==WS) ) {
			alt561=1;
		}
		} finally {dbg.exitDecision(561);}

		switch (alt561) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:28: ws
				{
				dbg.location(410,28);
				pushFollow(FOLLOW_ws_in_synpred4_Css31170);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(561);}
		dbg.location(410,32);
		match(input,SEMI,FOLLOW_SEMI_in_synpred4_Css31173); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_Css3

	// $ANTLR start synpred5_Css3
	public final void synpred5_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )
		int alt566=2;
		try { dbg.enterDecision(566, decisionCanBacktrack[566]);

		int LA566_0 = input.LA(1);
		if ( (LA566_0==SASS_MIXIN) ) {
			alt566=1;
		}
		else if ( (LA566_0==DOT||LA566_0==HASH) ) {
			alt566=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 566, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(566);}

		switch (alt566) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:6: SASS_MIXIN
				{
				dbg.location(419,6);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred5_Css31271); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(419,19);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:20: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE
				{
				dbg.location(419,20);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:20: ( ( DOT IDENT ) | HASH )
				int alt562=2;
				try { dbg.enterSubRule(562);
				try { dbg.enterDecision(562, decisionCanBacktrack[562]);

				int LA562_0 = input.LA(1);
				if ( (LA562_0==DOT) ) {
					alt562=1;
				}
				else if ( (LA562_0==HASH) ) {
					alt562=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 562, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(562);}

				switch (alt562) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:21: ( DOT IDENT )
						{
						dbg.location(419,21);
						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:21: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:22: DOT IDENT
						{
						dbg.location(419,22);
						match(input,DOT,FOLLOW_DOT_in_synpred5_Css31278); if (state.failed) return;dbg.location(419,26);
						match(input,IDENT,FOLLOW_IDENT_in_synpred5_Css31280); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:35: HASH
						{
						dbg.location(419,35);
						match(input,HASH,FOLLOW_HASH_in_synpred5_Css31285); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(562);}
				dbg.location(419,41);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:41: ( ws )?
				int alt563=2;
				try { dbg.enterSubRule(563);
				try { dbg.enterDecision(563, decisionCanBacktrack[563]);

				int LA563_0 = input.LA(1);
				if ( (LA563_0==COMMENT||LA563_0==NL||LA563_0==WS) ) {
					alt563=1;
				}
				} finally {dbg.exitDecision(563);}

				switch (alt563) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:41: ws
						{
						dbg.location(419,41);
						pushFollow(FOLLOW_ws_in_synpred5_Css31288);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(563);}
				dbg.location(419,45);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred5_Css31291); if (state.failed) return;dbg.location(419,52);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:52: (~ RPAREN )*
				try { dbg.enterSubRule(564);

				loop564:
				while (true) {
					int alt564=2;
					try { dbg.enterDecision(564, decisionCanBacktrack[564]);

					int LA564_0 = input.LA(1);
					if ( ((LA564_0 >= A && LA564_0 <= RIGHTTOP_SYM)||(LA564_0 >= S && LA564_0 <= Z)) ) {
						alt564=1;
					}

					} finally {dbg.exitDecision(564);}

					switch (alt564) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(419,52);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop564;
					}
				}
				} finally {dbg.exitSubRule(564);}
				dbg.location(419,63);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred5_Css31299); if (state.failed) return;dbg.location(419,70);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:70: (~ ( LBRACE | SEMI ) )*
				try { dbg.enterSubRule(565);

				loop565:
				while (true) {
					int alt565=2;
					try { dbg.enterDecision(565, decisionCanBacktrack[565]);

					int LA565_0 = input.LA(1);
					if ( ((LA565_0 >= A && LA565_0 <= LAYER_SYM)||(LA565_0 >= LBRACKET && LA565_0 <= SASS_WHILE)||(LA565_0 >= SOLIDUS && LA565_0 <= Z)) ) {
						alt565=1;
					}

					} finally {dbg.exitDecision(565);}

					switch (alt565) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(419,70);
						if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop565;
					}
				}
				} finally {dbg.exitSubRule(565);}
				dbg.location(419,86);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred5_Css31309); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred5_Css3

	// $ANTLR start synpred6_Css3
	public final void synpred6_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(421,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred6_Css31327);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(421,22);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:22: ( ( ws )? IMPORTANT_SYM )?
		int alt568=2;
		try { dbg.enterSubRule(568);
		try { dbg.enterDecision(568, decisionCanBacktrack[568]);

		try {
			isCyclicDecision = true;
			alt568 = dfa568.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(568);}

		switch (alt568) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(421,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:23: ( ws )?
				int alt567=2;
				try { dbg.enterSubRule(567);
				try { dbg.enterDecision(567, decisionCanBacktrack[567]);

				int LA567_0 = input.LA(1);
				if ( (LA567_0==COMMENT||LA567_0==NL||LA567_0==WS) ) {
					alt567=1;
				}
				} finally {dbg.exitDecision(567);}

				switch (alt567) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:23: ws
						{
						dbg.location(421,23);
						pushFollow(FOLLOW_ws_in_synpred6_Css31330);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(567);}
				dbg.location(421,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred6_Css31333); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(568);}
		dbg.location(421,43);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:43: ( ws )?
		int alt569=2;
		try { dbg.enterSubRule(569);
		try { dbg.enterDecision(569, decisionCanBacktrack[569]);

		int LA569_0 = input.LA(1);
		if ( (LA569_0==COMMENT||LA569_0==NL||LA569_0==WS) ) {
			alt569=1;
		}
		} finally {dbg.exitDecision(569);}

		switch (alt569) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:43: ws
				{
				dbg.location(421,43);
				pushFollow(FOLLOW_ws_in_synpred6_Css31337);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(569);}
		dbg.location(421,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred6_Css31340); if (state.failed) return;
		}

	}
	// $ANTLR end synpred6_Css3

	// $ANTLR start synpred7_Css3
	public final void synpred7_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:8: cp_mixin_call
		{
		dbg.location(422,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred7_Css31363);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred7_Css3

	// $ANTLR start synpred8_Css3
	public final void synpred8_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(423,8);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt575=3;
		try { dbg.enterSubRule(575);
		try { dbg.enterDecision(575, decisionCanBacktrack[575]);

		try {
			isCyclicDecision = true;
			alt575 = dfa575.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(575);}

		switch (alt575) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(423,9);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(423,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css31388); if (state.failed) return;dbg.location(423,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:23: ( ws selectorsGroup )?
				int alt570=2;
				try { dbg.enterSubRule(570);
				try { dbg.enterDecision(570, decisionCanBacktrack[570]);

				try {
					isCyclicDecision = true;
					alt570 = dfa570.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(570);}

				switch (alt570) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:24: ws selectorsGroup
						{
						dbg.location(423,24);
						pushFollow(FOLLOW_ws_in_synpred8_Css31391);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(423,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css31393);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(570);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(423,48);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(423,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css31402); if (state.failed) return;dbg.location(423,62);
				pushFollow(FOLLOW_ws_in_synpred8_Css31404);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(423,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred8_Css31406); if (state.failed) return;dbg.location(423,72);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:72: ( ws )?
				int alt571=2;
				try { dbg.enterSubRule(571);
				try { dbg.enterDecision(571, decisionCanBacktrack[571]);

				int LA571_0 = input.LA(1);
				if ( (LA571_0==COMMENT||LA571_0==NL||LA571_0==WS) ) {
					alt571=1;
				}
				} finally {dbg.exitDecision(571);}

				switch (alt571) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:72: ws
						{
						dbg.location(423,72);
						pushFollow(FOLLOW_ws_in_synpred8_Css31408);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(571);}
				dbg.location(423,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css31411); if (state.failed) return;dbg.location(423,82);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:82: ( ws )?
				int alt572=2;
				try { dbg.enterSubRule(572);
				try { dbg.enterDecision(572, decisionCanBacktrack[572]);

				int LA572_0 = input.LA(1);
				if ( (LA572_0==COMMENT||LA572_0==NL||LA572_0==WS) ) {
					alt572=1;
				}
				} finally {dbg.exitDecision(572);}

				switch (alt572) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:82: ws
						{
						dbg.location(423,82);
						pushFollow(FOLLOW_ws_in_synpred8_Css31413);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(572);}
				dbg.location(423,86);
				match(input,COLON,FOLLOW_COLON_in_synpred8_Css31416); if (state.failed) return;dbg.location(423,92);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:92: ( ws )?
				int alt573=2;
				try { dbg.enterSubRule(573);
				try { dbg.enterDecision(573, decisionCanBacktrack[573]);

				int LA573_0 = input.LA(1);
				if ( (LA573_0==COMMENT||LA573_0==NL||LA573_0==WS) ) {
					alt573=1;
				}
				} finally {dbg.exitDecision(573);}

				switch (alt573) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:92: ws
						{
						dbg.location(423,92);
						pushFollow(FOLLOW_ws_in_synpred8_Css31418);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(573);}
				dbg.location(423,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css31421); if (state.failed) return;dbg.location(423,102);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:102: ( ws )?
				int alt574=2;
				try { dbg.enterSubRule(574);
				try { dbg.enterDecision(574, decisionCanBacktrack[574]);

				int LA574_0 = input.LA(1);
				if ( (LA574_0==COMMENT||LA574_0==NL||LA574_0==WS) ) {
					alt574=1;
				}
				} finally {dbg.exitDecision(574);}

				switch (alt574) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:102: ws
						{
						dbg.location(423,102);
						pushFollow(FOLLOW_ws_in_synpred8_Css31423);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(574);}
				dbg.location(423,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred8_Css31426); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:116: selectorsGroup
				{
				dbg.location(423,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css31431);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(575);}
		dbg.location(423,132);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:132: ( ws )?
		int alt576=2;
		try { dbg.enterSubRule(576);
		try { dbg.enterDecision(576, decisionCanBacktrack[576]);

		int LA576_0 = input.LA(1);
		if ( (LA576_0==COMMENT||LA576_0==NL||LA576_0==WS) ) {
			alt576=1;
		}
		} finally {dbg.exitDecision(576);}

		switch (alt576) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:132: ws
				{
				dbg.location(423,132);
				pushFollow(FOLLOW_ws_in_synpred8_Css31434);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(576);}
		dbg.location(423,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred8_Css31437); if (state.failed) return;
		}

	}
	// $ANTLR end synpred8_Css3

	// $ANTLR start synpred9_Css3
	public final void synpred9_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:8: propertyDeclaration
		{
		dbg.location(424,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred9_Css31449);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred9_Css3

	// $ANTLR start synpred10_Css3
	public final void synpred10_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:17: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:18: ( ws )? COMMA
		{
		dbg.location(439,18);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:18: ( ws )?
		int alt577=2;
		try { dbg.enterSubRule(577);
		try { dbg.enterDecision(577, decisionCanBacktrack[577]);

		int LA577_0 = input.LA(1);
		if ( (LA577_0==COMMENT||LA577_0==NL||LA577_0==WS) ) {
			alt577=1;
		}
		} finally {dbg.exitDecision(577);}

		switch (alt577) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:18: ws
				{
				dbg.location(439,18);
				pushFollow(FOLLOW_ws_in_synpred10_Css31564);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(577);}
		dbg.location(439,22);
		match(input,COMMA,FOLLOW_COMMA_in_synpred10_Css31567); if (state.failed) return;
		}

	}
	// $ANTLR end synpred10_Css3

	// $ANTLR start synpred11_Css3
	public final void synpred11_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:44: ( ( ws )? key_and )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:45: ( ws )? key_and
		{
		dbg.location(444,45);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:45: ( ws )?
		int alt578=2;
		try { dbg.enterSubRule(578);
		try { dbg.enterDecision(578, decisionCanBacktrack[578]);

		int LA578_0 = input.LA(1);
		if ( (LA578_0==COMMENT||LA578_0==NL||LA578_0==WS) ) {
			alt578=1;
		}
		} finally {dbg.exitDecision(578);}

		switch (alt578) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:45: ws
				{
				dbg.location(444,45);
				pushFollow(FOLLOW_ws_in_synpred11_Css31611);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(578);}
		dbg.location(444,49);
		pushFollow(FOLLOW_key_and_in_synpred11_Css31614);
		key_and();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred11_Css3

	// $ANTLR start synpred12_Css3
	public final void synpred12_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:24: ( ( ws )? key_and )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:25: ( ws )? key_and
		{
		dbg.location(445,25);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:25: ( ws )?
		int alt579=2;
		try { dbg.enterSubRule(579);
		try { dbg.enterDecision(579, decisionCanBacktrack[579]);

		int LA579_0 = input.LA(1);
		if ( (LA579_0==COMMENT||LA579_0==NL||LA579_0==WS) ) {
			alt579=1;
		}
		} finally {dbg.exitDecision(579);}

		switch (alt579) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:25: ws
				{
				dbg.location(445,25);
				pushFollow(FOLLOW_ws_in_synpred12_Css31641);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(579);}
		dbg.location(445,29);
		pushFollow(FOLLOW_key_and_in_synpred12_Css31644);
		key_and();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred12_Css3

	// $ANTLR start synpred13_Css3
	public final void synpred13_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: ( LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:6: LPAREN
		{
		dbg.location(459,6);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred13_Css31726); if (state.failed) return;
		}

	}
	// $ANTLR end synpred13_Css3

	// $ANTLR start synpred14_Css3
	public final void synpred14_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:7: ( HASH )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:8: HASH
		{
		dbg.location(460,8);
		match(input,HASH,FOLLOW_HASH_in_synpred14_Css31755); if (state.failed) return;
		}

	}
	// $ANTLR end synpred14_Css3

	// $ANTLR start synpred15_Css3
	public final void synpred15_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:22: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:23: ( ws )? SEMI
		{
		dbg.location(480,23);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:23: ( ws )?
		int alt580=2;
		try { dbg.enterSubRule(580);
		try { dbg.enterDecision(580, decisionCanBacktrack[580]);

		int LA580_0 = input.LA(1);
		if ( (LA580_0==COMMENT||LA580_0==NL||LA580_0==WS) ) {
			alt580=1;
		}
		} finally {dbg.exitDecision(580);}

		switch (alt580) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:23: ws
				{
				dbg.location(480,23);
				pushFollow(FOLLOW_ws_in_synpred15_Css31901);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(580);}
		dbg.location(480,27);
		match(input,SEMI,FOLLOW_SEMI_in_synpred15_Css31904); if (state.failed) return;
		}

	}
	// $ANTLR end synpred15_Css3

	// $ANTLR start synpred16_Css3
	public final void synpred16_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )
		int alt585=2;
		try { dbg.enterDecision(585, decisionCanBacktrack[585]);

		int LA585_0 = input.LA(1);
		if ( (LA585_0==SASS_MIXIN) ) {
			alt585=1;
		}
		else if ( (LA585_0==DOT||LA585_0==HASH) ) {
			alt585=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 585, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(585);}

		switch (alt585) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:10: SASS_MIXIN
				{
				dbg.location(488,10);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred16_Css31979); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(488,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:24: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE
				{
				dbg.location(488,24);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:24: ( ( DOT IDENT ) | HASH )
				int alt581=2;
				try { dbg.enterSubRule(581);
				try { dbg.enterDecision(581, decisionCanBacktrack[581]);

				int LA581_0 = input.LA(1);
				if ( (LA581_0==DOT) ) {
					alt581=1;
				}
				else if ( (LA581_0==HASH) ) {
					alt581=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 581, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(581);}

				switch (alt581) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:25: ( DOT IDENT )
						{
						dbg.location(488,25);
						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:25: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:26: DOT IDENT
						{
						dbg.location(488,26);
						match(input,DOT,FOLLOW_DOT_in_synpred16_Css31986); if (state.failed) return;dbg.location(488,30);
						match(input,IDENT,FOLLOW_IDENT_in_synpred16_Css31988); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:39: HASH
						{
						dbg.location(488,39);
						match(input,HASH,FOLLOW_HASH_in_synpred16_Css31993); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(581);}
				dbg.location(488,45);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:45: ( ws )?
				int alt582=2;
				try { dbg.enterSubRule(582);
				try { dbg.enterDecision(582, decisionCanBacktrack[582]);

				int LA582_0 = input.LA(1);
				if ( (LA582_0==COMMENT||LA582_0==NL||LA582_0==WS) ) {
					alt582=1;
				}
				} finally {dbg.exitDecision(582);}

				switch (alt582) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:45: ws
						{
						dbg.location(488,45);
						pushFollow(FOLLOW_ws_in_synpred16_Css31996);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(582);}
				dbg.location(488,49);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred16_Css31999); if (state.failed) return;dbg.location(488,56);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:56: (~ RPAREN )*
				try { dbg.enterSubRule(583);

				loop583:
				while (true) {
					int alt583=2;
					try { dbg.enterDecision(583, decisionCanBacktrack[583]);

					int LA583_0 = input.LA(1);
					if ( ((LA583_0 >= A && LA583_0 <= RIGHTTOP_SYM)||(LA583_0 >= S && LA583_0 <= Z)) ) {
						alt583=1;
					}

					} finally {dbg.exitDecision(583);}

					switch (alt583) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(488,56);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop583;
					}
				}
				} finally {dbg.exitSubRule(583);}
				dbg.location(488,67);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred16_Css32007); if (state.failed) return;dbg.location(488,74);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:74: (~ ( LBRACE | RBRACE | SEMI ) )*
				try { dbg.enterSubRule(584);

				loop584:
				while (true) {
					int alt584=2;
					try { dbg.enterDecision(584, decisionCanBacktrack[584]);

					int LA584_0 = input.LA(1);
					if ( ((LA584_0 >= A && LA584_0 <= LAYER_SYM)||(LA584_0 >= LBRACKET && LA584_0 <= R)||(LA584_0 >= RBRACKET && LA584_0 <= SASS_WHILE)||(LA584_0 >= SOLIDUS && LA584_0 <= Z)) ) {
						alt584=1;
					}

					} finally {dbg.exitDecision(584);}

					switch (alt584) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(488,74);
						if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop584;
					}
				}
				} finally {dbg.exitSubRule(584);}
				dbg.location(488,97);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred16_Css32019); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred16_Css3

	// $ANTLR start synpred17_Css3
	public final void synpred17_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:11: ( cp_mixin_call ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:12: cp_mixin_call ( ws )? SEMI
		{
		dbg.location(490,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred17_Css32045);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(490,26);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:26: ( ws )?
		int alt586=2;
		try { dbg.enterSubRule(586);
		try { dbg.enterDecision(586, decisionCanBacktrack[586]);

		int LA586_0 = input.LA(1);
		if ( (LA586_0==COMMENT||LA586_0==NL||LA586_0==WS) ) {
			alt586=1;
		}
		} finally {dbg.exitDecision(586);}

		switch (alt586) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:26: ws
				{
				dbg.location(490,26);
				pushFollow(FOLLOW_ws_in_synpred17_Css32047);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(586);}
		dbg.location(490,30);
		match(input,SEMI,FOLLOW_SEMI_in_synpred17_Css32050); if (state.failed) return;
		}

	}
	// $ANTLR end synpred17_Css3

	// $ANTLR start synpred18_Css3
	public final void synpred18_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:11: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:12: cp_mixin_call
		{
		dbg.location(491,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred18_Css32069);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred18_Css3

	// $ANTLR start synpred19_Css3
	public final void synpred19_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:11: ( cp_variable ( ws )? COLON )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:12: cp_variable ( ws )? COLON
		{
		dbg.location(493,12);
		pushFollow(FOLLOW_cp_variable_in_synpred19_Css32097);
		cp_variable();
		state._fsp--;
		if (state.failed) return;dbg.location(493,24);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:24: ( ws )?
		int alt587=2;
		try { dbg.enterSubRule(587);
		try { dbg.enterDecision(587, decisionCanBacktrack[587]);

		int LA587_0 = input.LA(1);
		if ( (LA587_0==COMMENT||LA587_0==NL||LA587_0==WS) ) {
			alt587=1;
		}
		} finally {dbg.exitDecision(587);}

		switch (alt587) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:24: ws
				{
				dbg.location(493,24);
				pushFollow(FOLLOW_ws_in_synpred19_Css32099);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(587);}
		dbg.location(493,28);
		match(input,COLON,FOLLOW_COLON_in_synpred19_Css32102); if (state.failed) return;
		}

	}
	// $ANTLR end synpred19_Css3

	// $ANTLR start synpred20_Css3
	public final void synpred20_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:494:11: ( sass_map )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:494:12: sass_map
		{
		dbg.location(494,12);
		pushFollow(FOLLOW_sass_map_in_synpred20_Css32119);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred20_Css3

	// $ANTLR start synpred21_Css3
	public final void synpred21_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:2: ( LPAREN ( ws )? supportsCondition ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:2: LPAREN ( ws )? supportsCondition ( ws )? RPAREN
		{
		dbg.location(534,2);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred21_Css32409); if (state.failed) return;dbg.location(534,9);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:9: ( ws )?
		int alt588=2;
		try { dbg.enterSubRule(588);
		try { dbg.enterDecision(588, decisionCanBacktrack[588]);

		int LA588_0 = input.LA(1);
		if ( (LA588_0==COMMENT||LA588_0==NL||LA588_0==WS) ) {
			alt588=1;
		}
		} finally {dbg.exitDecision(588);}

		switch (alt588) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:9: ws
				{
				dbg.location(534,9);
				pushFollow(FOLLOW_ws_in_synpred21_Css32411);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(588);}
		dbg.location(534,13);
		pushFollow(FOLLOW_supportsCondition_in_synpred21_Css32414);
		supportsCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(534,31);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:31: ( ws )?
		int alt589=2;
		try { dbg.enterSubRule(589);
		try { dbg.enterDecision(589, decisionCanBacktrack[589]);

		int LA589_0 = input.LA(1);
		if ( (LA589_0==COMMENT||LA589_0==NL||LA589_0==WS) ) {
			alt589=1;
		}
		} finally {dbg.exitDecision(589);}

		switch (alt589) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:31: ws
				{
				dbg.location(534,31);
				pushFollow(FOLLOW_ws_in_synpred21_Css32416);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(589);}
		dbg.location(534,35);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred21_Css32419); if (state.failed) return;
		}

	}
	// $ANTLR end synpred21_Css3

	// $ANTLR start synpred22_Css3
	public final void synpred22_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:535:4: ( supportsFeature )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:535:4: supportsFeature
		{
		dbg.location(535,4);
		pushFollow(FOLLOW_supportsFeature_in_synpred22_Css32424);
		supportsFeature();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred22_Css3

	// $ANTLR start synpred23_Css3
	public final void synpred23_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:2: ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:3: CONTAINER_SYM ws containerCondition ( ws )? LBRACE
		{
		dbg.location(553,3);
		match(input,CONTAINER_SYM,FOLLOW_CONTAINER_SYM_in_synpred23_Css32508); if (state.failed) return;dbg.location(553,17);
		pushFollow(FOLLOW_ws_in_synpred23_Css32510);
		ws();
		state._fsp--;
		if (state.failed) return;dbg.location(553,20);
		pushFollow(FOLLOW_containerCondition_in_synpred23_Css32512);
		containerCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(553,39);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:39: ( ws )?
		int alt590=2;
		try { dbg.enterSubRule(590);
		try { dbg.enterDecision(590, decisionCanBacktrack[590]);

		int LA590_0 = input.LA(1);
		if ( (LA590_0==COMMENT||LA590_0==NL||LA590_0==WS) ) {
			alt590=1;
		}
		} finally {dbg.exitDecision(590);}

		switch (alt590) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:39: ws
				{
				dbg.location(553,39);
				pushFollow(FOLLOW_ws_in_synpred23_Css32514);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(590);}
		dbg.location(553,43);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred23_Css32517); if (state.failed) return;
		}

	}
	// $ANTLR end synpred23_Css3

	// $ANTLR start synpred24_Css3
	public final void synpred24_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:2: ( LPAREN ( ws )? containerCondition ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:2: LPAREN ( ws )? containerCondition ( ws )? RPAREN
		{
		dbg.location(579,2);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred24_Css32765); if (state.failed) return;dbg.location(579,9);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:9: ( ws )?
		int alt591=2;
		try { dbg.enterSubRule(591);
		try { dbg.enterDecision(591, decisionCanBacktrack[591]);

		int LA591_0 = input.LA(1);
		if ( (LA591_0==COMMENT||LA591_0==NL||LA591_0==WS) ) {
			alt591=1;
		}
		} finally {dbg.exitDecision(591);}

		switch (alt591) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:9: ws
				{
				dbg.location(579,9);
				pushFollow(FOLLOW_ws_in_synpred24_Css32767);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(591);}
		dbg.location(579,13);
		pushFollow(FOLLOW_containerCondition_in_synpred24_Css32770);
		containerCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(579,32);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:32: ( ws )?
		int alt592=2;
		try { dbg.enterSubRule(592);
		try { dbg.enterDecision(592, decisionCanBacktrack[592]);

		int LA592_0 = input.LA(1);
		if ( (LA592_0==COMMENT||LA592_0==NL||LA592_0==WS) ) {
			alt592=1;
		}
		} finally {dbg.exitDecision(592);}

		switch (alt592) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:32: ws
				{
				dbg.location(579,32);
				pushFollow(FOLLOW_ws_in_synpred24_Css32772);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(592);}
		dbg.location(579,36);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred24_Css32775); if (state.failed) return;
		}

	}
	// $ANTLR end synpred24_Css3

	// $ANTLR start synpred25_Css3
	public final void synpred25_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:4: ( sizeFeature )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:4: sizeFeature
		{
		dbg.location(580,4);
		pushFollow(FOLLOW_sizeFeature_in_synpred25_Css32780);
		sizeFeature();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred25_Css3

	// $ANTLR start synpred26_Css3
	public final void synpred26_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:4: ({...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:4: {...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN
		{
		dbg.location(581,4);
		if ( !(evalPredicate(tokenNameEquals("style"),"tokenNameEquals(\"style\")")) ) {
			if (state.backtracking>0) {state.failed=true; return;}
			throw new FailedPredicateException(input, "synpred26_Css3", "tokenNameEquals(\"style\")");
		}dbg.location(581,32);
		match(input,IDENT,FOLLOW_IDENT_in_synpred26_Css32787); if (state.failed) return;dbg.location(581,38);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:38: ( ws )?
		int alt593=2;
		try { dbg.enterSubRule(593);
		try { dbg.enterDecision(593, decisionCanBacktrack[593]);

		int LA593_0 = input.LA(1);
		if ( (LA593_0==COMMENT||LA593_0==NL||LA593_0==WS) ) {
			alt593=1;
		}
		} finally {dbg.exitDecision(593);}

		switch (alt593) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:38: ws
				{
				dbg.location(581,38);
				pushFollow(FOLLOW_ws_in_synpred26_Css32789);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(593);}
		dbg.location(581,42);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred26_Css32792); if (state.failed) return;dbg.location(581,49);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:49: ( ws )?
		int alt594=2;
		try { dbg.enterSubRule(594);
		try { dbg.enterDecision(594, decisionCanBacktrack[594]);

		int LA594_0 = input.LA(1);
		if ( (LA594_0==COMMENT||LA594_0==NL||LA594_0==WS) ) {
			alt594=1;
		}
		} finally {dbg.exitDecision(594);}

		switch (alt594) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:49: ws
				{
				dbg.location(581,49);
				pushFollow(FOLLOW_ws_in_synpred26_Css32794);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(594);}
		dbg.location(581,53);
		pushFollow(FOLLOW_styleQuery_in_synpred26_Css32797);
		styleQuery();
		state._fsp--;
		if (state.failed) return;dbg.location(581,64);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:64: ( ws )?
		int alt595=2;
		try { dbg.enterSubRule(595);
		try { dbg.enterDecision(595, decisionCanBacktrack[595]);

		int LA595_0 = input.LA(1);
		if ( (LA595_0==COMMENT||LA595_0==NL||LA595_0==WS) ) {
			alt595=1;
		}
		} finally {dbg.exitDecision(595);}

		switch (alt595) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:64: ws
				{
				dbg.location(581,64);
				pushFollow(FOLLOW_ws_in_synpred26_Css32799);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(595);}
		dbg.location(581,68);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred26_Css32802); if (state.failed) return;
		}

	}
	// $ANTLR end synpred26_Css3

	// $ANTLR start synpred27_Css3
	public final void synpred27_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:9: ( LPAREN ( ws )? styleCondition ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:9: LPAREN ( ws )? styleCondition ( ws )? RPAREN
		{
		dbg.location(617,9);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred27_Css33093); if (state.failed) return;dbg.location(617,16);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:16: ( ws )?
		int alt596=2;
		try { dbg.enterSubRule(596);
		try { dbg.enterDecision(596, decisionCanBacktrack[596]);

		int LA596_0 = input.LA(1);
		if ( (LA596_0==COMMENT||LA596_0==NL||LA596_0==WS) ) {
			alt596=1;
		}
		} finally {dbg.exitDecision(596);}

		switch (alt596) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:16: ws
				{
				dbg.location(617,16);
				pushFollow(FOLLOW_ws_in_synpred27_Css33095);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(596);}
		dbg.location(617,20);
		pushFollow(FOLLOW_styleCondition_in_synpred27_Css33098);
		styleCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(617,35);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:35: ( ws )?
		int alt597=2;
		try { dbg.enterSubRule(597);
		try { dbg.enterDecision(597, decisionCanBacktrack[597]);

		int LA597_0 = input.LA(1);
		if ( (LA597_0==COMMENT||LA597_0==NL||LA597_0==WS) ) {
			alt597=1;
		}
		} finally {dbg.exitDecision(597);}

		switch (alt597) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:35: ws
				{
				dbg.location(617,35);
				pushFollow(FOLLOW_ws_in_synpred27_Css33100);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(597);}
		dbg.location(617,39);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred27_Css33103); if (state.failed) return;
		}

	}
	// $ANTLR end synpred27_Css3

	// $ANTLR start synpred28_Css3
	public final void synpred28_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:11: ( LPAREN ( ws )? styleFeature ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:11: LPAREN ( ws )? styleFeature ( ws )? RPAREN
		{
		dbg.location(618,11);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred28_Css33115); if (state.failed) return;dbg.location(618,18);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:18: ( ws )?
		int alt598=2;
		try { dbg.enterSubRule(598);
		try { dbg.enterDecision(598, decisionCanBacktrack[598]);

		int LA598_0 = input.LA(1);
		if ( (LA598_0==COMMENT||LA598_0==NL||LA598_0==WS) ) {
			alt598=1;
		}
		} finally {dbg.exitDecision(598);}

		switch (alt598) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:18: ws
				{
				dbg.location(618,18);
				pushFollow(FOLLOW_ws_in_synpred28_Css33117);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(598);}
		dbg.location(618,22);
		pushFollow(FOLLOW_styleFeature_in_synpred28_Css33120);
		styleFeature();
		state._fsp--;
		if (state.failed) return;dbg.location(618,35);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:35: ( ws )?
		int alt599=2;
		try { dbg.enterSubRule(599);
		try { dbg.enterDecision(599, decisionCanBacktrack[599]);

		int LA599_0 = input.LA(1);
		if ( (LA599_0==COMMENT||LA599_0==NL||LA599_0==WS) ) {
			alt599=1;
		}
		} finally {dbg.exitDecision(599);}

		switch (alt599) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:35: ws
				{
				dbg.location(618,35);
				pushFollow(FOLLOW_ws_in_synpred28_Css33122);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(599);}
		dbg.location(618,39);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred28_Css33125); if (state.failed) return;
		}

	}
	// $ANTLR end synpred28_Css3

	// $ANTLR start synpred29_Css3
	public final void synpred29_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:9: ( LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:9: LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN
		{
		dbg.location(626,9);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred29_Css33195); if (state.failed) return;dbg.location(626,16);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:16: ( ws )?
		int alt600=2;
		try { dbg.enterSubRule(600);
		try { dbg.enterDecision(600, decisionCanBacktrack[600]);

		int LA600_0 = input.LA(1);
		if ( (LA600_0==COMMENT||LA600_0==NL||LA600_0==WS) ) {
			alt600=1;
		}
		} finally {dbg.exitDecision(600);}

		switch (alt600) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:16: ws
				{
				dbg.location(626,16);
				pushFollow(FOLLOW_ws_in_synpred29_Css33197);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(600);}
		dbg.location(626,20);
		pushFollow(FOLLOW_sizeFeatureFixedValue_in_synpred29_Css33200);
		sizeFeatureFixedValue();
		state._fsp--;
		if (state.failed) return;dbg.location(626,42);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:42: ( ws )?
		int alt601=2;
		try { dbg.enterSubRule(601);
		try { dbg.enterDecision(601, decisionCanBacktrack[601]);

		int LA601_0 = input.LA(1);
		if ( (LA601_0==COMMENT||LA601_0==NL||LA601_0==WS) ) {
			alt601=1;
		}
		} finally {dbg.exitDecision(601);}

		switch (alt601) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:42: ws
				{
				dbg.location(626,42);
				pushFollow(FOLLOW_ws_in_synpred29_Css33202);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(601);}
		dbg.location(626,46);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred29_Css33205); if (state.failed) return;
		}

	}
	// $ANTLR end synpred29_Css3

	// $ANTLR start synpred30_Css3
	public final void synpred30_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:11: ( LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:11: LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN
		{
		dbg.location(627,11);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred30_Css33217); if (state.failed) return;dbg.location(627,18);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:18: ( ws )?
		int alt602=2;
		try { dbg.enterSubRule(602);
		try { dbg.enterDecision(602, decisionCanBacktrack[602]);

		int LA602_0 = input.LA(1);
		if ( (LA602_0==COMMENT||LA602_0==NL||LA602_0==WS) ) {
			alt602=1;
		}
		} finally {dbg.exitDecision(602);}

		switch (alt602) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:18: ws
				{
				dbg.location(627,18);
				pushFollow(FOLLOW_ws_in_synpred30_Css33219);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(602);}
		dbg.location(627,22);
		pushFollow(FOLLOW_sizeFeatureRangeSingle_in_synpred30_Css33222);
		sizeFeatureRangeSingle();
		state._fsp--;
		if (state.failed) return;dbg.location(627,45);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:45: ( ws )?
		int alt603=2;
		try { dbg.enterSubRule(603);
		try { dbg.enterDecision(603, decisionCanBacktrack[603]);

		int LA603_0 = input.LA(1);
		if ( (LA603_0==COMMENT||LA603_0==NL||LA603_0==WS) ) {
			alt603=1;
		}
		} finally {dbg.exitDecision(603);}

		switch (alt603) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:45: ws
				{
				dbg.location(627,45);
				pushFollow(FOLLOW_ws_in_synpred30_Css33224);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(603);}
		dbg.location(627,49);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred30_Css33227); if (state.failed) return;
		}

	}
	// $ANTLR end synpred30_Css3

	// $ANTLR start synpred31_Css3
	public final void synpred31_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:11: ( LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:11: LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN
		{
		dbg.location(628,11);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred31_Css33239); if (state.failed) return;dbg.location(628,18);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:18: ( ws )?
		int alt604=2;
		try { dbg.enterSubRule(604);
		try { dbg.enterDecision(604, decisionCanBacktrack[604]);

		int LA604_0 = input.LA(1);
		if ( (LA604_0==COMMENT||LA604_0==NL||LA604_0==WS) ) {
			alt604=1;
		}
		} finally {dbg.exitDecision(604);}

		switch (alt604) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:18: ws
				{
				dbg.location(628,18);
				pushFollow(FOLLOW_ws_in_synpred31_Css33241);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(604);}
		dbg.location(628,22);
		pushFollow(FOLLOW_sizeFeatureRangeBetweenLt_in_synpred31_Css33244);
		sizeFeatureRangeBetweenLt();
		state._fsp--;
		if (state.failed) return;dbg.location(628,48);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:48: ( ws )?
		int alt605=2;
		try { dbg.enterSubRule(605);
		try { dbg.enterDecision(605, decisionCanBacktrack[605]);

		int LA605_0 = input.LA(1);
		if ( (LA605_0==COMMENT||LA605_0==NL||LA605_0==WS) ) {
			alt605=1;
		}
		} finally {dbg.exitDecision(605);}

		switch (alt605) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:48: ws
				{
				dbg.location(628,48);
				pushFollow(FOLLOW_ws_in_synpred31_Css33246);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(605);}
		dbg.location(628,52);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred31_Css33249); if (state.failed) return;
		}

	}
	// $ANTLR end synpred31_Css3

	// $ANTLR start synpred32_Css3
	public final void synpred32_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:27: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:28: ( ws )? COMMA
		{
		dbg.location(856,28);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:28: ( ws )?
		int alt606=2;
		try { dbg.enterSubRule(606);
		try { dbg.enterDecision(606, decisionCanBacktrack[606]);

		int LA606_0 = input.LA(1);
		if ( (LA606_0==COMMENT||LA606_0==NL||LA606_0==WS) ) {
			alt606=1;
		}
		} finally {dbg.exitDecision(606);}

		switch (alt606) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:28: ws
				{
				dbg.location(856,28);
				pushFollow(FOLLOW_ws_in_synpred32_Css35066);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(606);}
		dbg.location(856,32);
		match(input,COMMA,FOLLOW_COMMA_in_synpred32_Css35069); if (state.failed) return;
		}

	}
	// $ANTLR end synpred32_Css3

	// $ANTLR start synpred33_Css3
	public final void synpred33_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:41: ( function )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:42: function
		{
		dbg.location(864,42);
		pushFollow(FOLLOW_function_in_synpred33_Css35160);
		function();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred33_Css3

	// $ANTLR start synpred34_Css3
	public final void synpred34_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:5: ( cp_variable_declaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:6: cp_variable_declaration
		{
		dbg.location(892,6);
		pushFollow(FOLLOW_cp_variable_declaration_in_synpred34_Css35460);
		cp_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred34_Css3

	// $ANTLR start synpred35_Css3
	public final void synpred35_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:7: ( sass_map )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:8: sass_map
		{
		dbg.location(893,8);
		pushFollow(FOLLOW_sass_map_in_synpred35_Css35472);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred35_Css3

	// $ANTLR start synpred36_Css3
	public final void synpred36_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:894:7: ( sass_nested_properties )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:894:8: sass_nested_properties
		{
		dbg.location(894,8);
		pushFollow(FOLLOW_sass_nested_properties_in_synpred36_Css35485);
		sass_nested_properties();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_Css3

	// $ANTLR start synpred37_Css3
	public final void synpred37_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(895,8);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt612=3;
		try { dbg.enterSubRule(612);
		try { dbg.enterDecision(612, decisionCanBacktrack[612]);

		try {
			isCyclicDecision = true;
			alt612 = dfa612.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(612);}

		switch (alt612) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(895,9);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(895,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred37_Css35499); if (state.failed) return;dbg.location(895,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:23: ( ws selectorsGroup )?
				int alt607=2;
				try { dbg.enterSubRule(607);
				try { dbg.enterDecision(607, decisionCanBacktrack[607]);

				try {
					isCyclicDecision = true;
					alt607 = dfa607.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(607);}

				switch (alt607) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:24: ws selectorsGroup
						{
						dbg.location(895,24);
						pushFollow(FOLLOW_ws_in_synpred37_Css35502);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(895,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred37_Css35504);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(607);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(895,48);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(895,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred37_Css35513); if (state.failed) return;dbg.location(895,62);
				pushFollow(FOLLOW_ws_in_synpred37_Css35515);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(895,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred37_Css35517); if (state.failed) return;dbg.location(895,72);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:72: ( ws )?
				int alt608=2;
				try { dbg.enterSubRule(608);
				try { dbg.enterDecision(608, decisionCanBacktrack[608]);

				int LA608_0 = input.LA(1);
				if ( (LA608_0==COMMENT||LA608_0==NL||LA608_0==WS) ) {
					alt608=1;
				}
				} finally {dbg.exitDecision(608);}

				switch (alt608) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:72: ws
						{
						dbg.location(895,72);
						pushFollow(FOLLOW_ws_in_synpred37_Css35519);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(608);}
				dbg.location(895,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred37_Css35522); if (state.failed) return;dbg.location(895,82);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:82: ( ws )?
				int alt609=2;
				try { dbg.enterSubRule(609);
				try { dbg.enterDecision(609, decisionCanBacktrack[609]);

				int LA609_0 = input.LA(1);
				if ( (LA609_0==COMMENT||LA609_0==NL||LA609_0==WS) ) {
					alt609=1;
				}
				} finally {dbg.exitDecision(609);}

				switch (alt609) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:82: ws
						{
						dbg.location(895,82);
						pushFollow(FOLLOW_ws_in_synpred37_Css35524);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(609);}
				dbg.location(895,86);
				match(input,COLON,FOLLOW_COLON_in_synpred37_Css35527); if (state.failed) return;dbg.location(895,92);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:92: ( ws )?
				int alt610=2;
				try { dbg.enterSubRule(610);
				try { dbg.enterDecision(610, decisionCanBacktrack[610]);

				int LA610_0 = input.LA(1);
				if ( (LA610_0==COMMENT||LA610_0==NL||LA610_0==WS) ) {
					alt610=1;
				}
				} finally {dbg.exitDecision(610);}

				switch (alt610) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:92: ws
						{
						dbg.location(895,92);
						pushFollow(FOLLOW_ws_in_synpred37_Css35529);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(610);}
				dbg.location(895,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred37_Css35532); if (state.failed) return;dbg.location(895,102);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:102: ( ws )?
				int alt611=2;
				try { dbg.enterSubRule(611);
				try { dbg.enterDecision(611, decisionCanBacktrack[611]);

				int LA611_0 = input.LA(1);
				if ( (LA611_0==COMMENT||LA611_0==NL||LA611_0==WS) ) {
					alt611=1;
				}
				} finally {dbg.exitDecision(611);}

				switch (alt611) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:102: ws
						{
						dbg.location(895,102);
						pushFollow(FOLLOW_ws_in_synpred37_Css35534);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(611);}
				dbg.location(895,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred37_Css35537); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:116: selectorsGroup
				{
				dbg.location(895,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred37_Css35542);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(612);}
		dbg.location(895,132);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:132: ( ws )?
		int alt613=2;
		try { dbg.enterSubRule(613);
		try { dbg.enterDecision(613, decisionCanBacktrack[613]);

		int LA613_0 = input.LA(1);
		if ( (LA613_0==COMMENT||LA613_0==NL||LA613_0==WS) ) {
			alt613=1;
		}
		} finally {dbg.exitDecision(613);}

		switch (alt613) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:132: ws
				{
				dbg.location(895,132);
				pushFollow(FOLLOW_ws_in_synpred37_Css35545);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(613);}
		dbg.location(895,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred37_Css35548); if (state.failed) return;
		}

	}
	// $ANTLR end synpred37_Css3

	// $ANTLR start synpred38_Css3
	public final void synpred38_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:8: propertyDeclaration
		{
		dbg.location(896,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred38_Css35560);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred38_Css3

	// $ANTLR start synpred39_Css3
	public final void synpred39_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:8: property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI )
		{
		dbg.location(898,8);
		pushFollow(FOLLOW_property_in_synpred39_Css35577);
		property();
		state._fsp--;
		if (state.failed) return;dbg.location(898,17);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:17: ( ws )?
		int alt614=2;
		try { dbg.enterSubRule(614);
		try { dbg.enterDecision(614, decisionCanBacktrack[614]);

		int LA614_0 = input.LA(1);
		if ( (LA614_0==COMMENT||LA614_0==NL||LA614_0==WS) ) {
			alt614=1;
		}
		} finally {dbg.exitDecision(614);}

		switch (alt614) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:17: ws
				{
				dbg.location(898,17);
				pushFollow(FOLLOW_ws_in_synpred39_Css35579);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(614);}
		dbg.location(898,21);
		match(input,COLON,FOLLOW_COLON_in_synpred39_Css35582); if (state.failed) return;dbg.location(898,27);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:27: (~ ( LBRACE | SEMI | RBRACE ) )*
		try { dbg.enterSubRule(615);

		loop615:
		while (true) {
			int alt615=2;
			try { dbg.enterDecision(615, decisionCanBacktrack[615]);

			int LA615_0 = input.LA(1);
			if ( ((LA615_0 >= A && LA615_0 <= LAYER_SYM)||(LA615_0 >= LBRACKET && LA615_0 <= R)||(LA615_0 >= RBRACKET && LA615_0 <= SASS_WHILE)||(LA615_0 >= SOLIDUS && LA615_0 <= Z)) ) {
				alt615=1;
			}

			} finally {dbg.exitDecision(615);}

			switch (alt615) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(898,27);
				if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop615;
			}
		}
		} finally {dbg.exitSubRule(615);}
		dbg.location(898,50);
		if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred39_Css3

	// $ANTLR start synpred40_Css3
	public final void synpred40_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:7: ( cp_mixin_declaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:8: cp_mixin_declaration
		{
		dbg.location(899,8);
		pushFollow(FOLLOW_cp_mixin_declaration_in_synpred40_Css35611);
		cp_mixin_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred40_Css3

	// $ANTLR start synpred41_Css3
	public final void synpred41_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:8: cp_mixin_call
		{
		dbg.location(900,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred41_Css35623);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred41_Css3

	// $ANTLR start synpred42_Css3
	public final void synpred42_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:901:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:901:8: cp_mixin_call
		{
		dbg.location(901,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred42_Css35644);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred42_Css3

	// $ANTLR start synpred43_Css3
	public final void synpred43_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:65: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:66: ( ws )? esPred
		{
		dbg.location(935,66);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:66: ( ws )?
		int alt616=2;
		try { dbg.enterSubRule(616);
		try { dbg.enterDecision(616, decisionCanBacktrack[616]);

		int LA616_0 = input.LA(1);
		if ( (LA616_0==COMMENT||LA616_0==NL||LA616_0==WS) ) {
			alt616=1;
		}
		} finally {dbg.exitDecision(616);}

		switch (alt616) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:66: ws
				{
				dbg.location(935,66);
				pushFollow(FOLLOW_ws_in_synpred43_Css35942);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(616);}
		dbg.location(935,70);
		pushFollow(FOLLOW_esPred_in_synpred43_Css35945);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred43_Css3

	// $ANTLR start synpred44_Css3
	public final void synpred44_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:4: ( typeSelector )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:5: typeSelector
		{
		dbg.location(936,5);
		pushFollow(FOLLOW_typeSelector_in_synpred44_Css35980);
		typeSelector();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred44_Css3

	// $ANTLR start synpred45_Css3
	public final void synpred45_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:34: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:35: ( ws )? esPred
		{
		dbg.location(936,35);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:35: ( ws )?
		int alt617=2;
		try { dbg.enterSubRule(617);
		try { dbg.enterDecision(617, decisionCanBacktrack[617]);

		int LA617_0 = input.LA(1);
		if ( (LA617_0==COMMENT||LA617_0==NL||LA617_0==WS) ) {
			alt617=1;
		}
		} finally {dbg.exitDecision(617);}

		switch (alt617) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:35: ws
				{
				dbg.location(936,35);
				pushFollow(FOLLOW_ws_in_synpred45_Css35987);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(617);}
		dbg.location(936,39);
		pushFollow(FOLLOW_esPred_in_synpred45_Css35990);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred45_Css3

	// $ANTLR start synpred46_Css3
	public final void synpred46_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:7: ( ( IDENT | STAR )? PIPE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:8: ( IDENT | STAR )? PIPE
		{
		dbg.location(950,8);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:8: ( IDENT | STAR )?
		int alt618=2;
		try { dbg.enterSubRule(618);
		try { dbg.enterDecision(618, decisionCanBacktrack[618]);

		int LA618_0 = input.LA(1);
		if ( (LA618_0==IDENT||LA618_0==STAR) ) {
			alt618=1;
		}
		} finally {dbg.exitDecision(618);}

		switch (alt618) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(950,8);
				if ( input.LA(1)==IDENT||input.LA(1)==STAR ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

		}
		} finally {dbg.exitSubRule(618);}
		dbg.location(950,24);
		match(input,PIPE,FOLLOW_PIPE_in_synpred46_Css36101); if (state.failed) return;
		}

	}
	// $ANTLR end synpred46_Css3

	// $ANTLR start synpred47_Css3
	public final void synpred47_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:58: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:59: functionName ( ws )? LPAREN
		{
		dbg.location(1105,59);
		pushFollow(FOLLOW_functionName_in_synpred47_Css37662);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(1105,72);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:72: ( ws )?
		int alt619=2;
		try { dbg.enterSubRule(619);
		try { dbg.enterDecision(619, decisionCanBacktrack[619]);

		int LA619_0 = input.LA(1);
		if ( (LA619_0==COMMENT||LA619_0==NL||LA619_0==WS) ) {
			alt619=1;
		}
		} finally {dbg.exitDecision(619);}

		switch (alt619) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1105:72: ws
				{
				dbg.location(1105,72);
				pushFollow(FOLLOW_ws_in_synpred47_Css37664);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(619);}
		dbg.location(1105,76);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred47_Css37667); if (state.failed) return;
		}

	}
	// $ANTLR end synpred47_Css3

	// $ANTLR start synpred48_Css3
	public final void synpred48_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:64: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:65: functionName ( ws )? LPAREN
		{
		dbg.location(1107,65);
		pushFollow(FOLLOW_functionName_in_synpred48_Css37697);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(1107,78);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:78: ( ws )?
		int alt620=2;
		try { dbg.enterSubRule(620);
		try { dbg.enterDecision(620, decisionCanBacktrack[620]);

		int LA620_0 = input.LA(1);
		if ( (LA620_0==COMMENT||LA620_0==NL||LA620_0==WS) ) {
			alt620=1;
		}
		} finally {dbg.exitDecision(620);}

		switch (alt620) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:78: ws
				{
				dbg.location(1107,78);
				pushFollow(FOLLOW_ws_in_synpred48_Css37699);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(620);}
		dbg.location(1107,82);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred48_Css37702); if (state.failed) return;
		}

	}
	// $ANTLR end synpred48_Css3

	// $ANTLR start synpred49_Css3
	public final void synpred49_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:15: ( ws | ( ( ws )? operator ( ws )? ) |) term
		{
		dbg.location(1147,15);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:15: ( ws | ( ( ws )? operator ( ws )? ) |)
		int alt623=3;
		try { dbg.enterSubRule(623);
		try { dbg.enterDecision(623, decisionCanBacktrack[623]);

		try {
			isCyclicDecision = true;
			alt623 = dfa623.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(623);}

		switch (alt623) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:17: ws
				{
				dbg.location(1147,17);
				pushFollow(FOLLOW_ws_in_synpred49_Css37872);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:22: ( ( ws )? operator ( ws )? )
				{
				dbg.location(1147,22);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:22: ( ( ws )? operator ( ws )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:23: ( ws )? operator ( ws )?
				{
				dbg.location(1147,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:23: ( ws )?
				int alt621=2;
				try { dbg.enterSubRule(621);
				try { dbg.enterDecision(621, decisionCanBacktrack[621]);

				int LA621_0 = input.LA(1);
				if ( (LA621_0==COMMENT||LA621_0==NL||LA621_0==WS) ) {
					alt621=1;
				}
				} finally {dbg.exitDecision(621);}

				switch (alt621) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:23: ws
						{
						dbg.location(1147,23);
						pushFollow(FOLLOW_ws_in_synpred49_Css37877);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(621);}
				dbg.location(1147,27);
				pushFollow(FOLLOW_operator_in_synpred49_Css37880);
				operator();
				state._fsp--;
				if (state.failed) return;dbg.location(1147,36);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:36: ( ws )?
				int alt622=2;
				try { dbg.enterSubRule(622);
				try { dbg.enterDecision(622, decisionCanBacktrack[622]);

				int LA622_0 = input.LA(1);
				if ( (LA622_0==COMMENT||LA622_0==NL||LA622_0==WS) ) {
					alt622=1;
				}
				} finally {dbg.exitDecision(622);}

				switch (alt622) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:36: ws
						{
						dbg.location(1147,36);
						pushFollow(FOLLOW_ws_in_synpred49_Css37882);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(622);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:56: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(623);}
		dbg.location(1147,58);
		pushFollow(FOLLOW_term_in_synpred49_Css37891);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred49_Css3

	// $ANTLR start synpred50_Css3
	public final void synpred50_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:9: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:10: functionName ( ws )? LPAREN
		{
		dbg.location(1154,10);
		pushFollow(FOLLOW_functionName_in_synpred50_Css37964);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(1154,23);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:23: ( ws )?
		int alt624=2;
		try { dbg.enterSubRule(624);
		try { dbg.enterDecision(624, decisionCanBacktrack[624]);

		int LA624_0 = input.LA(1);
		if ( (LA624_0==COMMENT||LA624_0==NL||LA624_0==WS) ) {
			alt624=1;
		}
		} finally {dbg.exitDecision(624);}

		switch (alt624) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:23: ws
				{
				dbg.location(1154,23);
				pushFollow(FOLLOW_ws_in_synpred50_Css37966);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(624);}
		dbg.location(1154,27);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred50_Css37969); if (state.failed) return;
		}

	}
	// $ANTLR end synpred50_Css3

	// $ANTLR start synpred51_Css3
	public final void synpred51_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:10: fnAttributeName ( ws )? ( OPEQ | COLON )
		{
		dbg.location(1220,10);
		pushFollow(FOLLOW_fnAttributeName_in_synpred51_Css38576);
		fnAttributeName();
		state._fsp--;
		if (state.failed) return;dbg.location(1220,26);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:26: ( ws )?
		int alt625=2;
		try { dbg.enterSubRule(625);
		try { dbg.enterDecision(625, decisionCanBacktrack[625]);

		int LA625_0 = input.LA(1);
		if ( (LA625_0==COMMENT||LA625_0==NL||LA625_0==WS) ) {
			alt625=1;
		}
		} finally {dbg.exitDecision(625);}

		switch (alt625) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:26: ws
				{
				dbg.location(1220,26);
				pushFollow(FOLLOW_ws_in_synpred51_Css38578);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(625);}
		dbg.location(1220,30);
		if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred51_Css3

	// $ANTLR start synpred52_Css3
	public final void synpred52_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:11: ( cp_expression )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:12: cp_expression
		{
		dbg.location(1221,12);
		pushFollow(FOLLOW_cp_expression_in_synpred52_Css38616);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred52_Css3

	// $ANTLR start synpred53_Css3
	public final void synpred53_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
		{
		dbg.location(1233,21);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
		int alt628=3;
		try { dbg.enterSubRule(628);
		try { dbg.enterDecision(628, decisionCanBacktrack[628]);

		try {
			isCyclicDecision = true;
			alt628 = dfa628.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(628);}

		switch (alt628) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:23: ws
				{
				dbg.location(1233,23);
				pushFollow(FOLLOW_ws_in_synpred53_Css38710);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:28: ( ( ws )? SOLIDUS ( ws )? )
				{
				dbg.location(1233,28);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:28: ( ( ws )? SOLIDUS ( ws )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:29: ( ws )? SOLIDUS ( ws )?
				{
				dbg.location(1233,29);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:29: ( ws )?
				int alt626=2;
				try { dbg.enterSubRule(626);
				try { dbg.enterDecision(626, decisionCanBacktrack[626]);

				int LA626_0 = input.LA(1);
				if ( (LA626_0==COMMENT||LA626_0==NL||LA626_0==WS) ) {
					alt626=1;
				}
				} finally {dbg.exitDecision(626);}

				switch (alt626) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:29: ws
						{
						dbg.location(1233,29);
						pushFollow(FOLLOW_ws_in_synpred53_Css38715);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(626);}
				dbg.location(1233,33);
				match(input,SOLIDUS,FOLLOW_SOLIDUS_in_synpred53_Css38718); if (state.failed) return;dbg.location(1233,41);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:41: ( ws )?
				int alt627=2;
				try { dbg.enterSubRule(627);
				try { dbg.enterDecision(627, decisionCanBacktrack[627]);

				int LA627_0 = input.LA(1);
				if ( (LA627_0==COMMENT||LA627_0==NL||LA627_0==WS) ) {
					alt627=1;
				}
				} finally {dbg.exitDecision(627);}

				switch (alt627) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:41: ws
						{
						dbg.location(1233,41);
						pushFollow(FOLLOW_ws_in_synpred53_Css38720);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(627);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:61: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(628);}
		dbg.location(1233,63);
		pushFollow(FOLLOW_term_in_synpred53_Css38729);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred53_Css3

	// $ANTLR start synpred55_Css3
	public final void synpred55_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:6: ( ( ws )? COMMA ( ws )? cp_expression )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:7: ( ws )? COMMA ( ws )? cp_expression
		{
		dbg.location(1268,7);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:7: ( ws )?
		int alt629=2;
		try { dbg.enterSubRule(629);
		try { dbg.enterDecision(629, decisionCanBacktrack[629]);

		int LA629_0 = input.LA(1);
		if ( (LA629_0==COMMENT||LA629_0==NL||LA629_0==WS) ) {
			alt629=1;
		}
		} finally {dbg.exitDecision(629);}

		switch (alt629) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:7: ws
				{
				dbg.location(1268,7);
				pushFollow(FOLLOW_ws_in_synpred55_Css39185);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(629);}
		dbg.location(1268,11);
		match(input,COMMA,FOLLOW_COMMA_in_synpred55_Css39188); if (state.failed) return;dbg.location(1268,17);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:17: ( ws )?
		int alt630=2;
		try { dbg.enterSubRule(630);
		try { dbg.enterDecision(630, decisionCanBacktrack[630]);

		int LA630_0 = input.LA(1);
		if ( (LA630_0==COMMENT||LA630_0==NL||LA630_0==WS) ) {
			alt630=1;
		}
		} finally {dbg.exitDecision(630);}

		switch (alt630) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:17: ws
				{
				dbg.location(1268,17);
				pushFollow(FOLLOW_ws_in_synpred55_Css39190);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(630);}
		dbg.location(1268,21);
		pushFollow(FOLLOW_cp_expression_in_synpred55_Css39193);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred55_Css3

	// $ANTLR start synpred56_Css3
	public final void synpred56_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1284:7: ( cp_expression_atom )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1284:8: cp_expression_atom
		{
		dbg.location(1284,8);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred56_Css39260);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred56_Css3

	// $ANTLR start synpred57_Css3
	public final void synpred57_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:9: ( ( ws )? cp_expression_operator )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:10: ( ws )? cp_expression_operator
		{
		dbg.location(1286,10);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:10: ( ws )?
		int alt631=2;
		try { dbg.enterSubRule(631);
		try { dbg.enterDecision(631, decisionCanBacktrack[631]);

		int LA631_0 = input.LA(1);
		if ( (LA631_0==COMMENT||LA631_0==NL||LA631_0==WS) ) {
			alt631=1;
		}
		} finally {dbg.exitDecision(631);}

		switch (alt631) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:10: ws
				{
				dbg.location(1286,10);
				pushFollow(FOLLOW_ws_in_synpred57_Css39283);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(631);}
		dbg.location(1286,14);
		pushFollow(FOLLOW_cp_expression_operator_in_synpred57_Css39286);
		cp_expression_operator();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred57_Css3

	// $ANTLR start synpred58_Css3
	public final void synpred58_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:11: ( ( ws )? cp_expression_atom )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:12: ( ws )? cp_expression_atom
		{
		dbg.location(1287,12);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:12: ( ws )?
		int alt632=2;
		try { dbg.enterSubRule(632);
		try { dbg.enterDecision(632, decisionCanBacktrack[632]);

		int LA632_0 = input.LA(1);
		if ( (LA632_0==COMMENT||LA632_0==NL||LA632_0==WS) ) {
			alt632=1;
		}
		} finally {dbg.exitDecision(632);}

		switch (alt632) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:12: ws
				{
				dbg.location(1287,12);
				pushFollow(FOLLOW_ws_in_synpred58_Css39312);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(632);}
		dbg.location(1287,16);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred58_Css39315);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred58_Css3

	// $ANTLR start synpred59_Css3
	public final void synpred59_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:13: ( cp_math_expression )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:14: cp_math_expression
		{
		dbg.location(1301,14);
		pushFollow(FOLLOW_cp_math_expression_in_synpred59_Css39455);
		cp_math_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred59_Css3

	// $ANTLR start synpred60_Css3
	public final void synpred60_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:14: ( ws )? ( PLUS | MINUS | STAR | SOLIDUS )
		{
		dbg.location(1328,14);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:14: ( ws )?
		int alt633=2;
		try { dbg.enterSubRule(633);
		try { dbg.enterDecision(633, decisionCanBacktrack[633]);

		int LA633_0 = input.LA(1);
		if ( (LA633_0==COMMENT||LA633_0==NL||LA633_0==WS) ) {
			alt633=1;
		}
		} finally {dbg.exitDecision(633);}

		switch (alt633) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1328:14: ws
				{
				dbg.location(1328,14);
				pushFollow(FOLLOW_ws_in_synpred60_Css39588);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(633);}
		dbg.location(1328,18);
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred60_Css3

	// $ANTLR start synpred61_Css3
	public final void synpred61_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:77: ( ( ws )? combinator ( ws )? )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:78: ( ws )? combinator ( ws )?
		{
		dbg.location(1360,78);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:78: ( ws )?
		int alt634=2;
		try { dbg.enterSubRule(634);
		try { dbg.enterDecision(634, decisionCanBacktrack[634]);

		int LA634_0 = input.LA(1);
		if ( (LA634_0==COMMENT||LA634_0==NL||LA634_0==WS) ) {
			alt634=1;
		}
		} finally {dbg.exitDecision(634);}

		switch (alt634) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:78: ws
				{
				dbg.location(1360,78);
				pushFollow(FOLLOW_ws_in_synpred61_Css39880);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(634);}
		dbg.location(1360,82);
		pushFollow(FOLLOW_combinator_in_synpred61_Css39883);
		combinator();
		state._fsp--;
		if (state.failed) return;dbg.location(1360,93);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:93: ( ws )?
		int alt635=2;
		try { dbg.enterSubRule(635);
		try { dbg.enterDecision(635, decisionCanBacktrack[635]);

		int LA635_0 = input.LA(1);
		if ( (LA635_0==COMMENT||LA635_0==NL||LA635_0==WS) ) {
			alt635=1;
		}
		} finally {dbg.exitDecision(635);}

		switch (alt635) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:93: ws
				{
				dbg.location(1360,93);
				pushFollow(FOLLOW_ws_in_synpred61_Css39885);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(635);}

		}

	}
	// $ANTLR end synpred61_Css3

	// $ANTLR start synpred62_Css3
	public final void synpred62_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:172: ( pseudo )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:173: pseudo
		{
		dbg.location(1360,173);
		pushFollow(FOLLOW_pseudo_in_synpred62_Css39921);
		pseudo();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred62_Css3

	// $ANTLR start synpred63_Css3
	public final void synpred63_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:191: ( ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:192: ( ws )? LPAREN
		{
		dbg.location(1360,192);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:192: ( ws )?
		int alt636=2;
		try { dbg.enterSubRule(636);
		try { dbg.enterDecision(636, decisionCanBacktrack[636]);

		int LA636_0 = input.LA(1);
		if ( (LA636_0==COMMENT||LA636_0==NL||LA636_0==WS) ) {
			alt636=1;
		}
		} finally {dbg.exitDecision(636);}

		switch (alt636) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1360:192: ws
				{
				dbg.location(1360,192);
				pushFollow(FOLLOW_ws_in_synpred63_Css39929);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(636);}
		dbg.location(1360,196);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred63_Css39932); if (state.failed) return;
		}

	}
	// $ANTLR end synpred63_Css3

	// $ANTLR start synpred64_Css3
	public final void synpred64_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:25: ( webkitKeyframeSelectors )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:26: webkitKeyframeSelectors
		{
		dbg.location(1369,26);
		pushFollow(FOLLOW_webkitKeyframeSelectors_in_synpred64_Css310048);
		webkitKeyframeSelectors();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred64_Css3

	// $ANTLR start synpred65_Css3
	public final void synpred65_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:19: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:20: ( ws )? COMMA
		{
		dbg.location(1547,20);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:20: ( ws )?
		int alt637=2;
		try { dbg.enterSubRule(637);
		try { dbg.enterDecision(637, decisionCanBacktrack[637]);

		int LA637_0 = input.LA(1);
		if ( (LA637_0==COMMENT||LA637_0==NL||LA637_0==WS) ) {
			alt637=1;
		}
		} finally {dbg.exitDecision(637);}

		switch (alt637) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:20: ws
				{
				dbg.location(1547,20);
				pushFollow(FOLLOW_ws_in_synpred65_Css311293);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(637);}
		dbg.location(1547,24);
		match(input,COMMA,FOLLOW_COMMA_in_synpred65_Css311296); if (state.failed) return;
		}

	}
	// $ANTLR end synpred65_Css3

	// Delegated rules

	public final boolean synpred53_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred53_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred59_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred59_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred14_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred22_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred9_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred45_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred45_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred4_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred37_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred61_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred61_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred62_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred62_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred19_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred23_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred31_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred15_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred32_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred35_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred35_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred38_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred43_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred43_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred46_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred46_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred18_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred27_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred21_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred29_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred40_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred40_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred16_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred24_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred13_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred10_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred6_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred3_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred11_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred11_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred50_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred50_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred56_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred56_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred17_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred42_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred42_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred48_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred48_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred64_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred64_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred7_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred34_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred51_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred51_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred1_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred26_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred57_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred57_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred12_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred49_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred49_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred20_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred65_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred65_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred8_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred2_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred63_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred63_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred5_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred41_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred41_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred44_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred44_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred58_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred58_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred30_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred55_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred55_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred47_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred47_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred36_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred39_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred33_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred25_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred60_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred60_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred52_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred52_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred28_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA3 dfa3 = new DFA3(this);
	protected DFA5 dfa5 = new DFA5(this);
	protected DFA7 dfa7 = new DFA7(this);
	protected DFA10 dfa10 = new DFA10(this);
	protected DFA44 dfa44 = new DFA44(this);
	protected DFA32 dfa32 = new DFA32(this);
	protected DFA47 dfa47 = new DFA47(this);
	protected DFA48 dfa48 = new DFA48(this);
	protected DFA49 dfa49 = new DFA49(this);
	protected DFA54 dfa54 = new DFA54(this);
	protected DFA59 dfa59 = new DFA59(this);
	protected DFA58 dfa58 = new DFA58(this);
	protected DFA60 dfa60 = new DFA60(this);
	protected DFA61 dfa61 = new DFA61(this);
	protected DFA66 dfa66 = new DFA66(this);
	protected DFA72 dfa72 = new DFA72(this);
	protected DFA75 dfa75 = new DFA75(this);
	protected DFA81 dfa81 = new DFA81(this);
	protected DFA87 dfa87 = new DFA87(this);
	protected DFA89 dfa89 = new DFA89(this);
	protected DFA93 dfa93 = new DFA93(this);
	protected DFA106 dfa106 = new DFA106(this);
	protected DFA115 dfa115 = new DFA115(this);
	protected DFA124 dfa124 = new DFA124(this);
	protected DFA126 dfa126 = new DFA126(this);
	protected DFA127 dfa127 = new DFA127(this);
	protected DFA141 dfa141 = new DFA141(this);
	protected DFA143 dfa143 = new DFA143(this);
	protected DFA144 dfa144 = new DFA144(this);
	protected DFA154 dfa154 = new DFA154(this);
	protected DFA155 dfa155 = new DFA155(this);
	protected DFA173 dfa173 = new DFA173(this);
	protected DFA186 dfa186 = new DFA186(this);
	protected DFA224 dfa224 = new DFA224(this);
	protected DFA236 dfa236 = new DFA236(this);
	protected DFA235 dfa235 = new DFA235(this);
	protected DFA255 dfa255 = new DFA255(this);
	protected DFA257 dfa257 = new DFA257(this);
	protected DFA262 dfa262 = new DFA262(this);
	protected DFA267 dfa267 = new DFA267(this);
	protected DFA273 dfa273 = new DFA273(this);
	protected DFA268 dfa268 = new DFA268(this);
	protected DFA290 dfa290 = new DFA290(this);
	protected DFA283 dfa283 = new DFA283(this);
	protected DFA282 dfa282 = new DFA282(this);
	protected DFA287 dfa287 = new DFA287(this);
	protected DFA292 dfa292 = new DFA292(this);
	protected DFA294 dfa294 = new DFA294(this);
	protected DFA298 dfa298 = new DFA298(this);
	protected DFA306 dfa306 = new DFA306(this);
	protected DFA305 dfa305 = new DFA305(this);
	protected DFA304 dfa304 = new DFA304(this);
	protected DFA310 dfa310 = new DFA310(this);
	protected DFA313 dfa313 = new DFA313(this);
	protected DFA336 dfa336 = new DFA336(this);
	protected DFA359 dfa359 = new DFA359(this);
	protected DFA372 dfa372 = new DFA372(this);
	protected DFA371 dfa371 = new DFA371(this);
	protected DFA386 dfa386 = new DFA386(this);
	protected DFA396 dfa396 = new DFA396(this);
	protected DFA395 dfa395 = new DFA395(this);
	protected DFA405 dfa405 = new DFA405(this);
	protected DFA411 dfa411 = new DFA411(this);
	protected DFA417 dfa417 = new DFA417(this);
	protected DFA431 dfa431 = new DFA431(this);
	protected DFA436 dfa436 = new DFA436(this);
	protected DFA443 dfa443 = new DFA443(this);
	protected DFA447 dfa447 = new DFA447(this);
	protected DFA462 dfa462 = new DFA462(this);
	protected DFA464 dfa464 = new DFA464(this);
	protected DFA477 dfa477 = new DFA477(this);
	protected DFA480 dfa480 = new DFA480(this);
	protected DFA496 dfa496 = new DFA496(this);
	protected DFA525 dfa525 = new DFA525(this);
	protected DFA526 dfa526 = new DFA526(this);
	protected DFA532 dfa532 = new DFA532(this);
	protected DFA540 dfa540 = new DFA540(this);
	protected DFA539 dfa539 = new DFA539(this);
	protected DFA543 dfa543 = new DFA543(this);
	protected DFA548 dfa548 = new DFA548(this);
	protected DFA568 dfa568 = new DFA568(this);
	protected DFA575 dfa575 = new DFA575(this);
	protected DFA570 dfa570 = new DFA570(this);
	protected DFA612 dfa612 = new DFA612(this);
	protected DFA607 dfa607 = new DFA607(this);
	protected DFA623 dfa623 = new DFA623(this);
	protected DFA628 dfa628 = new DFA628(this);
	static final String DFA3_eotS =
		"\5\uffff";
	static final String DFA3_eofS =
		"\1\2\4\uffff";
	static final String DFA3_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA3_maxS =
		"\1\u0099\1\u009a\1\uffff\1\u009a\1\uffff";
	static final String DFA3_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA3_specialS =
		"\5\uffff}>";
	static final String[] DFA3_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\1\1\1\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff"+
			"\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff\1\2",
			"\1\2\1\uffff\1\3\76\uffff\1\3\62\uffff\1\4\22\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\76\uffff\1\3\62\uffff\1\4\22\uffff\1\3",
			""
	};

	static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
	static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
	static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
	static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
	static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
	static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
	static final short[][] DFA3_transition;

	static {
		int numStates = DFA3_transitionS.length;
		DFA3_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
		}
	}

	protected class DFA3 extends DFA {

		public DFA3(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 3;
			this.eot = DFA3_eot;
			this.eof = DFA3_eof;
			this.min = DFA3_min;
			this.max = DFA3_max;
			this.accept = DFA3_accept;
			this.special = DFA3_special;
			this.transition = DFA3_transition;
		}
		@Override
		public String getDescription() {
			return "287:6: ( charSet ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA5_eotS =
		"\20\uffff";
	static final String DFA5_eofS =
		"\1\2\17\uffff";
	static final String DFA5_minS =
		"\1\6\1\25\1\uffff\1\25\1\24\1\25\1\64\1\24\1\25\1\uffff\1\24\1\25\1\24"+
		"\1\64\2\24";
	static final String DFA5_maxS =
		"\1\u0099\1\u009a\1\uffff\3\u009a\1\64\2\u009a\1\uffff\3\u009a\1\64\2\u009a";
	static final String DFA5_acceptS =
		"\2\uffff\1\2\6\uffff\1\1\6\uffff";
	static final String DFA5_specialS =
		"\20\uffff}>";
	static final String[] DFA5_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\1\1\1\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff"+
			"\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff\6\2\1\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff\1\2",
			"\1\3\76\uffff\1\3\105\uffff\1\3",
			"",
			"\1\5\36\uffff\1\4\10\uffff\1\2\26\uffff\1\5\105\uffff\1\5",
			"\1\10\1\7\12\uffff\1\6\34\uffff\1\2\26\uffff\1\7\57\uffff\1\11\25\uffff"+
			"\1\7",
			"\1\5\36\uffff\1\4\10\uffff\1\2\26\uffff\1\5\105\uffff\1\5",
			"\1\12",
			"\1\10\1\7\47\uffff\1\2\26\uffff\1\7\105\uffff\1\7",
			"\1\13\36\uffff\1\14\37\uffff\1\13\105\uffff\1\13",
			"",
			"\1\10\1\7\12\uffff\1\6\34\uffff\1\2\26\uffff\1\7\57\uffff\1\11\25\uffff"+
			"\1\7",
			"\1\13\36\uffff\1\14\37\uffff\1\13\105\uffff\1\13",
			"\1\10\1\16\12\uffff\1\15\63\uffff\1\16\57\uffff\1\11\25\uffff\1\16",
			"\1\17",
			"\1\10\1\16\76\uffff\1\16\105\uffff\1\16",
			"\1\10\1\16\12\uffff\1\15\63\uffff\1\16\57\uffff\1\11\25\uffff\1\16"
	};

	static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
	static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
	static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
	static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
	static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
	static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
	static final short[][] DFA5_transition;

	static {
		int numStates = DFA5_transitionS.length;
		DFA5_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
		}
	}

	protected class DFA5 extends DFA {

		public DFA5(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 5;
			this.eot = DFA5_eot;
			this.eof = DFA5_eof;
			this.min = DFA5_min;
			this.max = DFA5_max;
			this.accept = DFA5_accept;
			this.special = DFA5_special;
			this.transition = DFA5_transition;
		}
		@Override
		public String getDescription() {
			return "288:9: ( layerStatement ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA7_eotS =
		"\5\uffff";
	static final String DFA7_eofS =
		"\1\2\4\uffff";
	static final String DFA7_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA7_maxS =
		"\1\u0099\1\u009a\1\uffff\1\u009a\1\uffff";
	static final String DFA7_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA7_specialS =
		"\5\uffff}>";
	static final String[] DFA7_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\1\11\uffff\1\2\2\uffff\2\2\6\uffff"+
			"\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff\6\2\1\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff\1\2",
			"\1\2\1\uffff\1\3\36\uffff\1\4\37\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\36\uffff\1\4\37\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			""
	};

	static final short[] DFA7_eot = DFA.unpackEncodedString(DFA7_eotS);
	static final short[] DFA7_eof = DFA.unpackEncodedString(DFA7_eofS);
	static final char[] DFA7_min = DFA.unpackEncodedStringToUnsignedChars(DFA7_minS);
	static final char[] DFA7_max = DFA.unpackEncodedStringToUnsignedChars(DFA7_maxS);
	static final short[] DFA7_accept = DFA.unpackEncodedString(DFA7_acceptS);
	static final short[] DFA7_special = DFA.unpackEncodedString(DFA7_specialS);
	static final short[][] DFA7_transition;

	static {
		int numStates = DFA7_transitionS.length;
		DFA7_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA7_transition[i] = DFA.unpackEncodedString(DFA7_transitionS[i]);
		}
	}

	protected class DFA7 extends DFA {

		public DFA7(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 7;
			this.eot = DFA7_eot;
			this.eof = DFA7_eof;
			this.min = DFA7_min;
			this.max = DFA7_max;
			this.accept = DFA7_accept;
			this.special = DFA7_special;
			this.transition = DFA7_transition;
		}
		@Override
		public String getDescription() {
			return "290:9: ( namespaces )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA10_eotS =
		"\5\uffff";
	static final String DFA10_eofS =
		"\1\1\4\uffff";
	static final String DFA10_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA10_maxS =
		"\1\u0099\1\uffff\2\u009a\1\uffff";
	static final String DFA10_acceptS =
		"\1\uffff\1\2\2\uffff\1\1";
	static final String DFA10_specialS =
		"\5\uffff}>";
	static final String[] DFA10_transitionS = {
			"\2\1\2\uffff\5\1\3\uffff\2\1\2\uffff\1\1\1\uffff\1\1\5\uffff\3\1\7\uffff"+
			"\1\1\2\uffff\2\1\2\uffff\2\1\3\uffff\1\1\1\uffff\1\1\5\uffff\1\1\1\uffff"+
			"\4\1\2\uffff\1\1\6\uffff\3\1\5\uffff\1\2\11\uffff\1\1\2\uffff\2\1\6\uffff"+
			"\3\1\2\uffff\3\1\1\uffff\2\1\2\uffff\5\1\1\uffff\3\1\1\uffff\6\1\1\uffff"+
			"\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\5\1\10\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\36\uffff\1\4\37\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			"\1\1\1\uffff\1\3\36\uffff\1\4\37\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			""
	};

	static final short[] DFA10_eot = DFA.unpackEncodedString(DFA10_eotS);
	static final short[] DFA10_eof = DFA.unpackEncodedString(DFA10_eofS);
	static final char[] DFA10_min = DFA.unpackEncodedStringToUnsignedChars(DFA10_minS);
	static final char[] DFA10_max = DFA.unpackEncodedStringToUnsignedChars(DFA10_maxS);
	static final short[] DFA10_accept = DFA.unpackEncodedString(DFA10_acceptS);
	static final short[] DFA10_special = DFA.unpackEncodedString(DFA10_specialS);
	static final short[][] DFA10_transition;

	static {
		int numStates = DFA10_transitionS.length;
		DFA10_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA10_transition[i] = DFA.unpackEncodedString(DFA10_transitionS[i]);
		}
	}

	protected class DFA10 extends DFA {

		public DFA10(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 10;
			this.eot = DFA10_eot;
			this.eof = DFA10_eof;
			this.min = DFA10_min;
			this.max = DFA10_max;
			this.accept = DFA10_accept;
			this.special = DFA10_special;
			this.transition = DFA10_transition;
		}
		@Override
		public String getDescription() {
			return "()+ loopback of 297:2: ( namespace ( ws )? )+";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA44_eotS =
		"\10\uffff";
	static final String DFA44_eofS =
		"\10\uffff";
	static final String DFA44_minS =
		"\1\66\2\25\1\0\1\uffff\1\0\2\uffff";
	static final String DFA44_maxS =
		"\1\66\2\u009a\1\0\1\uffff\1\0\2\uffff";
	static final String DFA44_acceptS =
		"\4\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA44_specialS =
		"\3\uffff\1\0\1\uffff\1\1\2\uffff}>";
	static final String[] DFA44_transitionS = {
			"\1\1",
			"\1\2\63\uffff\1\4\12\uffff\1\2\62\uffff\1\3\14\uffff\1\3\5\uffff\1\2",
			"\1\2\63\uffff\1\4\12\uffff\1\2\62\uffff\1\5\14\uffff\1\5\5\uffff\1\2",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
	static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
	static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
	static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
	static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
	static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
	static final short[][] DFA44_transition;

	static {
		int numStates = DFA44_transitionS.length;
		DFA44_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
		}
	}

	protected class DFA44 extends DFA {

		public DFA44(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 44;
			this.eot = DFA44_eot;
			this.eof = DFA44_eof;
			this.min = DFA44_min;
			this.max = DFA44_max;
			this.accept = DFA44_accept;
			this.special = DFA44_special;
			this.transition = DFA44_transition;
		}
		@Override
		public String getDescription() {
			return "331:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA44_3 = input.LA(1);
						 
						int index44_3 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index44_3);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA44_5 = input.LA(1);
						 
						int index44_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index44_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 44, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA32_eotS =
		"\4\uffff";
	static final String DFA32_eofS =
		"\2\2\2\uffff";
	static final String DFA32_minS =
		"\2\6\2\uffff";
	static final String DFA32_maxS =
		"\2\u009a\2\uffff";
	static final String DFA32_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA32_specialS =
		"\4\uffff}>";
	static final String[] DFA32_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2"+
			"\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff"+
			"\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2"+
			"\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
	static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
	static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
	static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
	static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
	static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
	static final short[][] DFA32_transition;

	static {
		int numStates = DFA32_transitionS.length;
		DFA32_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
		}
	}

	protected class DFA32 extends DFA {

		public DFA32(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 32;
			this.eot = DFA32_eot;
			this.eof = DFA32_eof;
			this.min = DFA32_min;
			this.max = DFA32_max;
			this.accept = DFA32_accept;
			this.special = DFA32_special;
			this.transition = DFA32_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 336:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA47_eotS =
		"\10\uffff";
	static final String DFA47_eofS =
		"\1\2\7\uffff";
	static final String DFA47_minS =
		"\2\6\1\uffff\1\6\1\23\1\64\1\23\1\uffff";
	static final String DFA47_maxS =
		"\2\u009a\1\uffff\2\u009a\1\u0081\1\u009a\1\uffff";
	static final String DFA47_acceptS =
		"\2\uffff\1\2\4\uffff\1\1";
	static final String DFA47_specialS =
		"\10\uffff}>";
	static final String[] DFA47_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\2\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\1\1\uffff\3\2\5\uffff\2\2\3\uffff\1\2\4\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\2\uffff"+
			"\5\2\1\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\uffff\2\2",
			"\1\2\3\uffff\5\2\3\uffff\1\2\2\uffff\1\3\2\uffff\1\2\17\uffff\1\2\2"+
			"\uffff\1\2\4\uffff\1\2\3\uffff\1\4\1\uffff\1\2\10\uffff\3\2\11\uffff"+
			"\1\2\1\uffff\1\2\5\uffff\1\2\1\3\10\uffff\1\2\12\uffff\3\2\2\uffff\3"+
			"\2\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\10\uffff"+
			"\5\2\10\uffff\1\2\1\3",
			"",
			"\1\2\3\uffff\5\2\3\uffff\1\2\2\uffff\1\3\2\uffff\1\2\17\uffff\1\2\2"+
			"\uffff\1\2\4\uffff\1\2\3\uffff\1\4\1\uffff\1\2\10\uffff\3\2\11\uffff"+
			"\1\2\1\uffff\1\2\5\uffff\1\2\1\3\10\uffff\1\2\12\uffff\3\2\2\uffff\3"+
			"\2\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\10\uffff"+
			"\5\2\10\uffff\1\2\1\3",
			"\1\2\1\uffff\1\6\12\uffff\1\5\63\uffff\1\6\26\uffff\1\7\56\uffff\1\6",
			"\1\7\114\uffff\1\2",
			"\1\2\1\uffff\1\6\76\uffff\1\6\26\uffff\1\7\56\uffff\1\6",
			""
	};

	static final short[] DFA47_eot = DFA.unpackEncodedString(DFA47_eotS);
	static final short[] DFA47_eof = DFA.unpackEncodedString(DFA47_eofS);
	static final char[] DFA47_min = DFA.unpackEncodedStringToUnsignedChars(DFA47_minS);
	static final char[] DFA47_max = DFA.unpackEncodedStringToUnsignedChars(DFA47_maxS);
	static final short[] DFA47_accept = DFA.unpackEncodedString(DFA47_acceptS);
	static final short[] DFA47_special = DFA.unpackEncodedString(DFA47_specialS);
	static final short[][] DFA47_transition;

	static {
		int numStates = DFA47_transitionS.length;
		DFA47_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA47_transition[i] = DFA.unpackEncodedString(DFA47_transitionS[i]);
		}
	}

	protected class DFA47 extends DFA {

		public DFA47(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 47;
			this.eot = DFA47_eot;
			this.eof = DFA47_eof;
			this.min = DFA47_min;
			this.max = DFA47_max;
			this.accept = DFA47_accept;
			this.special = DFA47_special;
			this.transition = DFA47_transition;
		}
		@Override
		public String getDescription() {
			return "343:39: ( LPAREN ( ws )? layerName ( ws )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA48_eotS =
		"\6\uffff";
	static final String DFA48_eofS =
		"\6\uffff";
	static final String DFA48_minS =
		"\2\25\1\uffff\2\25\1\uffff";
	static final String DFA48_maxS =
		"\2\u009a\1\uffff\2\u009a\1\uffff";
	static final String DFA48_acceptS =
		"\2\uffff\1\2\2\uffff\1\1";
	static final String DFA48_specialS =
		"\6\uffff}>";
	static final String[] DFA48_transitionS = {
			"\1\1\76\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\37\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\63\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\36\uffff\1\5\24\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			""
	};

	static final short[] DFA48_eot = DFA.unpackEncodedString(DFA48_eotS);
	static final short[] DFA48_eof = DFA.unpackEncodedString(DFA48_eofS);
	static final char[] DFA48_min = DFA.unpackEncodedStringToUnsignedChars(DFA48_minS);
	static final char[] DFA48_max = DFA.unpackEncodedStringToUnsignedChars(DFA48_maxS);
	static final short[] DFA48_accept = DFA.unpackEncodedString(DFA48_acceptS);
	static final short[] DFA48_special = DFA.unpackEncodedString(DFA48_specialS);
	static final short[][] DFA48_transition;

	static {
		int numStates = DFA48_transitionS.length;
		DFA48_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA48_transition[i] = DFA.unpackEncodedString(DFA48_transitionS[i]);
		}
	}

	protected class DFA48 extends DFA {

		public DFA48(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 48;
			this.eot = DFA48_eot;
			this.eof = DFA48_eof;
			this.min = DFA48_min;
			this.max = DFA48_max;
			this.accept = DFA48_accept;
			this.special = DFA48_special;
			this.transition = DFA48_transition;
		}
		@Override
		public String getDescription() {
			return "348:40: ( ws sass_use_as )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA49_eotS =
		"\4\uffff";
	static final String DFA49_eofS =
		"\4\uffff";
	static final String DFA49_minS =
		"\2\25\2\uffff";
	static final String DFA49_maxS =
		"\2\u009a\2\uffff";
	static final String DFA49_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA49_specialS =
		"\4\uffff}>";
	static final String[] DFA49_transitionS = {
			"\1\1\76\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\37\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA49_eot = DFA.unpackEncodedString(DFA49_eotS);
	static final short[] DFA49_eof = DFA.unpackEncodedString(DFA49_eofS);
	static final char[] DFA49_min = DFA.unpackEncodedStringToUnsignedChars(DFA49_minS);
	static final char[] DFA49_max = DFA.unpackEncodedStringToUnsignedChars(DFA49_maxS);
	static final short[] DFA49_accept = DFA.unpackEncodedString(DFA49_acceptS);
	static final short[] DFA49_special = DFA.unpackEncodedString(DFA49_specialS);
	static final short[][] DFA49_transition;

	static {
		int numStates = DFA49_transitionS.length;
		DFA49_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA49_transition[i] = DFA.unpackEncodedString(DFA49_transitionS[i]);
		}
	}

	protected class DFA49 extends DFA {

		public DFA49(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 49;
			this.eot = DFA49_eot;
			this.eof = DFA49_eof;
			this.min = DFA49_min;
			this.max = DFA49_max;
			this.accept = DFA49_accept;
			this.special = DFA49_special;
			this.transition = DFA49_transition;
		}
		@Override
		public String getDescription() {
			return "348:58: ( ws sass_use_with )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA54_eotS =
		"\4\uffff";
	static final String DFA54_eofS =
		"\4\uffff";
	static final String DFA54_minS =
		"\2\24\2\uffff";
	static final String DFA54_maxS =
		"\2\u009a\2\uffff";
	static final String DFA54_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA54_specialS =
		"\4\uffff}>";
	static final String[] DFA54_transitionS = {
			"\1\3\1\1\76\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\3\1\1\76\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA54_eot = DFA.unpackEncodedString(DFA54_eotS);
	static final short[] DFA54_eof = DFA.unpackEncodedString(DFA54_eofS);
	static final char[] DFA54_min = DFA.unpackEncodedStringToUnsignedChars(DFA54_minS);
	static final char[] DFA54_max = DFA.unpackEncodedStringToUnsignedChars(DFA54_maxS);
	static final short[] DFA54_accept = DFA.unpackEncodedString(DFA54_acceptS);
	static final short[] DFA54_special = DFA.unpackEncodedString(DFA54_specialS);
	static final short[][] DFA54_transition;

	static {
		int numStates = DFA54_transitionS.length;
		DFA54_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA54_transition[i] = DFA.unpackEncodedString(DFA54_transitionS[i]);
		}
	}

	protected class DFA54 extends DFA {

		public DFA54(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 54;
			this.eot = DFA54_eot;
			this.eof = DFA54_eof;
			this.min = DFA54_min;
			this.max = DFA54_max;
			this.accept = DFA54_accept;
			this.special = DFA54_special;
			this.transition = DFA54_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 358:80: ( ( ws )? COMMA ( ws )? sass_use_with_declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA59_eotS =
		"\7\uffff";
	static final String DFA59_eofS =
		"\7\uffff";
	static final String DFA59_minS =
		"\2\25\1\uffff\2\25\1\0\1\uffff";
	static final String DFA59_maxS =
		"\2\u009a\1\uffff\2\u009a\1\0\1\uffff";
	static final String DFA59_acceptS =
		"\2\uffff\1\2\3\uffff\1\1";
	static final String DFA59_specialS =
		"\5\uffff\1\0\1\uffff}>";
	static final String[] DFA59_transitionS = {
			"\1\1\76\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\37\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\63\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\36\uffff\1\5\24\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\uffff",
			""
	};

	static final short[] DFA59_eot = DFA.unpackEncodedString(DFA59_eotS);
	static final short[] DFA59_eof = DFA.unpackEncodedString(DFA59_eofS);
	static final char[] DFA59_min = DFA.unpackEncodedStringToUnsignedChars(DFA59_minS);
	static final char[] DFA59_max = DFA.unpackEncodedStringToUnsignedChars(DFA59_maxS);
	static final short[] DFA59_accept = DFA.unpackEncodedString(DFA59_acceptS);
	static final short[] DFA59_special = DFA.unpackEncodedString(DFA59_specialS);
	static final short[][] DFA59_transition;

	static {
		int numStates = DFA59_transitionS.length;
		DFA59_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA59_transition[i] = DFA.unpackEncodedString(DFA59_transitionS[i]);
		}
	}

	protected class DFA59 extends DFA {

		public DFA59(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 59;
			this.eot = DFA59_eot;
			this.eof = DFA59_eof;
			this.min = DFA59_min;
			this.max = DFA59_max;
			this.accept = DFA59_accept;
			this.special = DFA59_special;
			this.transition = DFA59_transition;
		}
		@Override
		public String getDescription() {
			return "369:44: ( ws ( sass_forward_hide | sass_forward_show ) )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA59_5 = input.LA(1);
						 
						int index59_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate(evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")"),""))) ) {s = 6;}
						else if ( (evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")")) ) {s = 2;}
						 
						input.seek(index59_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 59, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA58_eotS =
		"\6\uffff";
	static final String DFA58_eofS =
		"\6\uffff";
	static final String DFA58_minS =
		"\1\64\2\25\1\0\2\uffff";
	static final String DFA58_maxS =
		"\1\64\2\u009a\1\0\2\uffff";
	static final String DFA58_acceptS =
		"\4\uffff\1\1\1\2";
	static final String DFA58_specialS =
		"\3\uffff\1\0\2\uffff}>";
	static final String[] DFA58_transitionS = {
			"\1\1",
			"\1\2\76\uffff\1\2\105\uffff\1\2",
			"\1\2\36\uffff\1\3\37\uffff\1\2\105\uffff\1\2",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA58_eot = DFA.unpackEncodedString(DFA58_eotS);
	static final short[] DFA58_eof = DFA.unpackEncodedString(DFA58_eofS);
	static final char[] DFA58_min = DFA.unpackEncodedStringToUnsignedChars(DFA58_minS);
	static final char[] DFA58_max = DFA.unpackEncodedStringToUnsignedChars(DFA58_maxS);
	static final short[] DFA58_accept = DFA.unpackEncodedString(DFA58_acceptS);
	static final short[] DFA58_special = DFA.unpackEncodedString(DFA58_specialS);
	static final short[][] DFA58_transition;

	static {
		int numStates = DFA58_transitionS.length;
		DFA58_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA58_transition[i] = DFA.unpackEncodedString(DFA58_transitionS[i]);
		}
	}

	protected class DFA58 extends DFA {

		public DFA58(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 58;
			this.eot = DFA58_eot;
			this.eof = DFA58_eof;
			this.min = DFA58_min;
			this.max = DFA58_max;
			this.accept = DFA58_accept;
			this.special = DFA58_special;
			this.transition = DFA58_transition;
		}
		@Override
		public String getDescription() {
			return "369:49: ( sass_forward_hide | sass_forward_show )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA58_3 = input.LA(1);
						 
						int index58_3 = input.index();
						input.rewind();
						s = -1;
						if ( (evalPredicate(tokenNameEquals("hide"),"tokenNameEquals(\"hide\")")) ) {s = 4;}
						else if ( (evalPredicate(tokenNameEquals("show"),"tokenNameEquals(\"show\")")) ) {s = 5;}
						 
						input.seek(index58_3);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 58, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA60_eotS =
		"\6\uffff";
	static final String DFA60_eofS =
		"\6\uffff";
	static final String DFA60_minS =
		"\2\25\1\uffff\2\25\1\uffff";
	static final String DFA60_maxS =
		"\2\u009a\1\uffff\2\u009a\1\uffff";
	static final String DFA60_acceptS =
		"\2\uffff\1\2\2\uffff\1\1";
	static final String DFA60_specialS =
		"\6\uffff}>";
	static final String[] DFA60_transitionS = {
			"\1\1\76\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\37\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\63\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\36\uffff\1\5\24\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			""
	};

	static final short[] DFA60_eot = DFA.unpackEncodedString(DFA60_eotS);
	static final short[] DFA60_eof = DFA.unpackEncodedString(DFA60_eofS);
	static final char[] DFA60_min = DFA.unpackEncodedStringToUnsignedChars(DFA60_minS);
	static final char[] DFA60_max = DFA.unpackEncodedStringToUnsignedChars(DFA60_maxS);
	static final short[] DFA60_accept = DFA.unpackEncodedString(DFA60_acceptS);
	static final short[] DFA60_special = DFA.unpackEncodedString(DFA60_specialS);
	static final short[][] DFA60_transition;

	static {
		int numStates = DFA60_transitionS.length;
		DFA60_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA60_transition[i] = DFA.unpackEncodedString(DFA60_transitionS[i]);
		}
	}

	protected class DFA60 extends DFA {

		public DFA60(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 60;
			this.eot = DFA60_eot;
			this.eof = DFA60_eof;
			this.min = DFA60_min;
			this.max = DFA60_max;
			this.accept = DFA60_accept;
			this.special = DFA60_special;
			this.transition = DFA60_transition;
		}
		@Override
		public String getDescription() {
			return "369:93: ({...}? ws sass_forward_as )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA61_eotS =
		"\4\uffff";
	static final String DFA61_eofS =
		"\4\uffff";
	static final String DFA61_minS =
		"\2\25\2\uffff";
	static final String DFA61_maxS =
		"\2\u009a\2\uffff";
	static final String DFA61_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA61_specialS =
		"\4\uffff}>";
	static final String[] DFA61_transitionS = {
			"\1\1\76\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\37\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA61_eot = DFA.unpackEncodedString(DFA61_eotS);
	static final short[] DFA61_eof = DFA.unpackEncodedString(DFA61_eofS);
	static final char[] DFA61_min = DFA.unpackEncodedStringToUnsignedChars(DFA61_minS);
	static final char[] DFA61_max = DFA.unpackEncodedStringToUnsignedChars(DFA61_maxS);
	static final short[] DFA61_accept = DFA.unpackEncodedString(DFA61_acceptS);
	static final short[] DFA61_special = DFA.unpackEncodedString(DFA61_specialS);
	static final short[][] DFA61_transition;

	static {
		int numStates = DFA61_transitionS.length;
		DFA61_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA61_transition[i] = DFA.unpackEncodedString(DFA61_transitionS[i]);
		}
	}

	protected class DFA61 extends DFA {

		public DFA61(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 61;
			this.eot = DFA61_eot;
			this.eof = DFA61_eof;
			this.min = DFA61_min;
			this.max = DFA61_max;
			this.accept = DFA61_accept;
			this.special = DFA61_special;
			this.transition = DFA61_transition;
		}
		@Override
		public String getDescription() {
			return "369:141: ({...}? ws sass_forward_with )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA66_eotS =
		"\4\uffff";
	static final String DFA66_eofS =
		"\4\uffff";
	static final String DFA66_minS =
		"\2\24\2\uffff";
	static final String DFA66_maxS =
		"\2\u009a\2\uffff";
	static final String DFA66_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA66_specialS =
		"\4\uffff}>";
	static final String[] DFA66_transitionS = {
			"\1\3\1\1\76\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\3\1\1\76\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA66_eot = DFA.unpackEncodedString(DFA66_eotS);
	static final short[] DFA66_eof = DFA.unpackEncodedString(DFA66_eofS);
	static final char[] DFA66_min = DFA.unpackEncodedStringToUnsignedChars(DFA66_minS);
	static final char[] DFA66_max = DFA.unpackEncodedStringToUnsignedChars(DFA66_maxS);
	static final short[] DFA66_accept = DFA.unpackEncodedString(DFA66_acceptS);
	static final short[] DFA66_special = DFA.unpackEncodedString(DFA66_specialS);
	static final short[][] DFA66_transition;

	static {
		int numStates = DFA66_transitionS.length;
		DFA66_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA66_transition[i] = DFA.unpackEncodedString(DFA66_transitionS[i]);
		}
	}

	protected class DFA66 extends DFA {

		public DFA66(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 66;
			this.eot = DFA66_eot;
			this.eof = DFA66_eof;
			this.min = DFA66_min;
			this.max = DFA66_max;
			this.accept = DFA66_accept;
			this.special = DFA66_special;
			this.transition = DFA66_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 379:84: ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA72_eotS =
		"\4\uffff";
	static final String DFA72_eofS =
		"\4\uffff";
	static final String DFA72_minS =
		"\2\24\2\uffff";
	static final String DFA72_maxS =
		"\2\u009a\2\uffff";
	static final String DFA72_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA72_specialS =
		"\4\uffff}>";
	static final String[] DFA72_transitionS = {
			"\1\3\1\1\76\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\3\1\1\36\uffff\1\2\37\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
	static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
	static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
	static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
	static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
	static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
	static final short[][] DFA72_transition;

	static {
		int numStates = DFA72_transitionS.length;
		DFA72_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
		}
	}

	protected class DFA72 extends DFA {

		public DFA72(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 72;
			this.eot = DFA72_eot;
			this.eof = DFA72_eof;
			this.min = DFA72_min;
			this.max = DFA72_max;
			this.accept = DFA72_accept;
			this.special = DFA72_special;
			this.transition = DFA72_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 389:47: ( ( ws )? COMMA ( ws )? IDENT )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA75_eotS =
		"\4\uffff";
	static final String DFA75_eofS =
		"\4\uffff";
	static final String DFA75_minS =
		"\2\24\2\uffff";
	static final String DFA75_maxS =
		"\2\u009a\2\uffff";
	static final String DFA75_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA75_specialS =
		"\4\uffff}>";
	static final String[] DFA75_transitionS = {
			"\1\3\1\1\76\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\3\1\1\36\uffff\1\2\37\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA75_eot = DFA.unpackEncodedString(DFA75_eotS);
	static final short[] DFA75_eof = DFA.unpackEncodedString(DFA75_eofS);
	static final char[] DFA75_min = DFA.unpackEncodedStringToUnsignedChars(DFA75_minS);
	static final char[] DFA75_max = DFA.unpackEncodedStringToUnsignedChars(DFA75_maxS);
	static final short[] DFA75_accept = DFA.unpackEncodedString(DFA75_acceptS);
	static final short[] DFA75_special = DFA.unpackEncodedString(DFA75_specialS);
	static final short[][] DFA75_transition;

	static {
		int numStates = DFA75_transitionS.length;
		DFA75_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA75_transition[i] = DFA.unpackEncodedString(DFA75_transitionS[i]);
		}
	}

	protected class DFA75 extends DFA {

		public DFA75(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 75;
			this.eot = DFA75_eot;
			this.eof = DFA75_eof;
			this.min = DFA75_min;
			this.max = DFA75_max;
			this.accept = DFA75_accept;
			this.special = DFA75_special;
			this.transition = DFA75_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 394:47: ( ( ws )? COMMA ( ws )? IDENT )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA81_eotS =
		"\6\uffff";
	static final String DFA81_eofS =
		"\6\uffff";
	static final String DFA81_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA81_maxS =
		"\2\u009a\1\0\1\uffff\1\0\1\uffff";
	static final String DFA81_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA81_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA81_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\7\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\2\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\7\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\4\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA81_eot = DFA.unpackEncodedString(DFA81_eotS);
	static final short[] DFA81_eof = DFA.unpackEncodedString(DFA81_eofS);
	static final char[] DFA81_min = DFA.unpackEncodedStringToUnsignedChars(DFA81_minS);
	static final char[] DFA81_max = DFA.unpackEncodedStringToUnsignedChars(DFA81_maxS);
	static final short[] DFA81_accept = DFA.unpackEncodedString(DFA81_acceptS);
	static final short[] DFA81_special = DFA.unpackEncodedString(DFA81_specialS);
	static final short[][] DFA81_transition;

	static {
		int numStates = DFA81_transitionS.length;
		DFA81_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA81_transition[i] = DFA.unpackEncodedString(DFA81_transitionS[i]);
		}
	}

	protected class DFA81 extends DFA {

		public DFA81(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 81;
			this.eot = DFA81_eot;
			this.eof = DFA81_eof;
			this.min = DFA81_min;
			this.max = DFA81_max;
			this.accept = DFA81_accept;
			this.special = DFA81_special;
			this.transition = DFA81_transition;
		}
		@Override
		public String getDescription() {
			return "410:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA81_2 = input.LA(1);
						 
						int index81_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index81_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA81_4 = input.LA(1);
						 
						int index81_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index81_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 81, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA87_eotS =
		"\4\uffff";
	static final String DFA87_eofS =
		"\4\uffff";
	static final String DFA87_minS =
		"\2\6\2\uffff";
	static final String DFA87_maxS =
		"\2\u009a\2\uffff";
	static final String DFA87_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA87_specialS =
		"\4\uffff}>";
	static final String[] DFA87_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\7\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\7\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"",
			""
	};

	static final short[] DFA87_eot = DFA.unpackEncodedString(DFA87_eotS);
	static final short[] DFA87_eof = DFA.unpackEncodedString(DFA87_eofS);
	static final char[] DFA87_min = DFA.unpackEncodedStringToUnsignedChars(DFA87_minS);
	static final char[] DFA87_max = DFA.unpackEncodedStringToUnsignedChars(DFA87_maxS);
	static final short[] DFA87_accept = DFA.unpackEncodedString(DFA87_acceptS);
	static final short[] DFA87_special = DFA.unpackEncodedString(DFA87_specialS);
	static final short[][] DFA87_transition;

	static {
		int numStates = DFA87_transitionS.length;
		DFA87_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA87_transition[i] = DFA.unpackEncodedString(DFA87_transitionS[i]);
		}
	}

	protected class DFA87 extends DFA {

		public DFA87(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 87;
			this.eot = DFA87_eot;
			this.eof = DFA87_eof;
			this.min = DFA87_min;
			this.max = DFA87_max;
			this.accept = DFA87_accept;
			this.special = DFA87_special;
			this.transition = DFA87_transition;
		}
		@Override
		public String getDescription() {
			return "421:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA89_eotS =
		"\4\uffff";
	static final String DFA89_eofS =
		"\4\uffff";
	static final String DFA89_minS =
		"\2\6\2\uffff";
	static final String DFA89_maxS =
		"\2\u009a\2\uffff";
	static final String DFA89_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA89_specialS =
		"\4\uffff}>";
	static final String[] DFA89_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\7\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\7\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"",
			""
	};

	static final short[] DFA89_eot = DFA.unpackEncodedString(DFA89_eotS);
	static final short[] DFA89_eof = DFA.unpackEncodedString(DFA89_eofS);
	static final char[] DFA89_min = DFA.unpackEncodedStringToUnsignedChars(DFA89_minS);
	static final char[] DFA89_max = DFA.unpackEncodedStringToUnsignedChars(DFA89_maxS);
	static final short[] DFA89_accept = DFA.unpackEncodedString(DFA89_acceptS);
	static final short[] DFA89_special = DFA.unpackEncodedString(DFA89_specialS);
	static final short[][] DFA89_transition;

	static {
		int numStates = DFA89_transitionS.length;
		DFA89_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA89_transition[i] = DFA.unpackEncodedString(DFA89_transitionS[i]);
		}
	}

	protected class DFA89 extends DFA {

		public DFA89(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 89;
			this.eot = DFA89_eot;
			this.eof = DFA89_eof;
			this.min = DFA89_min;
			this.max = DFA89_max;
			this.accept = DFA89_accept;
			this.special = DFA89_special;
			this.transition = DFA89_transition;
		}
		@Override
		public String getDescription() {
			return "422:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA93_eotS =
		"\4\uffff";
	static final String DFA93_eofS =
		"\2\2\2\uffff";
	static final String DFA93_minS =
		"\2\6\2\uffff";
	static final String DFA93_maxS =
		"\2\u009a\2\uffff";
	static final String DFA93_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA93_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA93_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\6\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff"+
			"\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\6\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff"+
			"\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff"+
			"\1\2\1\1",
			"",
			""
	};

	static final short[] DFA93_eot = DFA.unpackEncodedString(DFA93_eotS);
	static final short[] DFA93_eof = DFA.unpackEncodedString(DFA93_eofS);
	static final char[] DFA93_min = DFA.unpackEncodedStringToUnsignedChars(DFA93_minS);
	static final char[] DFA93_max = DFA.unpackEncodedStringToUnsignedChars(DFA93_maxS);
	static final short[] DFA93_accept = DFA.unpackEncodedString(DFA93_acceptS);
	static final short[] DFA93_special = DFA.unpackEncodedString(DFA93_specialS);
	static final short[][] DFA93_transition;

	static {
		int numStates = DFA93_transitionS.length;
		DFA93_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA93_transition[i] = DFA.unpackEncodedString(DFA93_transitionS[i]);
		}
	}

	protected class DFA93 extends DFA {

		public DFA93(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 93;
			this.eot = DFA93_eot;
			this.eof = DFA93_eof;
			this.min = DFA93_min;
			this.max = DFA93_max;
			this.accept = DFA93_accept;
			this.special = DFA93_special;
			this.transition = DFA93_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 439:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA93_1 = input.LA(1);
						 
						int index93_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA93_1==EOF||(LA93_1 >= AT_IDENT && LA93_1 <= AT_SIGN)||(LA93_1 >= BOTTOMCENTER_SYM && LA93_1 <= BOTTOMRIGHT_SYM)||(LA93_1 >= CHARSET_SYM && LA93_1 <= COLON)||LA93_1==CONTAINER_SYM||LA93_1==COUNTER_STYLE_SYM||(LA93_1 >= DCOLON && LA93_1 <= DOT)||LA93_1==FONT_FACE_SYM||(LA93_1 >= GEN && LA93_1 <= GREATER)||(LA93_1 >= HASH && LA93_1 <= HASH_SYMBOL)||LA93_1==IDENT||LA93_1==IMPORT_SYM||(LA93_1 >= LAYER_SYM && LA93_1 <= LEFTTOP_SYM)||LA93_1==LESS_AND||(LA93_1 >= MEDIA_SYM && LA93_1 <= MOZ_DOCUMENT_SYM)||LA93_1==NAMESPACE_SYM||LA93_1==PAGE_SYM||(LA93_1 >= PIPE && LA93_1 <= PLUS)||LA93_1==RBRACE||(LA93_1 >= RIGHTBOTTOM_SYM && LA93_1 <= RPAREN)||(LA93_1 >= SASS_AT_ROOT && LA93_1 <= SASS_DEBUG)||(LA93_1 >= SASS_EACH && LA93_1 <= SASS_ELSE)||(LA93_1 >= SASS_ERROR && LA93_1 <= SASS_FUNCTION)||(LA93_1 >= SASS_IF && LA93_1 <= SASS_MIXIN)||(LA93_1 >= SASS_RETURN && LA93_1 <= SEMI)||LA93_1==STAR||LA93_1==SUPPORTS_SYM||LA93_1==TILDE||(LA93_1 >= TOPCENTER_SYM && LA93_1 <= TOPRIGHT_SYM)||LA93_1==VARIABLE||LA93_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA93_1==COMMENT||LA93_1==NL||LA93_1==WS) ) {s = 1;}
						else if ( (LA93_1==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index93_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA93_0 = input.LA(1);
						 
						int index93_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA93_0==COMMENT||LA93_0==NL||LA93_0==WS) ) {s = 1;}
						else if ( (LA93_0==EOF||(LA93_0 >= AT_IDENT && LA93_0 <= AT_SIGN)||(LA93_0 >= BOTTOMCENTER_SYM && LA93_0 <= BOTTOMRIGHT_SYM)||(LA93_0 >= CHARSET_SYM && LA93_0 <= COLON)||LA93_0==CONTAINER_SYM||LA93_0==COUNTER_STYLE_SYM||(LA93_0 >= DCOLON && LA93_0 <= DOT)||LA93_0==FONT_FACE_SYM||(LA93_0 >= GEN && LA93_0 <= GREATER)||(LA93_0 >= HASH && LA93_0 <= HASH_SYMBOL)||LA93_0==IDENT||LA93_0==IMPORT_SYM||(LA93_0 >= LAYER_SYM && LA93_0 <= LEFTTOP_SYM)||LA93_0==LESS_AND||(LA93_0 >= MEDIA_SYM && LA93_0 <= MOZ_DOCUMENT_SYM)||LA93_0==NAMESPACE_SYM||LA93_0==PAGE_SYM||(LA93_0 >= PIPE && LA93_0 <= PLUS)||LA93_0==RBRACE||(LA93_0 >= RIGHTBOTTOM_SYM && LA93_0 <= RPAREN)||(LA93_0 >= SASS_AT_ROOT && LA93_0 <= SASS_DEBUG)||(LA93_0 >= SASS_EACH && LA93_0 <= SASS_ELSE)||(LA93_0 >= SASS_EXTEND && LA93_0 <= SASS_FUNCTION)||(LA93_0 >= SASS_IF && LA93_0 <= SASS_MIXIN)||(LA93_0 >= SASS_RETURN && LA93_0 <= SEMI)||LA93_0==STAR||LA93_0==SUPPORTS_SYM||LA93_0==TILDE||(LA93_0 >= TOPCENTER_SYM && LA93_0 <= TOPRIGHT_SYM)||LA93_0==VARIABLE||LA93_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA93_0==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index93_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 93, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA106_eotS =
		"\4\uffff";
	static final String DFA106_eofS =
		"\4\uffff";
	static final String DFA106_minS =
		"\2\23\2\uffff";
	static final String DFA106_maxS =
		"\2\u009a\2\uffff";
	static final String DFA106_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA106_specialS =
		"\4\uffff}>";
	static final String[] DFA106_transitionS = {
			"\1\2\1\uffff\1\1\76\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"\1\2\1\uffff\1\1\76\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA106_eot = DFA.unpackEncodedString(DFA106_eotS);
	static final short[] DFA106_eof = DFA.unpackEncodedString(DFA106_eofS);
	static final char[] DFA106_min = DFA.unpackEncodedStringToUnsignedChars(DFA106_minS);
	static final char[] DFA106_max = DFA.unpackEncodedStringToUnsignedChars(DFA106_maxS);
	static final short[] DFA106_accept = DFA.unpackEncodedString(DFA106_acceptS);
	static final short[] DFA106_special = DFA.unpackEncodedString(DFA106_specialS);
	static final short[][] DFA106_transition;

	static {
		int numStates = DFA106_transitionS.length;
		DFA106_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA106_transition[i] = DFA.unpackEncodedString(DFA106_transitionS[i]);
		}
	}

	protected class DFA106 extends DFA {

		public DFA106(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 106;
			this.eot = DFA106_eot;
			this.eof = DFA106_eof;
			this.min = DFA106_min;
			this.max = DFA106_max;
			this.accept = DFA106_accept;
			this.special = DFA106_special;
			this.transition = DFA106_transition;
		}
		@Override
		public String getDescription() {
			return "459:42: ( mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA115_eotS =
		"\6\uffff";
	static final String DFA115_eofS =
		"\2\3\4\uffff";
	static final String DFA115_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA115_maxS =
		"\2\u009a\1\0\1\uffff\1\0\1\uffff";
	static final String DFA115_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA115_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA115_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\5\uffff"+
			"\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\5\3\1\uffff\3\3\1\uffff\5\3\1\2\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\5\3\10\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\5\uffff"+
			"\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\5\3\1\uffff\3\3\1\uffff\5\3\1\4\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\5\3\10\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
	static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
	static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
	static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
	static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
	static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
	static final short[][] DFA115_transition;

	static {
		int numStates = DFA115_transitionS.length;
		DFA115_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
		}
	}

	protected class DFA115 extends DFA {

		public DFA115(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 115;
			this.eot = DFA115_eot;
			this.eof = DFA115_eof;
			this.min = DFA115_min;
			this.max = DFA115_max;
			this.accept = DFA115_accept;
			this.special = DFA115_special;
			this.transition = DFA115_transition;
		}
		@Override
		public String getDescription() {
			return "480:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA115_2 = input.LA(1);
						 
						int index115_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred15_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index115_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA115_4 = input.LA(1);
						 
						int index115_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred15_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index115_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 115, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA124_eotS =
		"\4\uffff";
	static final String DFA124_eofS =
		"\4\uffff";
	static final String DFA124_minS =
		"\2\25\2\uffff";
	static final String DFA124_maxS =
		"\2\u009a\2\uffff";
	static final String DFA124_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA124_specialS =
		"\4\uffff}>";
	static final String[] DFA124_transitionS = {
			"\1\1\47\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\10\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA124_eot = DFA.unpackEncodedString(DFA124_eotS);
	static final short[] DFA124_eof = DFA.unpackEncodedString(DFA124_eofS);
	static final char[] DFA124_min = DFA.unpackEncodedStringToUnsignedChars(DFA124_minS);
	static final char[] DFA124_max = DFA.unpackEncodedStringToUnsignedChars(DFA124_maxS);
	static final short[] DFA124_accept = DFA.unpackEncodedString(DFA124_acceptS);
	static final short[] DFA124_special = DFA.unpackEncodedString(DFA124_specialS);
	static final short[][] DFA124_transition;

	static {
		int numStates = DFA124_transitionS.length;
		DFA124_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA124_transition[i] = DFA.unpackEncodedString(DFA124_transitionS[i]);
		}
	}

	protected class DFA124 extends DFA {

		public DFA124(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 124;
			this.eot = DFA124_eot;
			this.eof = DFA124_eof;
			this.min = DFA124_min;
			this.max = DFA124_max;
			this.accept = DFA124_accept;
			this.special = DFA124_special;
			this.transition = DFA124_transition;
		}
		@Override
		public String getDescription() {
			return "515:21: ( ws supportsWithOperator )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA126_eotS =
		"\4\uffff";
	static final String DFA126_eofS =
		"\4\uffff";
	static final String DFA126_minS =
		"\2\25\2\uffff";
	static final String DFA126_maxS =
		"\2\u009a\2\uffff";
	static final String DFA126_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA126_specialS =
		"\4\uffff}>";
	static final String[] DFA126_transitionS = {
			"\1\1\47\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\10\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA126_eot = DFA.unpackEncodedString(DFA126_eotS);
	static final short[] DFA126_eof = DFA.unpackEncodedString(DFA126_eofS);
	static final char[] DFA126_min = DFA.unpackEncodedStringToUnsignedChars(DFA126_minS);
	static final char[] DFA126_max = DFA.unpackEncodedStringToUnsignedChars(DFA126_maxS);
	static final short[] DFA126_accept = DFA.unpackEncodedString(DFA126_acceptS);
	static final short[] DFA126_special = DFA.unpackEncodedString(DFA126_specialS);
	static final short[][] DFA126_transition;

	static {
		int numStates = DFA126_transitionS.length;
		DFA126_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA126_transition[i] = DFA.unpackEncodedString(DFA126_transitionS[i]);
		}
	}

	protected class DFA126 extends DFA {

		public DFA126(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 126;
			this.eot = DFA126_eot;
			this.eof = DFA126_eof;
			this.min = DFA126_min;
			this.max = DFA126_max;
			this.accept = DFA126_accept;
			this.special = DFA126_special;
			this.transition = DFA126_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 520:29: ( ws supportsConjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA127_eotS =
		"\4\uffff";
	static final String DFA127_eofS =
		"\4\uffff";
	static final String DFA127_minS =
		"\2\25\2\uffff";
	static final String DFA127_maxS =
		"\2\u009a\2\uffff";
	static final String DFA127_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA127_specialS =
		"\4\uffff}>";
	static final String[] DFA127_transitionS = {
			"\1\1\47\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\10\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA127_eot = DFA.unpackEncodedString(DFA127_eotS);
	static final short[] DFA127_eof = DFA.unpackEncodedString(DFA127_eofS);
	static final char[] DFA127_min = DFA.unpackEncodedStringToUnsignedChars(DFA127_minS);
	static final char[] DFA127_max = DFA.unpackEncodedStringToUnsignedChars(DFA127_maxS);
	static final short[] DFA127_accept = DFA.unpackEncodedString(DFA127_acceptS);
	static final short[] DFA127_special = DFA.unpackEncodedString(DFA127_specialS);
	static final short[][] DFA127_transition;

	static {
		int numStates = DFA127_transitionS.length;
		DFA127_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA127_transition[i] = DFA.unpackEncodedString(DFA127_transitionS[i]);
		}
	}

	protected class DFA127 extends DFA {

		public DFA127(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 127;
			this.eot = DFA127_eot;
			this.eof = DFA127_eof;
			this.min = DFA127_min;
			this.max = DFA127_max;
			this.accept = DFA127_accept;
			this.special = DFA127_special;
			this.transition = DFA127_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 521:31: ( ws supportsDisjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA141_eotS =
		"\4\uffff";
	static final String DFA141_eofS =
		"\4\uffff";
	static final String DFA141_minS =
		"\2\25\2\uffff";
	static final String DFA141_maxS =
		"\2\u009a\2\uffff";
	static final String DFA141_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA141_specialS =
		"\4\uffff}>";
	static final String[] DFA141_transitionS = {
			"\1\1\47\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\10\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA141_eot = DFA.unpackEncodedString(DFA141_eotS);
	static final short[] DFA141_eof = DFA.unpackEncodedString(DFA141_eofS);
	static final char[] DFA141_min = DFA.unpackEncodedStringToUnsignedChars(DFA141_minS);
	static final char[] DFA141_max = DFA.unpackEncodedStringToUnsignedChars(DFA141_maxS);
	static final short[] DFA141_accept = DFA.unpackEncodedString(DFA141_acceptS);
	static final short[] DFA141_special = DFA.unpackEncodedString(DFA141_specialS);
	static final short[][] DFA141_transition;

	static {
		int numStates = DFA141_transitionS.length;
		DFA141_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA141_transition[i] = DFA.unpackEncodedString(DFA141_transitionS[i]);
		}
	}

	protected class DFA141 extends DFA {

		public DFA141(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 141;
			this.eot = DFA141_eot;
			this.eof = DFA141_eof;
			this.min = DFA141_min;
			this.max = DFA141_max;
			this.accept = DFA141_accept;
			this.special = DFA141_special;
			this.transition = DFA141_transition;
		}
		@Override
		public String getDescription() {
			return "560:34: ( ws containerQueryWithOperator )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA143_eotS =
		"\4\uffff";
	static final String DFA143_eofS =
		"\4\uffff";
	static final String DFA143_minS =
		"\2\25\2\uffff";
	static final String DFA143_maxS =
		"\2\u009a\2\uffff";
	static final String DFA143_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA143_specialS =
		"\4\uffff}>";
	static final String[] DFA143_transitionS = {
			"\1\1\47\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\10\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA143_eot = DFA.unpackEncodedString(DFA143_eotS);
	static final short[] DFA143_eof = DFA.unpackEncodedString(DFA143_eofS);
	static final char[] DFA143_min = DFA.unpackEncodedStringToUnsignedChars(DFA143_minS);
	static final char[] DFA143_max = DFA.unpackEncodedStringToUnsignedChars(DFA143_maxS);
	static final short[] DFA143_accept = DFA.unpackEncodedString(DFA143_acceptS);
	static final short[] DFA143_special = DFA.unpackEncodedString(DFA143_specialS);
	static final short[][] DFA143_transition;

	static {
		int numStates = DFA143_transitionS.length;
		DFA143_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA143_transition[i] = DFA.unpackEncodedString(DFA143_transitionS[i]);
		}
	}

	protected class DFA143 extends DFA {

		public DFA143(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 143;
			this.eot = DFA143_eot;
			this.eof = DFA143_eof;
			this.min = DFA143_min;
			this.max = DFA143_max;
			this.accept = DFA143_accept;
			this.special = DFA143_special;
			this.transition = DFA143_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 565:35: ( ws containerQueryConjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA144_eotS =
		"\4\uffff";
	static final String DFA144_eofS =
		"\4\uffff";
	static final String DFA144_minS =
		"\2\25\2\uffff";
	static final String DFA144_maxS =
		"\2\u009a\2\uffff";
	static final String DFA144_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA144_specialS =
		"\4\uffff}>";
	static final String[] DFA144_transitionS = {
			"\1\1\47\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\10\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA144_eot = DFA.unpackEncodedString(DFA144_eotS);
	static final short[] DFA144_eof = DFA.unpackEncodedString(DFA144_eofS);
	static final char[] DFA144_min = DFA.unpackEncodedStringToUnsignedChars(DFA144_minS);
	static final char[] DFA144_max = DFA.unpackEncodedStringToUnsignedChars(DFA144_maxS);
	static final short[] DFA144_accept = DFA.unpackEncodedString(DFA144_acceptS);
	static final short[] DFA144_special = DFA.unpackEncodedString(DFA144_specialS);
	static final short[][] DFA144_transition;

	static {
		int numStates = DFA144_transitionS.length;
		DFA144_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA144_transition[i] = DFA.unpackEncodedString(DFA144_transitionS[i]);
		}
	}

	protected class DFA144 extends DFA {

		public DFA144(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 144;
			this.eot = DFA144_eot;
			this.eof = DFA144_eof;
			this.min = DFA144_min;
			this.max = DFA144_max;
			this.accept = DFA144_accept;
			this.special = DFA144_special;
			this.transition = DFA144_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 566:37: ( ws containerQueryDisjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA154_eotS =
		"\4\uffff";
	static final String DFA154_eofS =
		"\4\uffff";
	static final String DFA154_minS =
		"\2\25\2\uffff";
	static final String DFA154_maxS =
		"\2\u009a\2\uffff";
	static final String DFA154_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA154_specialS =
		"\4\uffff}>";
	static final String[] DFA154_transitionS = {
			"\1\1\76\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\37\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA154_eot = DFA.unpackEncodedString(DFA154_eotS);
	static final short[] DFA154_eof = DFA.unpackEncodedString(DFA154_eofS);
	static final char[] DFA154_min = DFA.unpackEncodedStringToUnsignedChars(DFA154_minS);
	static final char[] DFA154_max = DFA.unpackEncodedStringToUnsignedChars(DFA154_maxS);
	static final short[] DFA154_accept = DFA.unpackEncodedString(DFA154_acceptS);
	static final short[] DFA154_special = DFA.unpackEncodedString(DFA154_specialS);
	static final short[][] DFA154_transition;

	static {
		int numStates = DFA154_transitionS.length;
		DFA154_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA154_transition[i] = DFA.unpackEncodedString(DFA154_transitionS[i]);
		}
	}

	protected class DFA154 extends DFA {

		public DFA154(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 154;
			this.eot = DFA154_eot;
			this.eof = DFA154_eof;
			this.min = DFA154_min;
			this.max = DFA154_max;
			this.accept = DFA154_accept;
			this.special = DFA154_special;
			this.transition = DFA154_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 603:31: ( ws styleQueryConjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA155_eotS =
		"\4\uffff";
	static final String DFA155_eofS =
		"\4\uffff";
	static final String DFA155_minS =
		"\2\25\2\uffff";
	static final String DFA155_maxS =
		"\2\u009a\2\uffff";
	static final String DFA155_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA155_specialS =
		"\4\uffff}>";
	static final String[] DFA155_transitionS = {
			"\1\1\76\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\37\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA155_eot = DFA.unpackEncodedString(DFA155_eotS);
	static final short[] DFA155_eof = DFA.unpackEncodedString(DFA155_eofS);
	static final char[] DFA155_min = DFA.unpackEncodedStringToUnsignedChars(DFA155_minS);
	static final char[] DFA155_max = DFA.unpackEncodedStringToUnsignedChars(DFA155_maxS);
	static final short[] DFA155_accept = DFA.unpackEncodedString(DFA155_acceptS);
	static final short[] DFA155_special = DFA.unpackEncodedString(DFA155_specialS);
	static final short[][] DFA155_transition;

	static {
		int numStates = DFA155_transitionS.length;
		DFA155_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA155_transition[i] = DFA.unpackEncodedString(DFA155_transitionS[i]);
		}
	}

	protected class DFA155 extends DFA {

		public DFA155(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 155;
			this.eot = DFA155_eot;
			this.eof = DFA155_eof;
			this.min = DFA155_min;
			this.max = DFA155_max;
			this.accept = DFA155_accept;
			this.special = DFA155_special;
			this.transition = DFA155_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 604:33: ( ws styleQueryDisjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA173_eotS =
		"\4\uffff";
	static final String DFA173_eofS =
		"\4\uffff";
	static final String DFA173_minS =
		"\2\23\2\uffff";
	static final String DFA173_maxS =
		"\2\u009a\2\uffff";
	static final String DFA173_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA173_specialS =
		"\4\uffff}>";
	static final String[] DFA173_transitionS = {
			"\1\2\1\uffff\1\1\76\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"\1\2\1\uffff\1\1\76\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA173_eot = DFA.unpackEncodedString(DFA173_eotS);
	static final short[] DFA173_eof = DFA.unpackEncodedString(DFA173_eofS);
	static final char[] DFA173_min = DFA.unpackEncodedStringToUnsignedChars(DFA173_minS);
	static final char[] DFA173_max = DFA.unpackEncodedStringToUnsignedChars(DFA173_maxS);
	static final short[] DFA173_accept = DFA.unpackEncodedString(DFA173_acceptS);
	static final short[] DFA173_special = DFA.unpackEncodedString(DFA173_specialS);
	static final short[][] DFA173_transition;

	static {
		int numStates = DFA173_transitionS.length;
		DFA173_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA173_transition[i] = DFA.unpackEncodedString(DFA173_transitionS[i]);
		}
	}

	protected class DFA173 extends DFA {

		public DFA173(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 173;
			this.eot = DFA173_eot;
			this.eof = DFA173_eof;
			this.min = DFA173_min;
			this.max = DFA173_max;
			this.accept = DFA173_accept;
			this.special = DFA173_special;
			this.transition = DFA173_transition;
		}
		@Override
		public String getDescription() {
			return "634:25: ( ( ws )? COLON ( ws )? sizeFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA186_eotS =
		"\12\uffff";
	static final String DFA186_eofS =
		"\12\uffff";
	static final String DFA186_minS =
		"\1\74\2\25\1\24\1\25\1\uffff\1\64\1\24\1\uffff\1\24";
	static final String DFA186_maxS =
		"\1\74\4\u009a\1\uffff\1\64\1\u009a\1\uffff\1\u009a";
	static final String DFA186_acceptS =
		"\5\uffff\1\1\2\uffff\1\2\1\uffff";
	static final String DFA186_specialS =
		"\12\uffff}>";
	static final String[] DFA186_transitionS = {
			"\1\1",
			"\1\2\76\uffff\1\2\105\uffff\1\2",
			"\1\4\36\uffff\1\3\10\uffff\1\5\26\uffff\1\4\105\uffff\1\4",
			"\1\10\1\7\12\uffff\1\6\34\uffff\1\5\26\uffff\1\7\57\uffff\1\10\25\uffff"+
			"\1\7",
			"\1\4\36\uffff\1\3\10\uffff\1\5\26\uffff\1\4\105\uffff\1\4",
			"",
			"\1\11",
			"\1\10\1\7\47\uffff\1\5\26\uffff\1\7\105\uffff\1\7",
			"",
			"\1\10\1\7\12\uffff\1\6\34\uffff\1\5\26\uffff\1\7\57\uffff\1\10\25\uffff"+
			"\1\7"
	};

	static final short[] DFA186_eot = DFA.unpackEncodedString(DFA186_eotS);
	static final short[] DFA186_eof = DFA.unpackEncodedString(DFA186_eofS);
	static final char[] DFA186_min = DFA.unpackEncodedStringToUnsignedChars(DFA186_minS);
	static final char[] DFA186_max = DFA.unpackEncodedStringToUnsignedChars(DFA186_maxS);
	static final short[] DFA186_accept = DFA.unpackEncodedString(DFA186_acceptS);
	static final short[] DFA186_special = DFA.unpackEncodedString(DFA186_specialS);
	static final short[][] DFA186_transition;

	static {
		int numStates = DFA186_transitionS.length;
		DFA186_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA186_transition[i] = DFA.unpackEncodedString(DFA186_transitionS[i]);
		}
	}

	protected class DFA186 extends DFA {

		public DFA186(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 186;
			this.eot = DFA186_eot;
			this.eof = DFA186_eof;
			this.min = DFA186_min;
			this.max = DFA186_max;
			this.accept = DFA186_accept;
			this.special = DFA186_special;
			this.transition = DFA186_transition;
		}
		@Override
		public String getDescription() {
			return "668:1: layerAtRule : ( layerBlock | layerStatement );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA224_eotS =
		"\4\uffff";
	static final String DFA224_eofS =
		"\1\2\3\uffff";
	static final String DFA224_minS =
		"\2\24\2\uffff";
	static final String DFA224_maxS =
		"\2\u009a\2\uffff";
	static final String DFA224_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA224_specialS =
		"\4\uffff}>";
	static final String[] DFA224_transitionS = {
			"\1\3\1\1\47\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\1\1\47\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA224_eot = DFA.unpackEncodedString(DFA224_eotS);
	static final short[] DFA224_eof = DFA.unpackEncodedString(DFA224_eofS);
	static final char[] DFA224_min = DFA.unpackEncodedStringToUnsignedChars(DFA224_minS);
	static final char[] DFA224_max = DFA.unpackEncodedStringToUnsignedChars(DFA224_maxS);
	static final short[] DFA224_accept = DFA.unpackEncodedString(DFA224_acceptS);
	static final short[] DFA224_special = DFA.unpackEncodedString(DFA224_specialS);
	static final short[][] DFA224_transition;

	static {
		int numStates = DFA224_transitionS.length;
		DFA224_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA224_transition[i] = DFA.unpackEncodedString(DFA224_transitionS[i]);
		}
	}

	protected class DFA224 extends DFA {

		public DFA224(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 224;
			this.eot = DFA224_eot;
			this.eof = DFA224_eof;
			this.min = DFA224_min;
			this.max = DFA224_max;
			this.accept = DFA224_accept;
			this.special = DFA224_special;
			this.transition = DFA224_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 754:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA236_eotS =
		"\6\uffff";
	static final String DFA236_eofS =
		"\6\uffff";
	static final String DFA236_minS =
		"\3\6\2\uffff\1\6";
	static final String DFA236_maxS =
		"\3\u009a\2\uffff\1\u009a";
	static final String DFA236_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA236_specialS =
		"\6\uffff}>";
	static final String[] DFA236_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\2\2\uffff\1\4\17\uffff\1\4\2\uffff"+
			"\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\10\uffff\3\4\11\uffff\3\4\5"+
			"\uffff\1\4\1\2\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\1\1\uffff\1\4"+
			"\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\2",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\5\2\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\10\uffff\3\4\11\uffff"+
			"\3\4\5\uffff\1\4\1\5\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4\2\uffff\3\4"+
			"\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\2\uffff"+
			"\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\2\2\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\10\uffff\3\4\11\uffff"+
			"\3\4\5\uffff\1\4\1\2\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4\2\uffff\3\4"+
			"\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\6\4\1\uffff"+
			"\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\2",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\5\2\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\10\uffff\3\4\11\uffff"+
			"\3\4\5\uffff\1\4\1\5\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4\2\uffff\3\4"+
			"\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\2\uffff"+
			"\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5"
	};

	static final short[] DFA236_eot = DFA.unpackEncodedString(DFA236_eotS);
	static final short[] DFA236_eof = DFA.unpackEncodedString(DFA236_eofS);
	static final char[] DFA236_min = DFA.unpackEncodedStringToUnsignedChars(DFA236_minS);
	static final char[] DFA236_max = DFA.unpackEncodedStringToUnsignedChars(DFA236_maxS);
	static final short[] DFA236_accept = DFA.unpackEncodedString(DFA236_acceptS);
	static final short[] DFA236_special = DFA.unpackEncodedString(DFA236_specialS);
	static final short[][] DFA236_transition;

	static {
		int numStates = DFA236_transitionS.length;
		DFA236_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA236_transition[i] = DFA.unpackEncodedString(DFA236_transitionS[i]);
		}
	}

	protected class DFA236 extends DFA {

		public DFA236(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 236;
			this.eot = DFA236_eot;
			this.eof = DFA236_eof;
			this.min = DFA236_min;
			this.max = DFA236_max;
			this.accept = DFA236_accept;
			this.special = DFA236_special;
			this.transition = DFA236_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 765:13: ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA235_eotS =
		"\5\uffff";
	static final String DFA235_eofS =
		"\5\uffff";
	static final String DFA235_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA235_maxS =
		"\1\u0099\1\uffff\2\u009a\1\uffff";
	static final String DFA235_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA235_specialS =
		"\5\uffff}>";
	static final String[] DFA235_transitionS = {
			"\2\1\2\uffff\5\2\3\uffff\1\1\5\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\3\uffff\1\1\1\uffff\1\1\10\uffff\3\2\11\uffff\3\1\5\uffff\1\1\11"+
			"\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\3"+
			"\1\1\uffff\3\1\1\uffff\5\1\2\uffff\1\1\5\uffff\5\2\6\uffff\1\1\1\uffff"+
			"\1\1",
			"",
			"\1\1\1\uffff\1\3\47\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"\1\1\1\uffff\1\3\47\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			""
	};

	static final short[] DFA235_eot = DFA.unpackEncodedString(DFA235_eotS);
	static final short[] DFA235_eof = DFA.unpackEncodedString(DFA235_eofS);
	static final char[] DFA235_min = DFA.unpackEncodedStringToUnsignedChars(DFA235_minS);
	static final char[] DFA235_max = DFA.unpackEncodedStringToUnsignedChars(DFA235_maxS);
	static final short[] DFA235_accept = DFA.unpackEncodedString(DFA235_acceptS);
	static final short[] DFA235_special = DFA.unpackEncodedString(DFA235_specialS);
	static final short[][] DFA235_transition;

	static {
		int numStates = DFA235_transitionS.length;
		DFA235_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA235_transition[i] = DFA.unpackEncodedString(DFA235_transitionS[i]);
		}
	}

	protected class DFA235 extends DFA {

		public DFA235(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 235;
			this.eot = DFA235_eot;
			this.eof = DFA235_eof;
			this.min = DFA235_min;
			this.max = DFA235_max;
			this.accept = DFA235_accept;
			this.special = DFA235_special;
			this.transition = DFA235_transition;
		}
		@Override
		public String getDescription() {
			return "765:62: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA255_eotS =
		"\5\uffff";
	static final String DFA255_eofS =
		"\2\2\3\uffff";
	static final String DFA255_minS =
		"\2\6\3\uffff";
	static final String DFA255_maxS =
		"\2\u009a\3\uffff";
	static final String DFA255_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA255_specialS =
		"\5\uffff}>";
	static final String[] DFA255_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2\2\uffff\5\2"+
			"\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2"+
			"\10\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2\1\uffff\6\2"+
			"\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2"+
			"\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA255_eot = DFA.unpackEncodedString(DFA255_eotS);
	static final short[] DFA255_eof = DFA.unpackEncodedString(DFA255_eofS);
	static final char[] DFA255_min = DFA.unpackEncodedStringToUnsignedChars(DFA255_minS);
	static final char[] DFA255_max = DFA.unpackEncodedStringToUnsignedChars(DFA255_maxS);
	static final short[] DFA255_accept = DFA.unpackEncodedString(DFA255_acceptS);
	static final short[] DFA255_special = DFA.unpackEncodedString(DFA255_specialS);
	static final short[][] DFA255_transition;

	static {
		int numStates = DFA255_transitionS.length;
		DFA255_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA255_transition[i] = DFA.unpackEncodedString(DFA255_transitionS[i]);
		}
	}

	protected class DFA255 extends DFA {

		public DFA255(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 255;
			this.eot = DFA255_eot;
			this.eof = DFA255_eof;
			this.min = DFA255_min;
			this.max = DFA255_max;
			this.accept = DFA255_accept;
			this.special = DFA255_special;
			this.transition = DFA255_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 845:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA257_eotS =
		"\6\uffff";
	static final String DFA257_eofS =
		"\6\uffff";
	static final String DFA257_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA257_maxS =
		"\2\u009a\1\0\1\uffff\1\0\1\uffff";
	static final String DFA257_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA257_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA257_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\uffff\1\3\10\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\3\uffff"+
			"\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\4\1\1\2\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\uffff\1\3\10\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\3\uffff"+
			"\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA257_eot = DFA.unpackEncodedString(DFA257_eotS);
	static final short[] DFA257_eof = DFA.unpackEncodedString(DFA257_eofS);
	static final char[] DFA257_min = DFA.unpackEncodedStringToUnsignedChars(DFA257_minS);
	static final char[] DFA257_max = DFA.unpackEncodedStringToUnsignedChars(DFA257_maxS);
	static final short[] DFA257_accept = DFA.unpackEncodedString(DFA257_acceptS);
	static final short[] DFA257_special = DFA.unpackEncodedString(DFA257_specialS);
	static final short[][] DFA257_transition;

	static {
		int numStates = DFA257_transitionS.length;
		DFA257_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA257_transition[i] = DFA.unpackEncodedString(DFA257_transitionS[i]);
		}
	}

	protected class DFA257 extends DFA {

		public DFA257(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 257;
			this.eot = DFA257_eot;
			this.eof = DFA257_eof;
			this.min = DFA257_min;
			this.max = DFA257_max;
			this.accept = DFA257_accept;
			this.special = DFA257_special;
			this.transition = DFA257_transition;
		}
		@Override
		public String getDescription() {
			return "856:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA257_2 = input.LA(1);
						 
						int index257_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index257_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA257_4 = input.LA(1);
						 
						int index257_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred32_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index257_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 257, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA262_eotS =
		"\4\uffff";
	static final String DFA262_eofS =
		"\4\uffff";
	static final String DFA262_minS =
		"\2\23\2\uffff";
	static final String DFA262_maxS =
		"\2\u009a\2\uffff";
	static final String DFA262_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA262_specialS =
		"\4\uffff}>";
	static final String[] DFA262_transitionS = {
			"\1\2\1\uffff\1\1\76\uffff\1\1\62\uffff\1\3\22\uffff\1\1",
			"\1\2\1\uffff\1\1\76\uffff\1\1\62\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA262_eot = DFA.unpackEncodedString(DFA262_eotS);
	static final short[] DFA262_eof = DFA.unpackEncodedString(DFA262_eofS);
	static final char[] DFA262_min = DFA.unpackEncodedStringToUnsignedChars(DFA262_minS);
	static final char[] DFA262_max = DFA.unpackEncodedStringToUnsignedChars(DFA262_maxS);
	static final short[] DFA262_accept = DFA.unpackEncodedString(DFA262_acceptS);
	static final short[] DFA262_special = DFA.unpackEncodedString(DFA262_specialS);
	static final short[][] DFA262_transition;

	static {
		int numStates = DFA262_transitionS.length;
		DFA262_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA262_transition[i] = DFA.unpackEncodedString(DFA262_transitionS[i]);
		}
	}

	protected class DFA262 extends DFA {

		public DFA262(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 262;
			this.eot = DFA262_eot;
			this.eof = DFA262_eof;
			this.min = DFA262_min;
			this.max = DFA262_max;
			this.accept = DFA262_accept;
			this.special = DFA262_special;
			this.transition = DFA262_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 864:25: ( ( ws )? STRING )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA267_eotS =
		"\4\uffff";
	static final String DFA267_eofS =
		"\4\uffff";
	static final String DFA267_minS =
		"\2\6\2\uffff";
	static final String DFA267_maxS =
		"\2\u009a\2\uffff";
	static final String DFA267_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA267_specialS =
		"\4\uffff}>";
	static final String[] DFA267_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\2\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\2\1\3\10\uffff\3\3\11\uffff\3"+
			"\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1"+
			"\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\3\uffff\1"+
			"\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\2\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\2\1\3\10\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\3\uffff"+
			"\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA267_eot = DFA.unpackEncodedString(DFA267_eotS);
	static final short[] DFA267_eof = DFA.unpackEncodedString(DFA267_eofS);
	static final char[] DFA267_min = DFA.unpackEncodedStringToUnsignedChars(DFA267_minS);
	static final char[] DFA267_max = DFA.unpackEncodedStringToUnsignedChars(DFA267_maxS);
	static final short[] DFA267_accept = DFA.unpackEncodedString(DFA267_acceptS);
	static final short[] DFA267_special = DFA.unpackEncodedString(DFA267_specialS);
	static final short[][] DFA267_transition;

	static {
		int numStates = DFA267_transitionS.length;
		DFA267_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA267_transition[i] = DFA.unpackEncodedString(DFA267_transitionS[i]);
		}
	}

	protected class DFA267 extends DFA {

		public DFA267(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 267;
			this.eot = DFA267_eot;
			this.eof = DFA267_eof;
			this.min = DFA267_min;
			this.max = DFA267_max;
			this.accept = DFA267_accept;
			this.special = DFA267_special;
			this.transition = DFA267_transition;
		}
		@Override
		public String getDescription() {
			return "864:110: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA273_eotS =
		"\6\uffff";
	static final String DFA273_eofS =
		"\6\uffff";
	static final String DFA273_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA273_maxS =
		"\1\u008a\1\u009a\1\uffff\1\u009a\2\uffff";
	static final String DFA273_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA273_specialS =
		"\6\uffff}>";
	static final String[] DFA273_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\11"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\47\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\10\uffff\3\4\12\uffff\2\4\2\uffff\2\4"+
			"\3\uffff\1\4\10\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff"+
			"\1\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA273_eot = DFA.unpackEncodedString(DFA273_eotS);
	static final short[] DFA273_eof = DFA.unpackEncodedString(DFA273_eofS);
	static final char[] DFA273_min = DFA.unpackEncodedStringToUnsignedChars(DFA273_minS);
	static final char[] DFA273_max = DFA.unpackEncodedStringToUnsignedChars(DFA273_maxS);
	static final short[] DFA273_accept = DFA.unpackEncodedString(DFA273_acceptS);
	static final short[] DFA273_special = DFA.unpackEncodedString(DFA273_specialS);
	static final short[][] DFA273_transition;

	static {
		int numStates = DFA273_transitionS.length;
		DFA273_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA273_transition[i] = DFA.unpackEncodedString(DFA273_transitionS[i]);
		}
	}

	protected class DFA273 extends DFA {

		public DFA273(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 273;
			this.eot = DFA273_eot;
			this.eof = DFA273_eof;
			this.min = DFA273_min;
			this.max = DFA273_max;
			this.accept = DFA273_accept;
			this.special = DFA273_special;
			this.transition = DFA273_transition;
		}
		@Override
		public String getDescription() {
			return "869:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA268_eotS =
		"\4\uffff";
	static final String DFA268_eofS =
		"\4\uffff";
	static final String DFA268_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA268_maxS =
		"\2\u009a\2\uffff";
	static final String DFA268_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA268_specialS =
		"\4\uffff}>";
	static final String[] DFA268_transitionS = {
			"\1\1\47\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3"+
			"\3\uffff\1\3\10\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA268_eot = DFA.unpackEncodedString(DFA268_eotS);
	static final short[] DFA268_eof = DFA.unpackEncodedString(DFA268_eofS);
	static final char[] DFA268_min = DFA.unpackEncodedStringToUnsignedChars(DFA268_minS);
	static final char[] DFA268_max = DFA.unpackEncodedStringToUnsignedChars(DFA268_maxS);
	static final short[] DFA268_accept = DFA.unpackEncodedString(DFA268_acceptS);
	static final short[] DFA268_special = DFA.unpackEncodedString(DFA268_specialS);
	static final short[][] DFA268_transition;

	static {
		int numStates = DFA268_transitionS.length;
		DFA268_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA268_transition[i] = DFA.unpackEncodedString(DFA268_transitionS[i]);
		}
	}

	protected class DFA268 extends DFA {

		public DFA268(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 268;
			this.eot = DFA268_eot;
			this.eof = DFA268_eof;
			this.min = DFA268_min;
			this.max = DFA268_max;
			this.accept = DFA268_accept;
			this.special = DFA268_special;
			this.transition = DFA268_transition;
		}
		@Override
		public String getDescription() {
			return "870:27: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA290_eotS =
		"\5\uffff";
	static final String DFA290_eofS =
		"\5\uffff";
	static final String DFA290_minS =
		"\2\6\1\uffff\1\6\1\uffff";
	static final String DFA290_maxS =
		"\1\u0099\1\u009a\1\uffff\1\u009a\1\uffff";
	static final String DFA290_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA290_specialS =
		"\5\uffff}>";
	static final String[] DFA290_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff"+
			"\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff\5\2\1\1"+
			"\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff"+
			"\1\2",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff"+
			"\6\2\1\uffff\3\2\1\uffff\5\2\1\1\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\3",
			"",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff"+
			"\6\2\1\uffff\3\2\1\uffff\5\2\1\1\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\3",
			""
	};

	static final short[] DFA290_eot = DFA.unpackEncodedString(DFA290_eotS);
	static final short[] DFA290_eof = DFA.unpackEncodedString(DFA290_eofS);
	static final char[] DFA290_min = DFA.unpackEncodedStringToUnsignedChars(DFA290_minS);
	static final char[] DFA290_max = DFA.unpackEncodedStringToUnsignedChars(DFA290_maxS);
	static final short[] DFA290_accept = DFA.unpackEncodedString(DFA290_acceptS);
	static final short[] DFA290_special = DFA.unpackEncodedString(DFA290_specialS);
	static final short[][] DFA290_transition;

	static {
		int numStates = DFA290_transitionS.length;
		DFA290_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA290_transition[i] = DFA.unpackEncodedString(DFA290_transitionS[i]);
		}
	}

	protected class DFA290 extends DFA {

		public DFA290(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 290;
			this.eot = DFA290_eot;
			this.eof = DFA290_eof;
			this.min = DFA290_min;
			this.max = DFA290_max;
			this.accept = DFA290_accept;
			this.special = DFA290_special;
			this.transition = DFA290_transition;
		}
		@Override
		public String getDescription() {
			return "884:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA283_eotS =
		"\6\uffff";
	static final String DFA283_eofS =
		"\6\uffff";
	static final String DFA283_minS =
		"\1\25\2\6\2\uffff\1\6";
	static final String DFA283_maxS =
		"\3\u009a\2\uffff\1\u009a";
	static final String DFA283_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA283_specialS =
		"\6\uffff}>";
	static final String[] DFA283_transitionS = {
			"\1\1\76\uffff\1\1\17\uffff\1\3\37\uffff\1\2\25\uffff\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4"+
			"\2\uffff\2\4\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff"+
			"\6\4\1\uffff\3\4\1\uffff\5\4\1\2\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4"+
			"\2\uffff\2\4\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff"+
			"\6\4\1\uffff\3\4\1\uffff\5\4\1\2\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4"+
			"\2\uffff\2\4\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff"+
			"\6\4\1\uffff\3\4\1\uffff\5\4\1\2\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5"
	};

	static final short[] DFA283_eot = DFA.unpackEncodedString(DFA283_eotS);
	static final short[] DFA283_eof = DFA.unpackEncodedString(DFA283_eofS);
	static final char[] DFA283_min = DFA.unpackEncodedStringToUnsignedChars(DFA283_minS);
	static final char[] DFA283_max = DFA.unpackEncodedStringToUnsignedChars(DFA283_maxS);
	static final short[] DFA283_accept = DFA.unpackEncodedString(DFA283_acceptS);
	static final short[] DFA283_special = DFA.unpackEncodedString(DFA283_specialS);
	static final short[][] DFA283_transition;

	static {
		int numStates = DFA283_transitionS.length;
		DFA283_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA283_transition[i] = DFA.unpackEncodedString(DFA283_transitionS[i]);
		}
	}

	protected class DFA283 extends DFA {

		public DFA283(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 283;
			this.eot = DFA283_eot;
			this.eof = DFA283_eof;
			this.min = DFA283_min;
			this.max = DFA283_max;
			this.accept = DFA283_accept;
			this.special = DFA283_special;
			this.transition = DFA283_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 886:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA282_eotS =
		"\4\uffff";
	static final String DFA282_eofS =
		"\4\uffff";
	static final String DFA282_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA282_maxS =
		"\2\u009a\2\uffff";
	static final String DFA282_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA282_specialS =
		"\4\uffff}>";
	static final String[] DFA282_transitionS = {
			"\1\1\76\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\5\uffff"+
			"\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3"+
			"\2\uffff\2\3\6\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\2\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3"+
			"\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA282_eot = DFA.unpackEncodedString(DFA282_eotS);
	static final short[] DFA282_eof = DFA.unpackEncodedString(DFA282_eofS);
	static final char[] DFA282_min = DFA.unpackEncodedStringToUnsignedChars(DFA282_minS);
	static final char[] DFA282_max = DFA.unpackEncodedStringToUnsignedChars(DFA282_maxS);
	static final short[] DFA282_accept = DFA.unpackEncodedString(DFA282_acceptS);
	static final short[] DFA282_special = DFA.unpackEncodedString(DFA282_specialS);
	static final short[][] DFA282_transition;

	static {
		int numStates = DFA282_transitionS.length;
		DFA282_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA282_transition[i] = DFA.unpackEncodedString(DFA282_transitionS[i]);
		}
	}

	protected class DFA282 extends DFA {

		public DFA282(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 282;
			this.eot = DFA282_eot;
			this.eof = DFA282_eof;
			this.min = DFA282_min;
			this.max = DFA282_max;
			this.accept = DFA282_accept;
			this.special = DFA282_special;
			this.transition = DFA282_transition;
		}
		@Override
		public String getDescription() {
			return "886:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA287_eotS =
		"\5\uffff";
	static final String DFA287_eofS =
		"\5\uffff";
	static final String DFA287_minS =
		"\2\25\3\uffff";
	static final String DFA287_maxS =
		"\2\u009a\3\uffff";
	static final String DFA287_acceptS =
		"\2\uffff\1\1\1\3\1\2";
	static final String DFA287_specialS =
		"\5\uffff}>";
	static final String[] DFA287_transitionS = {
			"\1\1\76\uffff\1\1\17\uffff\1\3\37\uffff\1\2\25\uffff\1\1",
			"\1\1\76\uffff\1\1\17\uffff\1\4\37\uffff\1\2\25\uffff\1\1",
			"",
			"",
			""
	};

	static final short[] DFA287_eot = DFA.unpackEncodedString(DFA287_eotS);
	static final short[] DFA287_eof = DFA.unpackEncodedString(DFA287_eofS);
	static final char[] DFA287_min = DFA.unpackEncodedStringToUnsignedChars(DFA287_minS);
	static final char[] DFA287_max = DFA.unpackEncodedStringToUnsignedChars(DFA287_maxS);
	static final short[] DFA287_accept = DFA.unpackEncodedString(DFA287_acceptS);
	static final short[] DFA287_special = DFA.unpackEncodedString(DFA287_specialS);
	static final short[][] DFA287_transition;

	static {
		int numStates = DFA287_transitionS.length;
		DFA287_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA287_transition[i] = DFA.unpackEncodedString(DFA287_transitionS[i]);
		}
	}

	protected class DFA287 extends DFA {

		public DFA287(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 287;
			this.eot = DFA287_eot;
			this.eof = DFA287_eof;
			this.min = DFA287_min;
			this.max = DFA287_max;
			this.accept = DFA287_accept;
			this.special = DFA287_special;
			this.transition = DFA287_transition;
		}
		@Override
		public String getDescription() {
			return "886:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA292_eotS =
		"\4\uffff";
	static final String DFA292_eofS =
		"\4\uffff";
	static final String DFA292_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA292_maxS =
		"\2\u009a\2\uffff";
	static final String DFA292_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA292_specialS =
		"\4\uffff}>";
	static final String[] DFA292_transitionS = {
			"\1\1\37\uffff\1\2\36\uffff\1\1\17\uffff\1\3\6\uffff\1\3\30\uffff\1\3"+
			"\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\5\uffff\1\3"+
			"\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff"+
			"\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA292_eot = DFA.unpackEncodedString(DFA292_eotS);
	static final short[] DFA292_eof = DFA.unpackEncodedString(DFA292_eofS);
	static final char[] DFA292_min = DFA.unpackEncodedStringToUnsignedChars(DFA292_minS);
	static final char[] DFA292_max = DFA.unpackEncodedStringToUnsignedChars(DFA292_maxS);
	static final short[] DFA292_accept = DFA.unpackEncodedString(DFA292_acceptS);
	static final short[] DFA292_special = DFA.unpackEncodedString(DFA292_specialS);
	static final short[][] DFA292_transition;

	static {
		int numStates = DFA292_transitionS.length;
		DFA292_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA292_transition[i] = DFA.unpackEncodedString(DFA292_transitionS[i]);
		}
	}

	protected class DFA292 extends DFA {

		public DFA292(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 292;
			this.eot = DFA292_eot;
			this.eof = DFA292_eof;
			this.min = DFA292_min;
			this.max = DFA292_max;
			this.accept = DFA292_accept;
			this.special = DFA292_special;
			this.transition = DFA292_transition;
		}
		@Override
		public String getDescription() {
			return "900:39: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA294_eotS =
		"\4\uffff";
	static final String DFA294_eofS =
		"\4\uffff";
	static final String DFA294_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA294_maxS =
		"\2\u009a\2\uffff";
	static final String DFA294_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA294_specialS =
		"\4\uffff}>";
	static final String[] DFA294_transitionS = {
			"\1\1\37\uffff\1\2\36\uffff\1\1\17\uffff\1\3\6\uffff\1\3\30\uffff\1\3"+
			"\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\5\uffff\1\3"+
			"\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff"+
			"\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA294_eot = DFA.unpackEncodedString(DFA294_eotS);
	static final short[] DFA294_eof = DFA.unpackEncodedString(DFA294_eofS);
	static final char[] DFA294_min = DFA.unpackEncodedStringToUnsignedChars(DFA294_minS);
	static final char[] DFA294_max = DFA.unpackEncodedStringToUnsignedChars(DFA294_maxS);
	static final short[] DFA294_accept = DFA.unpackEncodedString(DFA294_acceptS);
	static final short[] DFA294_special = DFA.unpackEncodedString(DFA294_specialS);
	static final short[][] DFA294_transition;

	static {
		int numStates = DFA294_transitionS.length;
		DFA294_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA294_transition[i] = DFA.unpackEncodedString(DFA294_transitionS[i]);
		}
	}

	protected class DFA294 extends DFA {

		public DFA294(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 294;
			this.eot = DFA294_eot;
			this.eof = DFA294_eof;
			this.min = DFA294_min;
			this.max = DFA294_max;
			this.accept = DFA294_accept;
			this.special = DFA294_special;
			this.transition = DFA294_transition;
		}
		@Override
		public String getDescription() {
			return "901:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA298_eotS =
		"\6\uffff";
	static final String DFA298_eofS =
		"\6\uffff";
	static final String DFA298_minS =
		"\1\24\1\7\1\24\1\uffff\1\7\1\uffff";
	static final String DFA298_maxS =
		"\3\u009a\1\uffff\1\u009a\1\uffff";
	static final String DFA298_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA298_specialS =
		"\6\uffff}>";
	static final String[] DFA298_transitionS = {
			"\1\1\1\2\47\uffff\1\3\26\uffff\1\2\26\uffff\1\3\56\uffff\1\2",
			"\1\5\13\uffff\1\5\1\uffff\1\4\10\uffff\3\5\12\uffff\2\5\2\uffff\2\5"+
			"\3\uffff\1\5\10\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff\1\4\13"+
			"\uffff\2\5\11\uffff\1\3\12\uffff\1\5\17\uffff\1\5\3\uffff\1\5\17\uffff"+
			"\1\4",
			"\1\5\1\2\47\uffff\1\3\26\uffff\1\2\26\uffff\1\3\56\uffff\1\2",
			"",
			"\1\5\13\uffff\1\5\1\uffff\1\4\10\uffff\3\5\12\uffff\2\5\2\uffff\2\5"+
			"\3\uffff\1\5\10\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff\1\4\13"+
			"\uffff\2\5\11\uffff\1\3\12\uffff\1\5\17\uffff\1\5\3\uffff\1\5\17\uffff"+
			"\1\4",
			""
	};

	static final short[] DFA298_eot = DFA.unpackEncodedString(DFA298_eotS);
	static final short[] DFA298_eof = DFA.unpackEncodedString(DFA298_eofS);
	static final char[] DFA298_min = DFA.unpackEncodedStringToUnsignedChars(DFA298_minS);
	static final char[] DFA298_max = DFA.unpackEncodedStringToUnsignedChars(DFA298_maxS);
	static final short[] DFA298_accept = DFA.unpackEncodedString(DFA298_acceptS);
	static final short[] DFA298_special = DFA.unpackEncodedString(DFA298_specialS);
	static final short[][] DFA298_transition;

	static {
		int numStates = DFA298_transitionS.length;
		DFA298_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA298_transition[i] = DFA.unpackEncodedString(DFA298_transitionS[i]);
		}
	}

	protected class DFA298 extends DFA {

		public DFA298(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 298;
			this.eot = DFA298_eot;
			this.eof = DFA298_eof;
			this.min = DFA298_min;
			this.max = DFA298_max;
			this.accept = DFA298_accept;
			this.special = DFA298_special;
			this.transition = DFA298_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 919:18: ( ( ws )? COMMA ( ws )? selector )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA306_eotS =
		"\5\uffff";
	static final String DFA306_eofS =
		"\5\uffff";
	static final String DFA306_minS =
		"\2\7\1\uffff\1\7\1\uffff";
	static final String DFA306_maxS =
		"\1\u008a\1\u009a\1\uffff\1\u009a\1\uffff";
	static final String DFA306_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA306_specialS =
		"\5\uffff}>";
	static final String[] DFA306_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\1\2\1\1\2\uffff\2\2\3\uffff\1"+
			"\2\11\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\1\2\1\1\24\uffff\1\2"+
			"\17\uffff\1\2\3\uffff\1\1",
			"\1\2\13\uffff\1\2\1\4\1\3\10\uffff\3\2\12\uffff\1\2\3\uffff\2\2\3\uffff"+
			"\1\2\10\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3\13\uffff\1"+
			"\2\12\uffff\1\4\12\uffff\1\2\17\uffff\1\2\23\uffff\1\3",
			"",
			"\1\2\13\uffff\1\2\1\4\1\3\10\uffff\3\2\12\uffff\1\2\3\uffff\2\2\3\uffff"+
			"\1\2\10\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3\13\uffff\1"+
			"\2\12\uffff\1\4\12\uffff\1\2\17\uffff\1\2\23\uffff\1\3",
			""
	};

	static final short[] DFA306_eot = DFA.unpackEncodedString(DFA306_eotS);
	static final short[] DFA306_eof = DFA.unpackEncodedString(DFA306_eofS);
	static final char[] DFA306_min = DFA.unpackEncodedStringToUnsignedChars(DFA306_minS);
	static final char[] DFA306_max = DFA.unpackEncodedStringToUnsignedChars(DFA306_maxS);
	static final short[] DFA306_accept = DFA.unpackEncodedString(DFA306_acceptS);
	static final short[] DFA306_special = DFA.unpackEncodedString(DFA306_specialS);
	static final short[][] DFA306_transition;

	static {
		int numStates = DFA306_transitionS.length;
		DFA306_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA306_transition[i] = DFA.unpackEncodedString(DFA306_transitionS[i]);
		}
	}

	protected class DFA306 extends DFA {

		public DFA306(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 306;
			this.eot = DFA306_eot;
			this.eof = DFA306_eof;
			this.min = DFA306_min;
			this.max = DFA306_max;
			this.accept = DFA306_accept;
			this.special = DFA306_special;
			this.transition = DFA306_transition;
		}
		@Override
		public String getDescription() {
			return "922:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA305_eotS =
		"\4\uffff";
	static final String DFA305_eofS =
		"\4\uffff";
	static final String DFA305_minS =
		"\1\24\1\7\2\uffff";
	static final String DFA305_maxS =
		"\2\u009a\2\uffff";
	static final String DFA305_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA305_specialS =
		"\4\uffff}>";
	static final String[] DFA305_transitionS = {
			"\1\2\1\1\26\uffff\1\3\20\uffff\1\2\26\uffff\1\1\14\uffff\1\3\11\uffff"+
			"\1\2\36\uffff\1\3\17\uffff\1\1",
			"\1\3\13\uffff\1\3\1\2\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3\3\uffff"+
			"\1\3\10\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff\2"+
			"\3\11\uffff\1\2\12\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA305_eot = DFA.unpackEncodedString(DFA305_eotS);
	static final short[] DFA305_eof = DFA.unpackEncodedString(DFA305_eofS);
	static final char[] DFA305_min = DFA.unpackEncodedStringToUnsignedChars(DFA305_minS);
	static final char[] DFA305_max = DFA.unpackEncodedStringToUnsignedChars(DFA305_maxS);
	static final short[] DFA305_accept = DFA.unpackEncodedString(DFA305_acceptS);
	static final short[] DFA305_special = DFA.unpackEncodedString(DFA305_specialS);
	static final short[][] DFA305_transition;

	static {
		int numStates = DFA305_transitionS.length;
		DFA305_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA305_transition[i] = DFA.unpackEncodedString(DFA305_transitionS[i]);
		}
	}

	protected class DFA305 extends DFA {

		public DFA305(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 305;
			this.eot = DFA305_eot;
			this.eof = DFA305_eof;
			this.min = DFA305_min;
			this.max = DFA305_max;
			this.accept = DFA305_accept;
			this.special = DFA305_special;
			this.transition = DFA305_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 923:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA304_eotS =
		"\4\uffff";
	static final String DFA304_eofS =
		"\4\uffff";
	static final String DFA304_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA304_maxS =
		"\2\u009a\2\uffff";
	static final String DFA304_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA304_specialS =
		"\4\uffff}>";
	static final String[] DFA304_transitionS = {
			"\1\1\26\uffff\1\2\47\uffff\1\1\14\uffff\1\2\50\uffff\1\2\17\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\1\3\1\2\2\uffff"+
			"\2\3\3\uffff\1\3\11\uffff\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\1\3\1\2\24\uffff\1\3\17\uffff\1\3\3\uffff\1\2\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA304_eot = DFA.unpackEncodedString(DFA304_eotS);
	static final short[] DFA304_eof = DFA.unpackEncodedString(DFA304_eofS);
	static final char[] DFA304_min = DFA.unpackEncodedStringToUnsignedChars(DFA304_minS);
	static final char[] DFA304_max = DFA.unpackEncodedStringToUnsignedChars(DFA304_maxS);
	static final short[] DFA304_accept = DFA.unpackEncodedString(DFA304_acceptS);
	static final short[] DFA304_special = DFA.unpackEncodedString(DFA304_specialS);
	static final short[][] DFA304_transition;

	static {
		int numStates = DFA304_transitionS.length;
		DFA304_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA304_transition[i] = DFA.unpackEncodedString(DFA304_transitionS[i]);
		}
	}

	protected class DFA304 extends DFA {

		public DFA304(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 304;
			this.eot = DFA304_eot;
			this.eof = DFA304_eof;
			this.min = DFA304_min;
			this.max = DFA304_max;
			this.accept = DFA304_accept;
			this.special = DFA304_special;
			this.transition = DFA304_transition;
		}
		@Override
		public String getDescription() {
			return "923:51: ( ( ( ws )? combinator ( ws )? ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA310_eotS =
		"\5\uffff";
	static final String DFA310_eofS =
		"\5\uffff";
	static final String DFA310_minS =
		"\1\23\1\7\1\uffff\1\7\1\uffff";
	static final String DFA310_maxS =
		"\2\u009a\1\uffff\1\122\1\uffff";
	static final String DFA310_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA310_specialS =
		"\5\uffff}>";
	static final String[] DFA310_transitionS = {
			"\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\2\2\15\uffff\1\2\5\uffff\1\2\17"+
			"\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"\1\4\13\uffff\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\1\2\1\3\3\uffff"+
			"\1\4\11\uffff\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\43"+
			"\uffff\1\1",
			"",
			"\1\2\54\uffff\1\2\10\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA310_eot = DFA.unpackEncodedString(DFA310_eotS);
	static final short[] DFA310_eof = DFA.unpackEncodedString(DFA310_eofS);
	static final char[] DFA310_min = DFA.unpackEncodedStringToUnsignedChars(DFA310_minS);
	static final char[] DFA310_max = DFA.unpackEncodedStringToUnsignedChars(DFA310_maxS);
	static final short[] DFA310_accept = DFA.unpackEncodedString(DFA310_acceptS);
	static final short[] DFA310_special = DFA.unpackEncodedString(DFA310_specialS);
	static final short[][] DFA310_transition;

	static {
		int numStates = DFA310_transitionS.length;
		DFA310_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA310_transition[i] = DFA.unpackEncodedString(DFA310_transitionS[i]);
		}
	}

	protected class DFA310 extends DFA {

		public DFA310(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 310;
			this.eot = DFA310_eot;
			this.eof = DFA310_eof;
			this.min = DFA310_min;
			this.max = DFA310_max;
			this.accept = DFA310_accept;
			this.special = DFA310_special;
			this.transition = DFA310_transition;
		}
		@Override
		public String getDescription() {
			return "935:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA313_eotS =
		"\5\uffff";
	static final String DFA313_eofS =
		"\5\uffff";
	static final String DFA313_minS =
		"\2\23\1\uffff\1\7\1\uffff";
	static final String DFA313_maxS =
		"\2\u009a\1\uffff\1\122\1\uffff";
	static final String DFA313_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA313_specialS =
		"\5\uffff}>";
	static final String[] DFA313_transitionS = {
			"\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\2\2\15\uffff\1\2\5\uffff\1\2\17"+
			"\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\1\2\1\3\3\uffff\1\4\11\uffff"+
			"\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"",
			"\1\2\54\uffff\1\2\10\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA313_eot = DFA.unpackEncodedString(DFA313_eotS);
	static final short[] DFA313_eof = DFA.unpackEncodedString(DFA313_eofS);
	static final char[] DFA313_min = DFA.unpackEncodedStringToUnsignedChars(DFA313_minS);
	static final char[] DFA313_max = DFA.unpackEncodedStringToUnsignedChars(DFA313_maxS);
	static final short[] DFA313_accept = DFA.unpackEncodedString(DFA313_acceptS);
	static final short[] DFA313_special = DFA.unpackEncodedString(DFA313_specialS);
	static final short[][] DFA313_transition;

	static {
		int numStates = DFA313_transitionS.length;
		DFA313_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA313_transition[i] = DFA.unpackEncodedString(DFA313_transitionS[i]);
		}
	}

	protected class DFA313 extends DFA {

		public DFA313(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 313;
			this.eot = DFA313_eot;
			this.eof = DFA313_eof;
			this.min = DFA313_min;
			this.max = DFA313_max;
			this.accept = DFA313_accept;
			this.special = DFA313_special;
			this.transition = DFA313_transition;
		}
		@Override
		public String getDescription() {
			return "936:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA336_eotS =
		"\4\uffff";
	static final String DFA336_eofS =
		"\2\3\2\uffff";
	static final String DFA336_minS =
		"\2\6\2\uffff";
	static final String DFA336_maxS =
		"\2\u009a\2\uffff";
	static final String DFA336_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA336_specialS =
		"\4\uffff}>";
	static final String[] DFA336_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\3\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\6\3\2\uffff\1\3\4\uffff"+
			"\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\3\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\6\3\2\uffff\1\3\4\uffff"+
			"\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff\12\3\1\uffff"+
			"\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA336_eot = DFA.unpackEncodedString(DFA336_eotS);
	static final short[] DFA336_eof = DFA.unpackEncodedString(DFA336_eofS);
	static final char[] DFA336_min = DFA.unpackEncodedStringToUnsignedChars(DFA336_minS);
	static final char[] DFA336_max = DFA.unpackEncodedStringToUnsignedChars(DFA336_maxS);
	static final short[] DFA336_accept = DFA.unpackEncodedString(DFA336_acceptS);
	static final short[] DFA336_special = DFA.unpackEncodedString(DFA336_specialS);
	static final short[][] DFA336_transition;

	static {
		int numStates = DFA336_transitionS.length;
		DFA336_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA336_transition[i] = DFA.unpackEncodedString(DFA336_transitionS[i]);
		}
	}

	protected class DFA336 extends DFA {

		public DFA336(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 336;
			this.eot = DFA336_eot;
			this.eof = DFA336_eof;
			this.min = DFA336_min;
			this.max = DFA336_max;
			this.accept = DFA336_accept;
			this.special = DFA336_special;
			this.transition = DFA336_transition;
		}
		@Override
		public String getDescription() {
			return "1051:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA359_eotS =
		"\4\uffff";
	static final String DFA359_eofS =
		"\1\3\3\uffff";
	static final String DFA359_minS =
		"\2\6\2\uffff";
	static final String DFA359_maxS =
		"\2\u009a\2\uffff";
	static final String DFA359_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA359_specialS =
		"\4\uffff}>";
	static final String[] DFA359_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\7\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\5\uffff\1\3"+
			"\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff"+
			"\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA359_eot = DFA.unpackEncodedString(DFA359_eotS);
	static final short[] DFA359_eof = DFA.unpackEncodedString(DFA359_eofS);
	static final char[] DFA359_min = DFA.unpackEncodedStringToUnsignedChars(DFA359_minS);
	static final char[] DFA359_max = DFA.unpackEncodedStringToUnsignedChars(DFA359_maxS);
	static final short[] DFA359_accept = DFA.unpackEncodedString(DFA359_acceptS);
	static final short[] DFA359_special = DFA.unpackEncodedString(DFA359_specialS);
	static final short[][] DFA359_transition;

	static {
		int numStates = DFA359_transitionS.length;
		DFA359_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA359_transition[i] = DFA.unpackEncodedString(DFA359_transitionS[i]);
		}
	}

	protected class DFA359 extends DFA {

		public DFA359(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 359;
			this.eot = DFA359_eot;
			this.eof = DFA359_eof;
			this.min = DFA359_min;
			this.max = DFA359_max;
			this.accept = DFA359_accept;
			this.special = DFA359_special;
			this.transition = DFA359_transition;
		}
		@Override
		public String getDescription() {
			return "1066:50: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA372_eotS =
		"\100\uffff";
	static final String DFA372_eofS =
		"\1\2\77\uffff";
	static final String DFA372_minS =
		"\1\5\1\0\4\uffff\1\0\1\uffff\6\0\1\uffff\3\0\1\uffff\3\0\2\uffff\20\0"+
		"\1\uffff\2\0\2\uffff\1\0\1\uffff\1\0\20\uffff";
	static final String DFA372_maxS =
		"\1\u009a\1\0\4\uffff\1\0\1\uffff\6\0\1\uffff\3\0\1\uffff\3\0\2\uffff\20"+
		"\0\1\uffff\2\0\2\uffff\1\0\1\uffff\1\0\20\uffff";
	static final String DFA372_acceptS =
		"\2\uffff\1\2\53\uffff\1\1\1\uffff\14\1\1\uffff\3\1";
	static final String DFA372_specialS =
		"\1\0\1\1\4\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12"+
		"\1\13\1\uffff\1\14\1\15\1\16\2\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
		"\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\uffff\1\37\1\40\2\uffff"+
		"\1\41\1\uffff\1\42\20\uffff}>";
	static final String[] DFA372_transitionS = {
			"\1\67\1\12\1\24\2\uffff\5\51\3\uffff\1\52\1\2\1\55\1\1\2\uffff\1\52\5"+
			"\uffff\1\2\1\20\1\2\1\uffff\1\64\3\uffff\1\66\1\uffff\1\43\1\71\1\uffff"+
			"\1\30\1\2\2\uffff\1\10\1\17\3\uffff\1\23\1\2\1\41\6\uffff\1\2\1\21\3"+
			"\51\1\63\1\uffff\1\6\1\75\5\uffff\1\46\1\25\1\44\5\uffff\1\52\1\1\4\uffff"+
			"\1\60\3\uffff\1\42\1\62\1\77\1\2\1\15\2\uffff\1\2\1\uffff\1\65\1\72\3"+
			"\51\1\2\1\uffff\1\14\1\40\1\32\1\uffff\1\36\1\52\2\uffff\1\47\1\2\1\35"+
			"\2\52\1\uffff\1\34\1\13\1\11\1\uffff\2\52\1\33\1\32\1\37\1\2\1\56\1\2"+
			"\1\73\1\2\1\uffff\1\57\1\70\5\51\2\uffff\1\61\1\76\2\uffff\1\31\1\uffff"+
			"\1\45\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA372_eot = DFA.unpackEncodedString(DFA372_eotS);
	static final short[] DFA372_eof = DFA.unpackEncodedString(DFA372_eofS);
	static final char[] DFA372_min = DFA.unpackEncodedStringToUnsignedChars(DFA372_minS);
	static final char[] DFA372_max = DFA.unpackEncodedStringToUnsignedChars(DFA372_maxS);
	static final short[] DFA372_accept = DFA.unpackEncodedString(DFA372_acceptS);
	static final short[] DFA372_special = DFA.unpackEncodedString(DFA372_specialS);
	static final short[][] DFA372_transition;

	static {
		int numStates = DFA372_transitionS.length;
		DFA372_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA372_transition[i] = DFA.unpackEncodedString(DFA372_transitionS[i]);
		}
	}

	protected class DFA372 extends DFA {

		public DFA372(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 372;
			this.eot = DFA372_eot;
			this.eof = DFA372_eof;
			this.min = DFA372_min;
			this.max = DFA372_max;
			this.accept = DFA372_accept;
			this.special = DFA372_special;
			this.transition = DFA372_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1147:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA372_0 = input.LA(1);
						 
						int index372_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA372_0==COMMENT||LA372_0==NL||LA372_0==WS) ) {s = 1;}
						else if ( (LA372_0==EOF||LA372_0==COLON||LA372_0==DCOLON||LA372_0==DOT||LA372_0==GREATER||LA372_0==IMPORTANT_SYM||LA372_0==LBRACE||LA372_0==PIPE||LA372_0==RBRACE||LA372_0==RPAREN||LA372_0==SASS_EXTEND_ONLY_SELECTOR||LA372_0==SEMI||LA372_0==STAR||LA372_0==SUPPORTS_SYM) ) {s = 2;}
						else if ( (LA372_0==LESS_AND) ) {s = 6;}
						else if ( (LA372_0==HASH) ) {s = 8;}
						else if ( (LA372_0==SASS_MIXIN) ) {s = 9;}
						else if ( (LA372_0==AT_IDENT) ) {s = 10;}
						else if ( (LA372_0==SASS_INCLUDE) ) {s = 11;}
						else if ( (LA372_0==SASS_AT_ROOT) ) {s = 12;}
						else if ( (LA372_0==PLUS) ) {s = 13;}
						else if ( (LA372_0==HASH_SYMBOL) ) {s = 15;}
						else if ( (LA372_0==DIMENSION) ) {s = 16;}
						else if ( (LA372_0==LBRACKET) ) {s = 17;}
						else if ( (LA372_0==IDENT) ) {s = 19;}
						else if ( (LA372_0==AT_SIGN) ) {s = 20;}
						else if ( (LA372_0==MINUS) ) {s = 21;}
						else if ( (LA372_0==GEN) ) {s = 24;}
						else if ( (LA372_0==VARIABLE) ) {s = 25;}
						else if ( (LA372_0==SASS_DEBUG||LA372_0==SASS_WARN) ) {s = 26;}
						else if ( (LA372_0==SASS_VAR) ) {s = 27;}
						else if ( (LA372_0==SASS_IF) ) {s = 28;}
						else if ( (LA372_0==SASS_FOR) ) {s = 29;}
						else if ( (LA372_0==SASS_EACH) ) {s = 30;}
						else if ( (LA372_0==SASS_WHILE) ) {s = 31;}
						else if ( (LA372_0==SASS_CONTENT) ) {s = 32;}
						else if ( (LA372_0==IMPORT_SYM) ) {s = 33;}
						else if ( (LA372_0==PAGE_SYM) ) {s = 34;}
						else if ( (LA372_0==FONT_FACE_SYM) ) {s = 35;}
						else if ( (LA372_0==MOZ_DOCUMENT_SYM) ) {s = 36;}
						else if ( (LA372_0==WEBKIT_KEYFRAMES_SYM) ) {s = 37;}
						else if ( (LA372_0==MEDIA_SYM) ) {s = 38;}
						else if ( (LA372_0==SASS_EXTEND) ) {s = 39;}
						else if ( ((LA372_0 >= BOTTOMCENTER_SYM && LA372_0 <= BOTTOMRIGHT_SYM)||(LA372_0 >= LEFTBOTTOM_SYM && LA372_0 <= LEFTTOP_SYM)||(LA372_0 >= RIGHTBOTTOM_SYM && LA372_0 <= RIGHTTOP_SYM)||(LA372_0 >= TOPCENTER_SYM && LA372_0 <= TOPRIGHT_SYM)) ) {s = 41;}
						else if ( (LA372_0==CHARSET_SYM||LA372_0==COUNTER_STYLE_SYM||LA372_0==NAMESPACE_SYM||LA372_0==SASS_ELSE||(LA372_0 >= SASS_FORWARD && LA372_0 <= SASS_FUNCTION)||(LA372_0 >= SASS_RETURN && LA372_0 <= SASS_USE)) ) {s = 42;}
						else if ( (LA372_0==COMMA) ) {s = 45;}
						else if ( (LA372_0==SOLIDUS) && (synpred49_Css3())) {s = 46;}
						else if ( (LA372_0==TILDE) ) {s = 47;}
						else if ( (LA372_0==NUMBER) && (synpred49_Css3())) {s = 48;}
						else if ( (LA372_0==URANGE) && (synpred49_Css3())) {s = 49;}
						else if ( (LA372_0==PERCENTAGE) && (synpred49_Css3())) {s = 50;}
						else if ( (LA372_0==LENGTH) && (synpred49_Css3())) {s = 51;}
						else if ( (LA372_0==EMS) && (synpred49_Css3())) {s = 52;}
						else if ( (LA372_0==REM) && (synpred49_Css3())) {s = 53;}
						else if ( (LA372_0==EXS) && (synpred49_Css3())) {s = 54;}
						else if ( (LA372_0==ANGLE) && (synpred49_Css3())) {s = 55;}
						else if ( (LA372_0==TIME) && (synpred49_Css3())) {s = 56;}
						else if ( (LA372_0==FREQ) && (synpred49_Css3())) {s = 57;}
						else if ( (LA372_0==RESOLUTION) && (synpred49_Css3())) {s = 58;}
						else if ( (LA372_0==STRING) && (synpred49_Css3())) {s = 59;}
						else if ( (LA372_0==LESS_JS_STRING) && (synpred49_Css3())) {s = 61;}
						else if ( (LA372_0==URI) && (synpred49_Css3())) {s = 62;}
						else if ( (LA372_0==PERCENTAGE_SYMBOL) && (synpred49_Css3())) {s = 63;}
						 
						input.seek(index372_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA372_1 = input.LA(1);
						 
						int index372_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA372_6 = input.LA(1);
						 
						int index372_6 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_6);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA372_8 = input.LA(1);
						 
						int index372_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_8);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA372_9 = input.LA(1);
						 
						int index372_9 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_9);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA372_10 = input.LA(1);
						 
						int index372_10 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_10);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA372_11 = input.LA(1);
						 
						int index372_11 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_11);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA372_12 = input.LA(1);
						 
						int index372_12 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_12);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA372_13 = input.LA(1);
						 
						int index372_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_13);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA372_15 = input.LA(1);
						 
						int index372_15 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_15);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA372_16 = input.LA(1);
						 
						int index372_16 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {s = 2;}
						 
						input.seek(index372_16);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA372_17 = input.LA(1);
						 
						int index372_17 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_17);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA372_19 = input.LA(1);
						 
						int index372_19 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_19);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA372_20 = input.LA(1);
						 
						int index372_20 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_20);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA372_21 = input.LA(1);
						 
						int index372_21 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_21);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA372_24 = input.LA(1);
						 
						int index372_24 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_24);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA372_25 = input.LA(1);
						 
						int index372_25 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_25);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA372_26 = input.LA(1);
						 
						int index372_26 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_26);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA372_27 = input.LA(1);
						 
						int index372_27 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_27);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA372_28 = input.LA(1);
						 
						int index372_28 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_28);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA372_29 = input.LA(1);
						 
						int index372_29 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_29);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA372_30 = input.LA(1);
						 
						int index372_30 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_30);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA372_31 = input.LA(1);
						 
						int index372_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_31);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA372_32 = input.LA(1);
						 
						int index372_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_32);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA372_33 = input.LA(1);
						 
						int index372_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_33);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA372_34 = input.LA(1);
						 
						int index372_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_34);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA372_35 = input.LA(1);
						 
						int index372_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_35);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA372_36 = input.LA(1);
						 
						int index372_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_36);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA372_37 = input.LA(1);
						 
						int index372_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_37);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA372_38 = input.LA(1);
						 
						int index372_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_38);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA372_39 = input.LA(1);
						 
						int index372_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_39);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA372_41 = input.LA(1);
						 
						int index372_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_41);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA372_42 = input.LA(1);
						 
						int index372_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred49_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_42);
						if ( s>=0 ) return s;
						break;

					case 33 : 
						int LA372_45 = input.LA(1);
						 
						int index372_45 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_45);
						if ( s>=0 ) return s;
						break;

					case 34 : 
						int LA372_47 = input.LA(1);
						 
						int index372_47 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred49_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index372_47);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 372, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA371_eotS =
		"\5\uffff";
	static final String DFA371_eofS =
		"\5\uffff";
	static final String DFA371_minS =
		"\2\5\3\uffff";
	static final String DFA371_maxS =
		"\2\u009a\3\uffff";
	static final String DFA371_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA371_specialS =
		"\5\uffff}>";
	static final String[] DFA371_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff\1\2\1\uffff"+
			"\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\2\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff\1\2\1\uffff"+
			"\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA371_eot = DFA.unpackEncodedString(DFA371_eotS);
	static final short[] DFA371_eof = DFA.unpackEncodedString(DFA371_eofS);
	static final char[] DFA371_min = DFA.unpackEncodedStringToUnsignedChars(DFA371_minS);
	static final char[] DFA371_max = DFA.unpackEncodedStringToUnsignedChars(DFA371_maxS);
	static final short[] DFA371_accept = DFA.unpackEncodedString(DFA371_acceptS);
	static final short[] DFA371_special = DFA.unpackEncodedString(DFA371_specialS);
	static final short[][] DFA371_transition;

	static {
		int numStates = DFA371_transitionS.length;
		DFA371_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA371_transition[i] = DFA.unpackEncodedString(DFA371_transitionS[i]);
		}
	}

	protected class DFA371 extends DFA {

		public DFA371(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 371;
			this.eot = DFA371_eot;
			this.eof = DFA371_eof;
			this.min = DFA371_min;
			this.max = DFA371_max;
			this.accept = DFA371_accept;
			this.special = DFA371_special;
			this.transition = DFA371_transition;
		}
		@Override
		public String getDescription() {
			return "1147:66: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA386_eotS =
		"\4\uffff";
	static final String DFA386_eofS =
		"\4\uffff";
	static final String DFA386_minS =
		"\2\24\2\uffff";
	static final String DFA386_maxS =
		"\2\u009a\2\uffff";
	static final String DFA386_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA386_specialS =
		"\4\uffff}>";
	static final String[] DFA386_transitionS = {
			"\1\3\1\1\76\uffff\1\1\26\uffff\1\2\30\uffff\1\3\25\uffff\1\1",
			"\1\3\1\1\76\uffff\1\1\26\uffff\1\2\30\uffff\1\3\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA386_eot = DFA.unpackEncodedString(DFA386_eotS);
	static final short[] DFA386_eof = DFA.unpackEncodedString(DFA386_eofS);
	static final char[] DFA386_min = DFA.unpackEncodedStringToUnsignedChars(DFA386_minS);
	static final char[] DFA386_max = DFA.unpackEncodedStringToUnsignedChars(DFA386_maxS);
	static final short[] DFA386_accept = DFA.unpackEncodedString(DFA386_acceptS);
	static final short[] DFA386_special = DFA.unpackEncodedString(DFA386_specialS);
	static final short[][] DFA386_transition;

	static {
		int numStates = DFA386_transitionS.length;
		DFA386_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA386_transition[i] = DFA.unpackEncodedString(DFA386_transitionS[i]);
		}
	}

	protected class DFA386 extends DFA {

		public DFA386(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 386;
			this.eot = DFA386_eot;
			this.eof = DFA386_eof;
			this.min = DFA386_min;
			this.max = DFA386_max;
			this.accept = DFA386_accept;
			this.special = DFA386_special;
			this.transition = DFA386_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1215:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA396_eotS =
		"\47\uffff";
	static final String DFA396_eofS =
		"\47\uffff";
	static final String DFA396_minS =
		"\2\5\45\uffff";
	static final String DFA396_maxS =
		"\2\u009a\45\uffff";
	static final String DFA396_acceptS =
		"\2\uffff\1\2\44\1";
	static final String DFA396_specialS =
		"\1\0\1\1\45\uffff}>";
	static final String[] DFA396_transitionS = {
			"\1\17\1\32\1\36\2\uffff\5\32\3\uffff\1\32\1\uffff\1\2\1\1\2\uffff\1\32"+
			"\6\uffff\1\23\2\uffff\1\14\3\uffff\1\16\1\uffff\1\32\1\21\1\uffff\1\27"+
			"\3\uffff\1\31\1\35\3\uffff\1\5\1\uffff\1\32\7\uffff\1\7\3\32\1\13\1\uffff"+
			"\1\34\1\26\5\uffff\1\32\1\4\1\32\5\uffff\1\32\1\1\4\uffff\1\10\3\uffff"+
			"\1\32\1\12\1\37\1\uffff\1\4\4\uffff\1\15\1\22\3\32\1\2\1\uffff\3\32\1"+
			"\uffff\2\32\2\uffff\1\32\1\uffff\3\32\1\uffff\3\32\1\uffff\2\32\1\33"+
			"\2\32\1\2\1\3\1\uffff\1\24\2\uffff\1\25\1\20\5\32\2\uffff\1\11\1\30\2"+
			"\uffff\1\6\1\uffff\1\32\1\1",
			"\1\17\1\41\1\45\2\uffff\5\41\3\uffff\1\41\1\uffff\1\2\1\1\2\uffff\1"+
			"\41\6\uffff\1\23\2\uffff\1\14\3\uffff\1\16\1\uffff\1\41\1\21\1\uffff"+
			"\1\27\3\uffff\1\31\1\44\3\uffff\1\40\1\uffff\1\41\7\uffff\1\7\3\41\1"+
			"\13\1\uffff\1\43\1\26\5\uffff\1\41\1\4\1\41\5\uffff\1\41\1\1\4\uffff"+
			"\1\10\3\uffff\1\41\1\12\1\46\1\uffff\1\4\4\uffff\1\15\1\22\3\41\1\2\1"+
			"\uffff\3\41\1\uffff\2\41\2\uffff\1\41\1\uffff\3\41\1\uffff\3\41\1\uffff"+
			"\2\41\1\42\2\41\1\2\1\3\1\uffff\1\24\2\uffff\1\25\1\20\5\41\2\uffff\1"+
			"\11\1\30\2\uffff\1\6\1\uffff\1\41\1\1",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA396_eot = DFA.unpackEncodedString(DFA396_eotS);
	static final short[] DFA396_eof = DFA.unpackEncodedString(DFA396_eofS);
	static final char[] DFA396_min = DFA.unpackEncodedStringToUnsignedChars(DFA396_minS);
	static final char[] DFA396_max = DFA.unpackEncodedStringToUnsignedChars(DFA396_maxS);
	static final short[] DFA396_accept = DFA.unpackEncodedString(DFA396_acceptS);
	static final short[] DFA396_special = DFA.unpackEncodedString(DFA396_specialS);
	static final short[][] DFA396_transition;

	static {
		int numStates = DFA396_transitionS.length;
		DFA396_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA396_transition[i] = DFA.unpackEncodedString(DFA396_transitionS[i]);
		}
	}

	protected class DFA396 extends DFA {

		public DFA396(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 396;
			this.eot = DFA396_eot;
			this.eof = DFA396_eof;
			this.min = DFA396_min;
			this.max = DFA396_max;
			this.accept = DFA396_accept;
			this.special = DFA396_special;
			this.transition = DFA396_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1233:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA396_0 = input.LA(1);
						 
						int index396_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA396_0==COMMENT||LA396_0==NL||LA396_0==WS) ) {s = 1;}
						else if ( (LA396_0==COMMA||LA396_0==RPAREN||LA396_0==SEMI) ) {s = 2;}
						else if ( (LA396_0==SOLIDUS) && (synpred53_Css3())) {s = 3;}
						else if ( (LA396_0==MINUS||LA396_0==PLUS) && (synpred53_Css3())) {s = 4;}
						else if ( (LA396_0==IDENT) && (synpred53_Css3())) {s = 5;}
						else if ( (LA396_0==VARIABLE) && (synpred53_Css3())) {s = 6;}
						else if ( (LA396_0==LBRACKET) && (synpred53_Css3())) {s = 7;}
						else if ( (LA396_0==NUMBER) && (synpred53_Css3())) {s = 8;}
						else if ( (LA396_0==URANGE) && (synpred53_Css3())) {s = 9;}
						else if ( (LA396_0==PERCENTAGE) && (synpred53_Css3())) {s = 10;}
						else if ( (LA396_0==LENGTH) && (synpred53_Css3())) {s = 11;}
						else if ( (LA396_0==EMS) && (synpred53_Css3())) {s = 12;}
						else if ( (LA396_0==REM) && (synpred53_Css3())) {s = 13;}
						else if ( (LA396_0==EXS) && (synpred53_Css3())) {s = 14;}
						else if ( (LA396_0==ANGLE) && (synpred53_Css3())) {s = 15;}
						else if ( (LA396_0==TIME) && (synpred53_Css3())) {s = 16;}
						else if ( (LA396_0==FREQ) && (synpred53_Css3())) {s = 17;}
						else if ( (LA396_0==RESOLUTION) && (synpred53_Css3())) {s = 18;}
						else if ( (LA396_0==DIMENSION) && (synpred53_Css3())) {s = 19;}
						else if ( (LA396_0==STRING) && (synpred53_Css3())) {s = 20;}
						else if ( (LA396_0==TILDE) && (synpred53_Css3())) {s = 21;}
						else if ( (LA396_0==LESS_JS_STRING) && (synpred53_Css3())) {s = 22;}
						else if ( (LA396_0==GEN) && (synpred53_Css3())) {s = 23;}
						else if ( (LA396_0==URI) && (synpred53_Css3())) {s = 24;}
						else if ( (LA396_0==HASH) && (synpred53_Css3())) {s = 25;}
						else if ( (LA396_0==AT_IDENT||(LA396_0 >= BOTTOMCENTER_SYM && LA396_0 <= BOTTOMRIGHT_SYM)||LA396_0==CHARSET_SYM||LA396_0==COUNTER_STYLE_SYM||LA396_0==FONT_FACE_SYM||LA396_0==IMPORT_SYM||(LA396_0 >= LEFTBOTTOM_SYM && LA396_0 <= LEFTTOP_SYM)||LA396_0==MEDIA_SYM||LA396_0==MOZ_DOCUMENT_SYM||LA396_0==NAMESPACE_SYM||LA396_0==PAGE_SYM||(LA396_0 >= RIGHTBOTTOM_SYM && LA396_0 <= RIGHTTOP_SYM)||(LA396_0 >= SASS_AT_ROOT && LA396_0 <= SASS_DEBUG)||(LA396_0 >= SASS_EACH && LA396_0 <= SASS_ELSE)||LA396_0==SASS_EXTEND||(LA396_0 >= SASS_FOR && LA396_0 <= SASS_FUNCTION)||(LA396_0 >= SASS_IF && LA396_0 <= SASS_MIXIN)||(LA396_0 >= SASS_RETURN && LA396_0 <= SASS_USE)||(LA396_0 >= SASS_WARN && LA396_0 <= SASS_WHILE)||(LA396_0 >= TOPCENTER_SYM && LA396_0 <= TOPRIGHT_SYM)||LA396_0==WEBKIT_KEYFRAMES_SYM) && (synpred53_Css3())) {s = 26;}
						else if ( (LA396_0==SASS_VAR) && (synpred53_Css3())) {s = 27;}
						else if ( (LA396_0==LESS_AND) && (synpred53_Css3())) {s = 28;}
						else if ( (LA396_0==HASH_SYMBOL) && (synpred53_Css3())) {s = 29;}
						else if ( (LA396_0==AT_SIGN) && (synpred53_Css3())) {s = 30;}
						else if ( (LA396_0==PERCENTAGE_SYMBOL) && (synpred53_Css3())) {s = 31;}
						 
						input.seek(index396_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA396_1 = input.LA(1);
						 
						int index396_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA396_1==COMMA||LA396_1==RPAREN||LA396_1==SEMI) ) {s = 2;}
						else if ( (LA396_1==COMMENT||LA396_1==NL||LA396_1==WS) ) {s = 1;}
						else if ( (LA396_1==MINUS||LA396_1==PLUS) && (synpred53_Css3())) {s = 4;}
						else if ( (LA396_1==IDENT) && (synpred53_Css3())) {s = 32;}
						else if ( (LA396_1==VARIABLE) && (synpred53_Css3())) {s = 6;}
						else if ( (LA396_1==LBRACKET) && (synpred53_Css3())) {s = 7;}
						else if ( (LA396_1==NUMBER) && (synpred53_Css3())) {s = 8;}
						else if ( (LA396_1==URANGE) && (synpred53_Css3())) {s = 9;}
						else if ( (LA396_1==PERCENTAGE) && (synpred53_Css3())) {s = 10;}
						else if ( (LA396_1==LENGTH) && (synpred53_Css3())) {s = 11;}
						else if ( (LA396_1==EMS) && (synpred53_Css3())) {s = 12;}
						else if ( (LA396_1==REM) && (synpred53_Css3())) {s = 13;}
						else if ( (LA396_1==EXS) && (synpred53_Css3())) {s = 14;}
						else if ( (LA396_1==ANGLE) && (synpred53_Css3())) {s = 15;}
						else if ( (LA396_1==TIME) && (synpred53_Css3())) {s = 16;}
						else if ( (LA396_1==FREQ) && (synpred53_Css3())) {s = 17;}
						else if ( (LA396_1==RESOLUTION) && (synpred53_Css3())) {s = 18;}
						else if ( (LA396_1==DIMENSION) && (synpred53_Css3())) {s = 19;}
						else if ( (LA396_1==STRING) && (synpred53_Css3())) {s = 20;}
						else if ( (LA396_1==TILDE) && (synpred53_Css3())) {s = 21;}
						else if ( (LA396_1==LESS_JS_STRING) && (synpred53_Css3())) {s = 22;}
						else if ( (LA396_1==GEN) && (synpred53_Css3())) {s = 23;}
						else if ( (LA396_1==URI) && (synpred53_Css3())) {s = 24;}
						else if ( (LA396_1==HASH) && (synpred53_Css3())) {s = 25;}
						else if ( (LA396_1==AT_IDENT||(LA396_1 >= BOTTOMCENTER_SYM && LA396_1 <= BOTTOMRIGHT_SYM)||LA396_1==CHARSET_SYM||LA396_1==COUNTER_STYLE_SYM||LA396_1==FONT_FACE_SYM||LA396_1==IMPORT_SYM||(LA396_1 >= LEFTBOTTOM_SYM && LA396_1 <= LEFTTOP_SYM)||LA396_1==MEDIA_SYM||LA396_1==MOZ_DOCUMENT_SYM||LA396_1==NAMESPACE_SYM||LA396_1==PAGE_SYM||(LA396_1 >= RIGHTBOTTOM_SYM && LA396_1 <= RIGHTTOP_SYM)||(LA396_1 >= SASS_AT_ROOT && LA396_1 <= SASS_DEBUG)||(LA396_1 >= SASS_EACH && LA396_1 <= SASS_ELSE)||LA396_1==SASS_EXTEND||(LA396_1 >= SASS_FOR && LA396_1 <= SASS_FUNCTION)||(LA396_1 >= SASS_IF && LA396_1 <= SASS_MIXIN)||(LA396_1 >= SASS_RETURN && LA396_1 <= SASS_USE)||(LA396_1 >= SASS_WARN && LA396_1 <= SASS_WHILE)||(LA396_1 >= TOPCENTER_SYM && LA396_1 <= TOPRIGHT_SYM)||LA396_1==WEBKIT_KEYFRAMES_SYM) && (synpred53_Css3())) {s = 33;}
						else if ( (LA396_1==SASS_VAR) && (synpred53_Css3())) {s = 34;}
						else if ( (LA396_1==LESS_AND) && (synpred53_Css3())) {s = 35;}
						else if ( (LA396_1==HASH_SYMBOL) && (synpred53_Css3())) {s = 36;}
						else if ( (LA396_1==AT_SIGN) && (synpred53_Css3())) {s = 37;}
						else if ( (LA396_1==PERCENTAGE_SYMBOL) && (synpred53_Css3())) {s = 38;}
						else if ( (LA396_1==SOLIDUS) && (synpred53_Css3())) {s = 3;}
						 
						input.seek(index396_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 396, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA395_eotS =
		"\5\uffff";
	static final String DFA395_eofS =
		"\5\uffff";
	static final String DFA395_minS =
		"\2\5\3\uffff";
	static final String DFA395_maxS =
		"\2\u009a\3\uffff";
	static final String DFA395_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA395_specialS =
		"\5\uffff}>";
	static final String[] DFA395_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\2\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff\1\2\1\uffff\1\3\2\uffff"+
			"\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\2\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff\1\2\1\uffff\1\4\2\uffff"+
			"\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA395_eot = DFA.unpackEncodedString(DFA395_eotS);
	static final short[] DFA395_eof = DFA.unpackEncodedString(DFA395_eofS);
	static final char[] DFA395_min = DFA.unpackEncodedStringToUnsignedChars(DFA395_minS);
	static final char[] DFA395_max = DFA.unpackEncodedStringToUnsignedChars(DFA395_maxS);
	static final short[] DFA395_accept = DFA.unpackEncodedString(DFA395_acceptS);
	static final short[] DFA395_special = DFA.unpackEncodedString(DFA395_specialS);
	static final short[][] DFA395_transition;

	static {
		int numStates = DFA395_transitionS.length;
		DFA395_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA395_transition[i] = DFA.unpackEncodedString(DFA395_transitionS[i]);
		}
	}

	protected class DFA395 extends DFA {

		public DFA395(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 395;
			this.eot = DFA395_eot;
			this.eof = DFA395_eof;
			this.min = DFA395_min;
			this.max = DFA395_max;
			this.accept = DFA395_accept;
			this.special = DFA395_special;
			this.transition = DFA395_transition;
		}
		@Override
		public String getDescription() {
			return "1233:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA405_eotS =
		"\5\uffff";
	static final String DFA405_eofS =
		"\2\2\3\uffff";
	static final String DFA405_minS =
		"\2\6\3\uffff";
	static final String DFA405_maxS =
		"\2\u009a\3\uffff";
	static final String DFA405_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA405_specialS =
		"\5\uffff}>";
	static final String[] DFA405_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2\2\uffff\5\2"+
			"\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2"+
			"\10\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2\1\uffff\6\2"+
			"\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2"+
			"\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA405_eot = DFA.unpackEncodedString(DFA405_eotS);
	static final short[] DFA405_eof = DFA.unpackEncodedString(DFA405_eofS);
	static final char[] DFA405_min = DFA.unpackEncodedStringToUnsignedChars(DFA405_minS);
	static final char[] DFA405_max = DFA.unpackEncodedStringToUnsignedChars(DFA405_maxS);
	static final short[] DFA405_accept = DFA.unpackEncodedString(DFA405_acceptS);
	static final short[] DFA405_special = DFA.unpackEncodedString(DFA405_specialS);
	static final short[][] DFA405_transition;

	static {
		int numStates = DFA405_transitionS.length;
		DFA405_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA405_transition[i] = DFA.unpackEncodedString(DFA405_transitionS[i]);
		}
	}

	protected class DFA405 extends DFA {

		public DFA405(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 405;
			this.eot = DFA405_eot;
			this.eof = DFA405_eof;
			this.min = DFA405_min;
			this.max = DFA405_max;
			this.accept = DFA405_accept;
			this.special = DFA405_special;
			this.transition = DFA405_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1252:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA411_eotS =
		"\110\uffff";
	static final String DFA411_eofS =
		"\1\2\107\uffff";
	static final String DFA411_minS =
		"\1\5\1\0\57\uffff\1\0\26\uffff";
	static final String DFA411_maxS =
		"\1\u009a\1\0\57\uffff\1\0\26\uffff";
	static final String DFA411_acceptS =
		"\2\uffff\1\2\104\uffff\1\1";
	static final String DFA411_specialS =
		"\1\uffff\1\0\57\uffff\1\1\26\uffff}>";
	static final String[] DFA411_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\2\2\1\61\1\1\1\2\1\uffff\1\2\5\uffff\3\2\1\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\2\2\2\uffff\2\2\3\uffff\3\2\5\uffff"+
			"\7\2\1\uffff\2\2\3\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\2\2"+
			"\3\uffff\5\2\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff\11\2\1\uffff"+
			"\6\2\1\uffff\3\2\1\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA411_eot = DFA.unpackEncodedString(DFA411_eotS);
	static final short[] DFA411_eof = DFA.unpackEncodedString(DFA411_eofS);
	static final char[] DFA411_min = DFA.unpackEncodedStringToUnsignedChars(DFA411_minS);
	static final char[] DFA411_max = DFA.unpackEncodedStringToUnsignedChars(DFA411_maxS);
	static final short[] DFA411_accept = DFA.unpackEncodedString(DFA411_acceptS);
	static final short[] DFA411_special = DFA.unpackEncodedString(DFA411_specialS);
	static final short[][] DFA411_transition;

	static {
		int numStates = DFA411_transitionS.length;
		DFA411_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA411_transition[i] = DFA.unpackEncodedString(DFA411_transitionS[i]);
		}
	}

	protected class DFA411 extends DFA {

		public DFA411(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 411;
			this.eot = DFA411_eot;
			this.eof = DFA411_eof;
			this.min = DFA411_min;
			this.max = DFA411_max;
			this.accept = DFA411_accept;
			this.special = DFA411_special;
			this.transition = DFA411_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1268:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA411_1 = input.LA(1);
						 
						int index411_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index411_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA411_49 = input.LA(1);
						 
						int index411_49 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index411_49);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 411, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA417_eotS =
		"\120\uffff";
	static final String DFA417_eofS =
		"\1\2\117\uffff";
	static final String DFA417_minS =
		"\1\5\1\0\2\uffff\13\0\2\uffff\1\0\1\uffff\6\0\1\uffff\2\0\3\uffff\14\0"+
		"\1\uffff\2\0\1\uffff\1\0\2\uffff\1\0\3\uffff\21\0\2\uffff\1\0\6\uffff";
	static final String DFA417_maxS =
		"\1\u009a\1\0\2\uffff\13\0\2\uffff\1\0\1\uffff\6\0\1\uffff\2\0\3\uffff"+
		"\14\0\1\uffff\2\0\1\uffff\1\0\2\uffff\1\0\3\uffff\21\0\2\uffff\1\0\6\uffff";
	static final String DFA417_acceptS =
		"\2\uffff\1\3\107\uffff\5\1\1\2";
	static final String DFA417_specialS =
		"\1\0\1\1\2\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\2\uffff"+
		"\1\15\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff\1\24\1\25\3\uffff"+
		"\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\uffff\1"+
		"\42\1\43\1\uffff\1\44\2\uffff\1\45\3\uffff\1\46\1\47\1\50\1\51\1\52\1"+
		"\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\2\uffff\1\67"+
		"\6\uffff}>";
	static final String[] DFA417_transitionS = {
			"\1\76\1\24\1\12\2\uffff\5\54\3\uffff\1\62\2\2\1\111\1\2\1\uffff\1\55"+
			"\1\2\1\112\1\113\2\uffff\1\2\1\32\1\2\1\uffff\1\73\3\uffff\1\75\1\uffff"+
			"\1\46\1\100\1\uffff\1\14\1\102\1\116\1\uffff\1\23\1\11\3\uffff\1\7\1"+
			"\4\1\44\5\uffff\2\2\1\33\3\54\1\72\1\114\1\21\1\103\1\115\1\2\1\uffff"+
			"\1\106\1\uffff\1\51\1\10\1\47\5\uffff\1\62\1\111\3\uffff\1\66\1\5\3\uffff"+
			"\1\45\1\71\1\105\1\2\1\30\2\uffff\1\2\1\uffff\1\74\1\101\3\54\1\2\1\uffff"+
			"\1\26\1\43\1\27\1\2\1\41\1\62\2\uffff\1\52\1\2\1\40\1\62\1\57\1\2\1\37"+
			"\1\25\1\15\1\uffff\2\62\1\16\1\27\1\42\1\2\1\uffff\1\2\1\6\1\2\1\uffff"+
			"\1\67\1\77\5\54\2\uffff\1\70\1\104\2\uffff\1\13\1\uffff\1\50\1\1",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA417_eot = DFA.unpackEncodedString(DFA417_eotS);
	static final short[] DFA417_eof = DFA.unpackEncodedString(DFA417_eofS);
	static final char[] DFA417_min = DFA.unpackEncodedStringToUnsignedChars(DFA417_minS);
	static final char[] DFA417_max = DFA.unpackEncodedStringToUnsignedChars(DFA417_maxS);
	static final short[] DFA417_accept = DFA.unpackEncodedString(DFA417_acceptS);
	static final short[] DFA417_special = DFA.unpackEncodedString(DFA417_specialS);
	static final short[][] DFA417_transition;

	static {
		int numStates = DFA417_transitionS.length;
		DFA417_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA417_transition[i] = DFA.unpackEncodedString(DFA417_transitionS[i]);
		}
	}

	protected class DFA417 extends DFA {

		public DFA417(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 417;
			this.eot = DFA417_eot;
			this.eof = DFA417_eof;
			this.min = DFA417_min;
			this.max = DFA417_max;
			this.accept = DFA417_accept;
			this.special = DFA417_special;
			this.transition = DFA417_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1285:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA417_0 = input.LA(1);
						 
						int index417_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA417_0==WS) ) {s = 1;}
						else if ( (LA417_0==EOF||(LA417_0 >= COLON && LA417_0 <= COMMA)||LA417_0==CONTAINER_SYM||LA417_0==CP_DOTS||LA417_0==DCOLON||LA417_0==DOT||(LA417_0 >= LAYER_SYM && LA417_0 <= LBRACE)||LA417_0==LESS_REST||LA417_0==PIPE||LA417_0==RBRACE||LA417_0==RPAREN||LA417_0==SASS_DEFAULT||LA417_0==SASS_EXTEND_ONLY_SELECTOR||LA417_0==SASS_GLOBAL||LA417_0==SEMI||LA417_0==STAR||LA417_0==SUPPORTS_SYM) ) {s = 2;}
						else if ( (LA417_0==IMPORTANT_SYM) ) {s = 4;}
						else if ( (LA417_0==NUMBER) ) {s = 5;}
						else if ( (LA417_0==STRING) ) {s = 6;}
						else if ( (LA417_0==IDENT) ) {s = 7;}
						else if ( (LA417_0==MINUS) ) {s = 8;}
						else if ( (LA417_0==HASH_SYMBOL) ) {s = 9;}
						else if ( (LA417_0==AT_SIGN) ) {s = 10;}
						else if ( (LA417_0==VARIABLE) ) {s = 11;}
						else if ( (LA417_0==GEN) ) {s = 12;}
						else if ( (LA417_0==SASS_MIXIN) ) {s = 13;}
						else if ( (LA417_0==SASS_VAR) ) {s = 14;}
						else if ( (LA417_0==LESS_AND) ) {s = 17;}
						else if ( (LA417_0==HASH) ) {s = 19;}
						else if ( (LA417_0==AT_IDENT) ) {s = 20;}
						else if ( (LA417_0==SASS_INCLUDE) ) {s = 21;}
						else if ( (LA417_0==SASS_AT_ROOT) ) {s = 22;}
						else if ( (LA417_0==SASS_DEBUG||LA417_0==SASS_WARN) ) {s = 23;}
						else if ( (LA417_0==PLUS) ) {s = 24;}
						else if ( (LA417_0==DIMENSION) ) {s = 26;}
						else if ( (LA417_0==LBRACKET) ) {s = 27;}
						else if ( (LA417_0==SASS_IF) ) {s = 31;}
						else if ( (LA417_0==SASS_FOR) ) {s = 32;}
						else if ( (LA417_0==SASS_EACH) ) {s = 33;}
						else if ( (LA417_0==SASS_WHILE) ) {s = 34;}
						else if ( (LA417_0==SASS_CONTENT) ) {s = 35;}
						else if ( (LA417_0==IMPORT_SYM) ) {s = 36;}
						else if ( (LA417_0==PAGE_SYM) ) {s = 37;}
						else if ( (LA417_0==FONT_FACE_SYM) ) {s = 38;}
						else if ( (LA417_0==MOZ_DOCUMENT_SYM) ) {s = 39;}
						else if ( (LA417_0==WEBKIT_KEYFRAMES_SYM) ) {s = 40;}
						else if ( (LA417_0==MEDIA_SYM) ) {s = 41;}
						else if ( (LA417_0==SASS_EXTEND) ) {s = 42;}
						else if ( ((LA417_0 >= BOTTOMCENTER_SYM && LA417_0 <= BOTTOMRIGHT_SYM)||(LA417_0 >= LEFTBOTTOM_SYM && LA417_0 <= LEFTTOP_SYM)||(LA417_0 >= RIGHTBOTTOM_SYM && LA417_0 <= RIGHTTOP_SYM)||(LA417_0 >= TOPCENTER_SYM && LA417_0 <= TOPRIGHT_SYM)) ) {s = 44;}
						else if ( (LA417_0==COUNTER_STYLE_SYM) ) {s = 45;}
						else if ( (LA417_0==SASS_FUNCTION) ) {s = 47;}
						else if ( (LA417_0==CHARSET_SYM||LA417_0==NAMESPACE_SYM||LA417_0==SASS_ELSE||LA417_0==SASS_FORWARD||(LA417_0 >= SASS_RETURN && LA417_0 <= SASS_USE)) ) {s = 50;}
						else if ( (LA417_0==NOT) ) {s = 54;}
						else if ( (LA417_0==TILDE) ) {s = 55;}
						else if ( (LA417_0==URANGE) ) {s = 56;}
						else if ( (LA417_0==PERCENTAGE) ) {s = 57;}
						else if ( (LA417_0==LENGTH) ) {s = 58;}
						else if ( (LA417_0==EMS) ) {s = 59;}
						else if ( (LA417_0==REM) ) {s = 60;}
						else if ( (LA417_0==EXS) ) {s = 61;}
						else if ( (LA417_0==ANGLE) ) {s = 62;}
						else if ( (LA417_0==TIME) ) {s = 63;}
						else if ( (LA417_0==FREQ) ) {s = 64;}
						else if ( (LA417_0==RESOLUTION) ) {s = 65;}
						else if ( (LA417_0==GREATER) ) {s = 66;}
						else if ( (LA417_0==LESS_JS_STRING) ) {s = 67;}
						else if ( (LA417_0==URI) ) {s = 68;}
						else if ( (LA417_0==PERCENTAGE_SYMBOL) ) {s = 69;}
						else if ( (LA417_0==LPAREN) ) {s = 70;}
						else if ( (LA417_0==COMMENT||LA417_0==NL) ) {s = 73;}
						else if ( (LA417_0==CP_EQ) && (synpred57_Css3())) {s = 74;}
						else if ( (LA417_0==CP_NOT_EQ) && (synpred57_Css3())) {s = 75;}
						else if ( (LA417_0==LESS) && (synpred57_Css3())) {s = 76;}
						else if ( (LA417_0==LESS_OR_EQ) && (synpred57_Css3())) {s = 77;}
						else if ( (LA417_0==GREATER_OR_EQ) && (synpred57_Css3())) {s = 78;}
						 
						input.seek(index417_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA417_1 = input.LA(1);
						 
						int index417_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred57_Css3()) ) {s = 78;}
						else if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA417_4 = input.LA(1);
						 
						int index417_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_4);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA417_5 = input.LA(1);
						 
						int index417_5 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_5);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA417_6 = input.LA(1);
						 
						int index417_6 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_6);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA417_7 = input.LA(1);
						 
						int index417_7 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred57_Css3()&&(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")||evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")))) ) {s = 78;}
						else if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_7);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA417_8 = input.LA(1);
						 
						int index417_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_8);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA417_9 = input.LA(1);
						 
						int index417_9 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred58_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_9);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA417_10 = input.LA(1);
						 
						int index417_10 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred58_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_10);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA417_11 = input.LA(1);
						 
						int index417_11 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_11);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA417_12 = input.LA(1);
						 
						int index417_12 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_12);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA417_13 = input.LA(1);
						 
						int index417_13 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_13);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA417_14 = input.LA(1);
						 
						int index417_14 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_14);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA417_17 = input.LA(1);
						 
						int index417_17 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred58_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_17);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA417_19 = input.LA(1);
						 
						int index417_19 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_19);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA417_20 = input.LA(1);
						 
						int index417_20 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_20);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA417_21 = input.LA(1);
						 
						int index417_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_21);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA417_22 = input.LA(1);
						 
						int index417_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_22);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA417_23 = input.LA(1);
						 
						int index417_23 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_23);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA417_24 = input.LA(1);
						 
						int index417_24 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_24);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA417_26 = input.LA(1);
						 
						int index417_26 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_26);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA417_27 = input.LA(1);
						 
						int index417_27 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_27);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA417_31 = input.LA(1);
						 
						int index417_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_31);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA417_32 = input.LA(1);
						 
						int index417_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_32);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA417_33 = input.LA(1);
						 
						int index417_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_33);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA417_34 = input.LA(1);
						 
						int index417_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_34);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA417_35 = input.LA(1);
						 
						int index417_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_35);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA417_36 = input.LA(1);
						 
						int index417_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_36);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA417_37 = input.LA(1);
						 
						int index417_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_37);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA417_38 = input.LA(1);
						 
						int index417_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_38);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA417_39 = input.LA(1);
						 
						int index417_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_39);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA417_40 = input.LA(1);
						 
						int index417_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_40);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA417_41 = input.LA(1);
						 
						int index417_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_41);
						if ( s>=0 ) return s;
						break;

					case 33 : 
						int LA417_42 = input.LA(1);
						 
						int index417_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_42);
						if ( s>=0 ) return s;
						break;

					case 34 : 
						int LA417_44 = input.LA(1);
						 
						int index417_44 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_44);
						if ( s>=0 ) return s;
						break;

					case 35 : 
						int LA417_45 = input.LA(1);
						 
						int index417_45 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_45);
						if ( s>=0 ) return s;
						break;

					case 36 : 
						int LA417_47 = input.LA(1);
						 
						int index417_47 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_47);
						if ( s>=0 ) return s;
						break;

					case 37 : 
						int LA417_50 = input.LA(1);
						 
						int index417_50 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_50);
						if ( s>=0 ) return s;
						break;

					case 38 : 
						int LA417_54 = input.LA(1);
						 
						int index417_54 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_54);
						if ( s>=0 ) return s;
						break;

					case 39 : 
						int LA417_55 = input.LA(1);
						 
						int index417_55 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_55);
						if ( s>=0 ) return s;
						break;

					case 40 : 
						int LA417_56 = input.LA(1);
						 
						int index417_56 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_56);
						if ( s>=0 ) return s;
						break;

					case 41 : 
						int LA417_57 = input.LA(1);
						 
						int index417_57 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_57);
						if ( s>=0 ) return s;
						break;

					case 42 : 
						int LA417_58 = input.LA(1);
						 
						int index417_58 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_58);
						if ( s>=0 ) return s;
						break;

					case 43 : 
						int LA417_59 = input.LA(1);
						 
						int index417_59 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_59);
						if ( s>=0 ) return s;
						break;

					case 44 : 
						int LA417_60 = input.LA(1);
						 
						int index417_60 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_60);
						if ( s>=0 ) return s;
						break;

					case 45 : 
						int LA417_61 = input.LA(1);
						 
						int index417_61 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_61);
						if ( s>=0 ) return s;
						break;

					case 46 : 
						int LA417_62 = input.LA(1);
						 
						int index417_62 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_62);
						if ( s>=0 ) return s;
						break;

					case 47 : 
						int LA417_63 = input.LA(1);
						 
						int index417_63 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_63);
						if ( s>=0 ) return s;
						break;

					case 48 : 
						int LA417_64 = input.LA(1);
						 
						int index417_64 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_64);
						if ( s>=0 ) return s;
						break;

					case 49 : 
						int LA417_65 = input.LA(1);
						 
						int index417_65 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_65);
						if ( s>=0 ) return s;
						break;

					case 50 : 
						int LA417_66 = input.LA(1);
						 
						int index417_66 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred57_Css3()) ) {s = 78;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_66);
						if ( s>=0 ) return s;
						break;

					case 51 : 
						int LA417_67 = input.LA(1);
						 
						int index417_67 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_67);
						if ( s>=0 ) return s;
						break;

					case 52 : 
						int LA417_68 = input.LA(1);
						 
						int index417_68 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_68);
						if ( s>=0 ) return s;
						break;

					case 53 : 
						int LA417_69 = input.LA(1);
						 
						int index417_69 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {s = 79;}
						else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {s = 2;}
						 
						input.seek(index417_69);
						if ( s>=0 ) return s;
						break;

					case 54 : 
						int LA417_70 = input.LA(1);
						 
						int index417_70 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_70);
						if ( s>=0 ) return s;
						break;

					case 55 : 
						int LA417_73 = input.LA(1);
						 
						int index417_73 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred57_Css3()) ) {s = 78;}
						else if ( (synpred58_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index417_73);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 417, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA431_eotS =
		"\120\uffff";
	static final String DFA431_eofS =
		"\1\2\117\uffff";
	static final String DFA431_minS =
		"\1\5\1\0\13\uffff\1\0\34\uffff\1\0\10\uffff\1\0\32\uffff\1\0\1\uffff";
	static final String DFA431_maxS =
		"\1\u009a\1\0\13\uffff\1\0\34\uffff\1\0\10\uffff\1\0\32\uffff\1\0\1\uffff";
	static final String DFA431_acceptS =
		"\2\uffff\1\2\114\uffff\1\1";
	static final String DFA431_specialS =
		"\1\0\1\1\13\uffff\1\2\34\uffff\1\3\10\uffff\1\4\32\uffff\1\5\1\uffff}>";
	static final String[] DFA431_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\116\1\2\1\uffff\4\2\2\uffff\3\2\1\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\3\uffff\3\2\5\uffff"+
			"\14\2\1\uffff\1\2\1\uffff\1\2\1\15\1\2\5\uffff\1\2\1\116\3\uffff\2\2"+
			"\3\uffff\4\2\1\52\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff\11\2\1"+
			"\uffff\6\2\1\117\1\63\2\2\1\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA431_eot = DFA.unpackEncodedString(DFA431_eotS);
	static final short[] DFA431_eof = DFA.unpackEncodedString(DFA431_eofS);
	static final char[] DFA431_min = DFA.unpackEncodedStringToUnsignedChars(DFA431_minS);
	static final char[] DFA431_max = DFA.unpackEncodedStringToUnsignedChars(DFA431_maxS);
	static final short[] DFA431_accept = DFA.unpackEncodedString(DFA431_acceptS);
	static final short[] DFA431_special = DFA.unpackEncodedString(DFA431_specialS);
	static final short[][] DFA431_transition;

	static {
		int numStates = DFA431_transitionS.length;
		DFA431_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA431_transition[i] = DFA.unpackEncodedString(DFA431_transitionS[i]);
		}
	}

	protected class DFA431 extends DFA {

		public DFA431(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 431;
			this.eot = DFA431_eot;
			this.eof = DFA431_eof;
			this.min = DFA431_min;
			this.max = DFA431_max;
			this.accept = DFA431_accept;
			this.special = DFA431_special;
			this.transition = DFA431_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1327:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA431_0 = input.LA(1);
						 
						int index431_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA431_0==WS) ) {s = 1;}
						else if ( (LA431_0==EOF||(LA431_0 >= ANGLE && LA431_0 <= AT_SIGN)||(LA431_0 >= BOTTOMCENTER_SYM && LA431_0 <= BOTTOMRIGHT_SYM)||(LA431_0 >= CHARSET_SYM && LA431_0 <= COMMA)||LA431_0==CONTAINER_SYM||(LA431_0 >= COUNTER_STYLE_SYM && LA431_0 <= CP_NOT_EQ)||(LA431_0 >= DCOLON && LA431_0 <= DOT)||LA431_0==EMS||LA431_0==EXS||(LA431_0 >= FONT_FACE_SYM && LA431_0 <= FREQ)||(LA431_0 >= GEN && LA431_0 <= GREATER_OR_EQ)||(LA431_0 >= HASH && LA431_0 <= HASH_SYMBOL)||(LA431_0 >= IDENT && LA431_0 <= IMPORT_SYM)||(LA431_0 >= LAYER_SYM && LA431_0 <= LESS_REST)||LA431_0==LPAREN||LA431_0==MEDIA_SYM||LA431_0==MOZ_DOCUMENT_SYM||LA431_0==NAMESPACE_SYM||(LA431_0 >= NOT && LA431_0 <= NUMBER)||(LA431_0 >= PAGE_SYM && LA431_0 <= PIPE)||LA431_0==RBRACE||(LA431_0 >= REM && LA431_0 <= RPAREN)||(LA431_0 >= SASS_AT_ROOT && LA431_0 <= SASS_ELSE)||(LA431_0 >= SASS_EXTEND && LA431_0 <= SASS_MIXIN)||(LA431_0 >= SASS_RETURN && LA431_0 <= SEMI)||(LA431_0 >= STRING && LA431_0 <= SUPPORTS_SYM)||(LA431_0 >= TILDE && LA431_0 <= TOPRIGHT_SYM)||(LA431_0 >= URANGE && LA431_0 <= URI)||LA431_0==VARIABLE||LA431_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA431_0==MINUS) ) {s = 13;}
						else if ( (LA431_0==PLUS) ) {s = 42;}
						else if ( (LA431_0==STAR) ) {s = 51;}
						else if ( (LA431_0==COMMENT||LA431_0==NL) ) {s = 78;}
						else if ( (LA431_0==SOLIDUS) && (synpred60_Css3())) {s = 79;}
						 
						input.seek(index431_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA431_1 = input.LA(1);
						 
						int index431_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index431_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA431_13 = input.LA(1);
						 
						int index431_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index431_13);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA431_42 = input.LA(1);
						 
						int index431_42 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index431_42);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA431_51 = input.LA(1);
						 
						int index431_51 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index431_51);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA431_78 = input.LA(1);
						 
						int index431_78 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index431_78);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 431, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA436_eotS =
		"\6\uffff";
	static final String DFA436_eofS =
		"\6\uffff";
	static final String DFA436_minS =
		"\2\5\3\uffff\1\5";
	static final String DFA436_maxS =
		"\1\u0099\1\u009a\3\uffff\1\u009a";
	static final String DFA436_acceptS =
		"\2\uffff\1\1\1\2\1\3\1\uffff";
	static final String DFA436_specialS =
		"\6\uffff}>";
	static final String[] DFA436_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\1\2\5\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\3\1\2\7\uffff"+
			"\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\1\1\2\5\uffff\1\2\5\uffff"+
			"\1\2\3\uffff\3\2\1\uffff\1\1\4\uffff\5\2\2\uffff\3\2\1\uffff\2\2\2\uffff"+
			"\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff\1\2\2\uffff\7\2\2\uffff"+
			"\2\2\2\uffff\1\2\1\uffff\1\2",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\2\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff\1\2\2\uffff"+
			"\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\5",
			"",
			"",
			"",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\2\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff\1\2\2\uffff"+
			"\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\5"
	};

	static final short[] DFA436_eot = DFA.unpackEncodedString(DFA436_eotS);
	static final short[] DFA436_eof = DFA.unpackEncodedString(DFA436_eofS);
	static final char[] DFA436_min = DFA.unpackEncodedStringToUnsignedChars(DFA436_minS);
	static final char[] DFA436_max = DFA.unpackEncodedStringToUnsignedChars(DFA436_maxS);
	static final short[] DFA436_accept = DFA.unpackEncodedString(DFA436_acceptS);
	static final short[] DFA436_special = DFA.unpackEncodedString(DFA436_specialS);
	static final short[][] DFA436_transition;

	static {
		int numStates = DFA436_transitionS.length;
		DFA436_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA436_transition[i] = DFA.unpackEncodedString(DFA436_transitionS[i]);
		}
	}

	protected class DFA436 extends DFA {

		public DFA436(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 436;
			this.eot = DFA436_eot;
			this.eof = DFA436_eof;
			this.min = DFA436_min;
			this.max = DFA436_max;
			this.accept = DFA436_accept;
			this.special = DFA436_special;
			this.transition = DFA436_transition;
		}
		@Override
		public String getDescription() {
			return "1332:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA443_eotS =
		"\4\uffff";
	static final String DFA443_eofS =
		"\4\uffff";
	static final String DFA443_minS =
		"\2\25\2\uffff";
	static final String DFA443_maxS =
		"\2\u009a\2\uffff";
	static final String DFA443_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA443_specialS =
		"\4\uffff}>";
	static final String[] DFA443_transitionS = {
			"\1\1\36\uffff\1\2\10\uffff\1\3\26\uffff\1\1\105\uffff\1\1",
			"\1\1\36\uffff\1\2\10\uffff\1\3\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA443_eot = DFA.unpackEncodedString(DFA443_eotS);
	static final short[] DFA443_eof = DFA.unpackEncodedString(DFA443_eofS);
	static final char[] DFA443_min = DFA.unpackEncodedStringToUnsignedChars(DFA443_minS);
	static final char[] DFA443_max = DFA.unpackEncodedStringToUnsignedChars(DFA443_maxS);
	static final short[] DFA443_accept = DFA.unpackEncodedString(DFA443_acceptS);
	static final short[] DFA443_special = DFA.unpackEncodedString(DFA443_specialS);
	static final short[][] DFA443_transition;

	static {
		int numStates = DFA443_transitionS.length;
		DFA443_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA443_transition[i] = DFA.unpackEncodedString(DFA443_transitionS[i]);
		}
	}

	protected class DFA443 extends DFA {

		public DFA443(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 443;
			this.eot = DFA443_eot;
			this.eof = DFA443_eof;
			this.min = DFA443_min;
			this.max = DFA443_max;
			this.accept = DFA443_accept;
			this.special = DFA443_special;
			this.transition = DFA443_transition;
		}
		@Override
		public String getDescription() {
			return "1348:107: ( ( ws )? less_mixin_guarded )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA447_eotS =
		"\4\uffff";
	static final String DFA447_eofS =
		"\4\uffff";
	static final String DFA447_minS =
		"\2\25\2\uffff";
	static final String DFA447_maxS =
		"\2\u009a\2\uffff";
	static final String DFA447_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA447_specialS =
		"\4\uffff}>";
	static final String[] DFA447_transitionS = {
			"\1\1\47\uffff\1\3\13\uffff\1\2\12\uffff\1\1\105\uffff\1\1",
			"\1\1\47\uffff\1\3\13\uffff\1\2\12\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA447_eot = DFA.unpackEncodedString(DFA447_eotS);
	static final short[] DFA447_eof = DFA.unpackEncodedString(DFA447_eofS);
	static final char[] DFA447_min = DFA.unpackEncodedStringToUnsignedChars(DFA447_minS);
	static final char[] DFA447_max = DFA.unpackEncodedStringToUnsignedChars(DFA447_maxS);
	static final short[] DFA447_accept = DFA.unpackEncodedString(DFA447_acceptS);
	static final short[] DFA447_special = DFA.unpackEncodedString(DFA447_specialS);
	static final short[][] DFA447_transition;

	static {
		int numStates = DFA447_transitionS.length;
		DFA447_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA447_transition[i] = DFA.unpackEncodedString(DFA447_transitionS[i]);
		}
	}

	protected class DFA447 extends DFA {

		public DFA447(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 447;
			this.eot = DFA447_eot;
			this.eof = DFA447_eof;
			this.min = DFA447_min;
			this.max = DFA447_max;
			this.accept = DFA447_accept;
			this.special = DFA447_special;
			this.transition = DFA447_transition;
		}
		@Override
		public String getDescription() {
			return "1350:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA462_eotS =
		"\4\uffff";
	static final String DFA462_eofS =
		"\2\3\2\uffff";
	static final String DFA462_minS =
		"\2\6\2\uffff";
	static final String DFA462_maxS =
		"\2\u009a\2\uffff";
	static final String DFA462_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA462_specialS =
		"\4\uffff}>";
	static final String[] DFA462_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\6\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\6\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA462_eot = DFA.unpackEncodedString(DFA462_eotS);
	static final short[] DFA462_eof = DFA.unpackEncodedString(DFA462_eofS);
	static final char[] DFA462_min = DFA.unpackEncodedStringToUnsignedChars(DFA462_minS);
	static final char[] DFA462_max = DFA.unpackEncodedStringToUnsignedChars(DFA462_maxS);
	static final short[] DFA462_accept = DFA.unpackEncodedString(DFA462_acceptS);
	static final short[] DFA462_special = DFA.unpackEncodedString(DFA462_specialS);
	static final short[][] DFA462_transition;

	static {
		int numStates = DFA462_transitionS.length;
		DFA462_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA462_transition[i] = DFA.unpackEncodedString(DFA462_transitionS[i]);
		}
	}

	protected class DFA462 extends DFA {

		public DFA462(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 462;
			this.eot = DFA462_eot;
			this.eof = DFA462_eof;
			this.min = DFA462_min;
			this.max = DFA462_max;
			this.accept = DFA462_accept;
			this.special = DFA462_special;
			this.transition = DFA462_transition;
		}
		@Override
		public String getDescription() {
			return "1362:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA464_eotS =
		"\4\uffff";
	static final String DFA464_eofS =
		"\2\3\2\uffff";
	static final String DFA464_minS =
		"\2\6\2\uffff";
	static final String DFA464_maxS =
		"\2\u009a\2\uffff";
	static final String DFA464_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA464_specialS =
		"\4\uffff}>";
	static final String[] DFA464_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\1\3\1\2\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\1\3\1\2\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff\3\3\1\uffff"+
			"\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"",
			""
	};

	static final short[] DFA464_eot = DFA.unpackEncodedString(DFA464_eotS);
	static final short[] DFA464_eof = DFA.unpackEncodedString(DFA464_eofS);
	static final char[] DFA464_min = DFA.unpackEncodedStringToUnsignedChars(DFA464_minS);
	static final char[] DFA464_max = DFA.unpackEncodedStringToUnsignedChars(DFA464_maxS);
	static final short[] DFA464_accept = DFA.unpackEncodedString(DFA464_acceptS);
	static final short[] DFA464_special = DFA.unpackEncodedString(DFA464_specialS);
	static final short[][] DFA464_transition;

	static {
		int numStates = DFA464_transitionS.length;
		DFA464_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA464_transition[i] = DFA.unpackEncodedString(DFA464_transitionS[i]);
		}
	}

	protected class DFA464 extends DFA {

		public DFA464(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 464;
			this.eot = DFA464_eot;
			this.eof = DFA464_eof;
			this.min = DFA464_min;
			this.max = DFA464_max;
			this.accept = DFA464_accept;
			this.special = DFA464_special;
			this.transition = DFA464_transition;
		}
		@Override
		public String getDescription() {
			return "1362:102: ( ( ws )? cp_mixin_block )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA477_eotS =
		"\12\uffff";
	static final String DFA477_eofS =
		"\12\uffff";
	static final String DFA477_minS =
		"\4\5\1\uffff\1\5\1\uffff\1\5\1\64\1\5";
	static final String DFA477_maxS =
		"\1\u0099\3\u009a\1\uffff\1\u009a\1\uffff\1\u009a\1\u0081\1\u009a";
	static final String DFA477_acceptS =
		"\4\uffff\1\2\1\uffff\1\1\3\uffff";
	static final String DFA477_specialS =
		"\12\uffff}>";
	static final String[] DFA477_transitionS = {
			"\1\4\1\1\1\4\2\uffff\5\1\3\uffff\1\1\5\uffff\1\1\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\1\1\1\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\3"+
			"\1\4\1\1\6\uffff\2\4\3\1\1\4\1\uffff\2\4\3\uffff\1\4\1\uffff\1\1\1\4"+
			"\1\1\5\uffff\1\1\4\uffff\2\4\3\uffff\1\1\2\4\1\uffff\1\4\4\uffff\2\4"+
			"\3\1\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\3\1\1\uffff\3\1\1\uffff"+
			"\2\1\1\2\2\1\3\uffff\1\4\2\uffff\2\4\5\1\2\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\5\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\7\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\5\3\uffff\2\4\3\uffff\3\4"+
			"\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\5",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\7\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4\3\uffff\3\4"+
			"\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\7",
			"\3\4\2\uffff\5\4\3\uffff\4\4\2\uffff\4\4\3\uffff\1\4\1\10\1\uffff\1"+
			"\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\7\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\2\4\3\uffff\2\4\3\uffff\3\4\1\uffff"+
			"\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff"+
			"\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\2\4",
			"",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\5\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\7\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\5\3\uffff\2\4\3\uffff\3\4"+
			"\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\5",
			"",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\7\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4\3\uffff\3\4"+
			"\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\7",
			"\1\4\114\uffff\1\11",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\7\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4\3\uffff\3\4"+
			"\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\7"
	};

	static final short[] DFA477_eot = DFA.unpackEncodedString(DFA477_eotS);
	static final short[] DFA477_eof = DFA.unpackEncodedString(DFA477_eofS);
	static final char[] DFA477_min = DFA.unpackEncodedStringToUnsignedChars(DFA477_minS);
	static final char[] DFA477_max = DFA.unpackEncodedStringToUnsignedChars(DFA477_maxS);
	static final short[] DFA477_accept = DFA.unpackEncodedString(DFA477_acceptS);
	static final short[] DFA477_special = DFA.unpackEncodedString(DFA477_specialS);
	static final short[][] DFA477_transition;

	static {
		int numStates = DFA477_transitionS.length;
		DFA477_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA477_transition[i] = DFA.unpackEncodedString(DFA477_transitionS[i]);
		}
	}

	protected class DFA477 extends DFA {

		public DFA477(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 477;
			this.eot = DFA477_eot;
			this.eof = DFA477_eof;
			this.min = DFA477_min;
			this.max = DFA477_max;
			this.accept = DFA477_accept;
			this.special = DFA477_special;
			this.transition = DFA477_transition;
		}
		@Override
		public String getDescription() {
			return "1388:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA480_eotS =
		"\5\uffff";
	static final String DFA480_eofS =
		"\5\uffff";
	static final String DFA480_minS =
		"\1\24\1\6\1\uffff\1\6\1\uffff";
	static final String DFA480_maxS =
		"\1\u0084\1\u009a\1\uffff\1\u009a\1\uffff";
	static final String DFA480_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA480_specialS =
		"\5\uffff}>";
	static final String[] DFA480_transitionS = {
			"\1\1\4\uffff\1\2\55\uffff\1\2\43\uffff\1\2\30\uffff\1\1",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\2\uffff\1\4\1\2\16\uffff\1"+
			"\4\13\uffff\1\4\1\uffff\1\4\10\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff"+
			"\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\10\uffff\5\4\10"+
			"\uffff\1\4\1\3",
			"",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\2\uffff\1\4\1\2\16\uffff\1"+
			"\4\13\uffff\1\4\1\uffff\1\4\10\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff"+
			"\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\10\uffff\5\4\10"+
			"\uffff\1\4\1\3",
			""
	};

	static final short[] DFA480_eot = DFA.unpackEncodedString(DFA480_eotS);
	static final short[] DFA480_eof = DFA.unpackEncodedString(DFA480_eofS);
	static final char[] DFA480_min = DFA.unpackEncodedStringToUnsignedChars(DFA480_minS);
	static final char[] DFA480_max = DFA.unpackEncodedStringToUnsignedChars(DFA480_maxS);
	static final short[] DFA480_accept = DFA.unpackEncodedString(DFA480_acceptS);
	static final short[] DFA480_special = DFA.unpackEncodedString(DFA480_specialS);
	static final short[][] DFA480_transition;

	static {
		int numStates = DFA480_transitionS.length;
		DFA480_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA480_transition[i] = DFA.unpackEncodedString(DFA480_transitionS[i]);
		}
	}

	protected class DFA480 extends DFA {

		public DFA480(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 480;
			this.eot = DFA480_eot;
			this.eof = DFA480_eof;
			this.min = DFA480_min;
			this.max = DFA480_max;
			this.accept = DFA480_accept;
			this.special = DFA480_special;
			this.transition = DFA480_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1403:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA496_eotS =
		"\4\uffff";
	static final String DFA496_eofS =
		"\4\uffff";
	static final String DFA496_minS =
		"\2\24\2\uffff";
	static final String DFA496_maxS =
		"\2\u009a\2\uffff";
	static final String DFA496_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA496_specialS =
		"\4\uffff}>";
	static final String[] DFA496_transitionS = {
			"\1\3\1\1\36\uffff\1\3\10\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\1\1\36\uffff\1\3\10\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA496_eot = DFA.unpackEncodedString(DFA496_eotS);
	static final short[] DFA496_eof = DFA.unpackEncodedString(DFA496_eofS);
	static final char[] DFA496_min = DFA.unpackEncodedStringToUnsignedChars(DFA496_minS);
	static final char[] DFA496_max = DFA.unpackEncodedStringToUnsignedChars(DFA496_maxS);
	static final short[] DFA496_accept = DFA.unpackEncodedString(DFA496_acceptS);
	static final short[] DFA496_special = DFA.unpackEncodedString(DFA496_specialS);
	static final short[][] DFA496_transition;

	static {
		int numStates = DFA496_transitionS.length;
		DFA496_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA496_transition[i] = DFA.unpackEncodedString(DFA496_transitionS[i]);
		}
	}

	protected class DFA496 extends DFA {

		public DFA496(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 496;
			this.eot = DFA496_eot;
			this.eof = DFA496_eof;
			this.min = DFA496_min;
			this.max = DFA496_max;
			this.accept = DFA496_accept;
			this.special = DFA496_special;
			this.transition = DFA496_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1419:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA525_eotS =
		"\4\uffff";
	static final String DFA525_eofS =
		"\4\uffff";
	static final String DFA525_minS =
		"\1\24\1\6\2\uffff";
	static final String DFA525_maxS =
		"\2\u009a\2\uffff";
	static final String DFA525_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA525_specialS =
		"\4\uffff}>";
	static final String[] DFA525_transitionS = {
			"\1\3\1\1\76\uffff\1\1\17\uffff\1\2\6\uffff\1\2\30\uffff\1\2\25\uffff"+
			"\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff"+
			"\12\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff"+
			"\1\2\1\1",
			"",
			""
	};

	static final short[] DFA525_eot = DFA.unpackEncodedString(DFA525_eotS);
	static final short[] DFA525_eof = DFA.unpackEncodedString(DFA525_eofS);
	static final char[] DFA525_min = DFA.unpackEncodedStringToUnsignedChars(DFA525_minS);
	static final char[] DFA525_max = DFA.unpackEncodedStringToUnsignedChars(DFA525_maxS);
	static final short[] DFA525_accept = DFA.unpackEncodedString(DFA525_acceptS);
	static final short[] DFA525_special = DFA.unpackEncodedString(DFA525_specialS);
	static final short[][] DFA525_transition;

	static {
		int numStates = DFA525_transitionS.length;
		DFA525_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA525_transition[i] = DFA.unpackEncodedString(DFA525_transitionS[i]);
		}
	}

	protected class DFA525 extends DFA {

		public DFA525(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 525;
			this.eot = DFA525_eot;
			this.eof = DFA525_eof;
			this.min = DFA525_min;
			this.max = DFA525_max;
			this.accept = DFA525_accept;
			this.special = DFA525_special;
			this.transition = DFA525_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1495:43: ( ( ws )? COMMA ( ws )? simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA526_eotS =
		"\4\uffff";
	static final String DFA526_eofS =
		"\4\uffff";
	static final String DFA526_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA526_maxS =
		"\2\u009a\2\uffff";
	static final String DFA526_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA526_specialS =
		"\4\uffff}>";
	static final String[] DFA526_transitionS = {
			"\1\1\76\uffff\1\1\17\uffff\1\2\6\uffff\1\2\30\uffff\1\2\25\uffff\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff"+
			"\6\2\1\uffff\3\2\1\3\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA526_eot = DFA.unpackEncodedString(DFA526_eotS);
	static final short[] DFA526_eof = DFA.unpackEncodedString(DFA526_eofS);
	static final char[] DFA526_min = DFA.unpackEncodedStringToUnsignedChars(DFA526_minS);
	static final char[] DFA526_max = DFA.unpackEncodedStringToUnsignedChars(DFA526_maxS);
	static final short[] DFA526_accept = DFA.unpackEncodedString(DFA526_acceptS);
	static final short[] DFA526_special = DFA.unpackEncodedString(DFA526_specialS);
	static final short[][] DFA526_transition;

	static {
		int numStates = DFA526_transitionS.length;
		DFA526_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA526_transition[i] = DFA.unpackEncodedString(DFA526_transitionS[i]);
		}
	}

	protected class DFA526 extends DFA {

		public DFA526(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 526;
			this.eot = DFA526_eot;
			this.eof = DFA526_eof;
			this.min = DFA526_min;
			this.max = DFA526_max;
			this.accept = DFA526_accept;
			this.special = DFA526_special;
			this.transition = DFA526_transition;
		}
		@Override
		public String getDescription() {
			return "1495:83: ( ws SASS_OPTIONAL )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA532_eotS =
		"\10\uffff";
	static final String DFA532_eofS =
		"\2\4\6\uffff";
	static final String DFA532_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA532_maxS =
		"\3\u009a\2\uffff\3\u009a";
	static final String DFA532_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA532_specialS =
		"\10\uffff}>";
	static final String[] DFA532_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4"+
			"\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff\1\4\1\2\1\3"+
			"\1\uffff\5\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4"+
			"\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff\1\4\1\5\1\3"+
			"\6\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\36\uffff\1\3\10\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"",
			"",
			"\1\4\1\uffff\1\7\36\uffff\1\3\10\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7",
			"\1\4\1\uffff\1\6\36\uffff\1\3\10\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"\1\4\1\uffff\1\7\36\uffff\1\3\10\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7"
	};

	static final short[] DFA532_eot = DFA.unpackEncodedString(DFA532_eotS);
	static final short[] DFA532_eof = DFA.unpackEncodedString(DFA532_eofS);
	static final char[] DFA532_min = DFA.unpackEncodedStringToUnsignedChars(DFA532_minS);
	static final char[] DFA532_max = DFA.unpackEncodedStringToUnsignedChars(DFA532_maxS);
	static final short[] DFA532_accept = DFA.unpackEncodedString(DFA532_acceptS);
	static final short[] DFA532_special = DFA.unpackEncodedString(DFA532_specialS);
	static final short[][] DFA532_transition;

	static {
		int numStates = DFA532_transitionS.length;
		DFA532_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA532_transition[i] = DFA.unpackEncodedString(DFA532_transitionS[i]);
		}
	}

	protected class DFA532 extends DFA {

		public DFA532(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 532;
			this.eot = DFA532_eot;
			this.eof = DFA532_eof;
			this.min = DFA532_min;
			this.max = DFA532_max;
			this.accept = DFA532_accept;
			this.special = DFA532_special;
			this.transition = DFA532_transition;
		}
		@Override
		public String getDescription() {
			return "1520:64: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA540_eotS =
		"\5\uffff";
	static final String DFA540_eofS =
		"\5\uffff";
	static final String DFA540_minS =
		"\1\162\1\25\1\uffff\1\25\1\uffff";
	static final String DFA540_maxS =
		"\1\163\1\u009a\1\uffff\1\u009a\1\uffff";
	static final String DFA540_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA540_specialS =
		"\5\uffff}>";
	static final String[] DFA540_transitionS = {
			"\1\1\1\2",
			"\1\3\36\uffff\1\2\10\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\3\36\uffff\1\2\10\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			""
	};

	static final short[] DFA540_eot = DFA.unpackEncodedString(DFA540_eotS);
	static final short[] DFA540_eof = DFA.unpackEncodedString(DFA540_eofS);
	static final char[] DFA540_min = DFA.unpackEncodedStringToUnsignedChars(DFA540_minS);
	static final char[] DFA540_max = DFA.unpackEncodedStringToUnsignedChars(DFA540_maxS);
	static final short[] DFA540_accept = DFA.unpackEncodedString(DFA540_acceptS);
	static final short[] DFA540_special = DFA.unpackEncodedString(DFA540_specialS);
	static final short[][] DFA540_transition;

	static {
		int numStates = DFA540_transitionS.length;
		DFA540_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA540_transition[i] = DFA.unpackEncodedString(DFA540_transitionS[i]);
		}
	}

	protected class DFA540 extends DFA {

		public DFA540(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 540;
			this.eot = DFA540_eot;
			this.eof = DFA540_eof;
			this.min = DFA540_min;
			this.max = DFA540_max;
			this.accept = DFA540_accept;
			this.special = DFA540_special;
			this.transition = DFA540_transition;
		}
		@Override
		public String getDescription() {
			return "1523:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA539_eotS =
		"\10\uffff";
	static final String DFA539_eofS =
		"\2\4\6\uffff";
	static final String DFA539_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA539_maxS =
		"\3\u009a\2\uffff\3\u009a";
	static final String DFA539_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA539_specialS =
		"\10\uffff}>";
	static final String[] DFA539_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4"+
			"\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff\1\4\1\2\1\3"+
			"\1\uffff\5\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\5\uffff"+
			"\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4"+
			"\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff\1\4\1\5\1\3"+
			"\6\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\36\uffff\1\3\10\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"",
			"",
			"\1\4\1\uffff\1\7\36\uffff\1\3\10\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7",
			"\1\4\1\uffff\1\6\36\uffff\1\3\10\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"\1\4\1\uffff\1\7\36\uffff\1\3\10\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7"
	};

	static final short[] DFA539_eot = DFA.unpackEncodedString(DFA539_eotS);
	static final short[] DFA539_eof = DFA.unpackEncodedString(DFA539_eofS);
	static final char[] DFA539_min = DFA.unpackEncodedStringToUnsignedChars(DFA539_minS);
	static final char[] DFA539_max = DFA.unpackEncodedStringToUnsignedChars(DFA539_maxS);
	static final short[] DFA539_accept = DFA.unpackEncodedString(DFA539_acceptS);
	static final short[] DFA539_special = DFA.unpackEncodedString(DFA539_specialS);
	static final short[][] DFA539_transition;

	static {
		int numStates = DFA539_transitionS.length;
		DFA539_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA539_transition[i] = DFA.unpackEncodedString(DFA539_transitionS[i]);
		}
	}

	protected class DFA539 extends DFA {

		public DFA539(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 539;
			this.eot = DFA539_eot;
			this.eof = DFA539_eof;
			this.min = DFA539_min;
			this.max = DFA539_max;
			this.accept = DFA539_accept;
			this.special = DFA539_special;
			this.transition = DFA539_transition;
		}
		@Override
		public String getDescription() {
			return "1527:128: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA543_eotS =
		"\4\uffff";
	static final String DFA543_eofS =
		"\4\uffff";
	static final String DFA543_minS =
		"\2\5\2\uffff";
	static final String DFA543_maxS =
		"\2\u009a\2\uffff";
	static final String DFA543_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA543_specialS =
		"\4\uffff}>";
	static final String[] DFA543_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\3\3\6\uffff\6\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\1"+
			"\3\uffff\2\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\3\uffff\1\3\2\uffff"+
			"\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\3\3\6\uffff\6\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\1"+
			"\3\uffff\2\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\3\uffff\1\3\2\uffff"+
			"\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA543_eot = DFA.unpackEncodedString(DFA543_eotS);
	static final short[] DFA543_eof = DFA.unpackEncodedString(DFA543_eofS);
	static final char[] DFA543_min = DFA.unpackEncodedStringToUnsignedChars(DFA543_minS);
	static final char[] DFA543_max = DFA.unpackEncodedStringToUnsignedChars(DFA543_maxS);
	static final short[] DFA543_accept = DFA.unpackEncodedString(DFA543_acceptS);
	static final short[] DFA543_special = DFA.unpackEncodedString(DFA543_specialS);
	static final short[][] DFA543_transition;

	static {
		int numStates = DFA543_transitionS.length;
		DFA543_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA543_transition[i] = DFA.unpackEncodedString(DFA543_transitionS[i]);
		}
	}

	protected class DFA543 extends DFA {

		public DFA543(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 543;
			this.eot = DFA543_eot;
			this.eof = DFA543_eof;
			this.min = DFA543_min;
			this.max = DFA543_max;
			this.accept = DFA543_accept;
			this.special = DFA543_special;
			this.transition = DFA543_transition;
		}
		@Override
		public String getDescription() {
			return "1542:102: ( ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA548_eotS =
		"\4\uffff";
	static final String DFA548_eofS =
		"\4\uffff";
	static final String DFA548_minS =
		"\2\24\2\uffff";
	static final String DFA548_maxS =
		"\2\u009a\2\uffff";
	static final String DFA548_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA548_specialS =
		"\1\0\1\1\2\uffff}>";
	static final String[] DFA548_transitionS = {
			"\1\2\1\1\76\uffff\1\1\105\uffff\1\1",
			"\1\2\1\1\36\uffff\1\3\37\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA548_eot = DFA.unpackEncodedString(DFA548_eotS);
	static final short[] DFA548_eof = DFA.unpackEncodedString(DFA548_eofS);
	static final char[] DFA548_min = DFA.unpackEncodedStringToUnsignedChars(DFA548_minS);
	static final char[] DFA548_max = DFA.unpackEncodedStringToUnsignedChars(DFA548_maxS);
	static final short[] DFA548_accept = DFA.unpackEncodedString(DFA548_acceptS);
	static final short[] DFA548_special = DFA.unpackEncodedString(DFA548_specialS);
	static final short[][] DFA548_transition;

	static {
		int numStates = DFA548_transitionS.length;
		DFA548_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA548_transition[i] = DFA.unpackEncodedString(DFA548_transitionS[i]);
		}
	}

	protected class DFA548 extends DFA {

		public DFA548(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 548;
			this.eot = DFA548_eot;
			this.eof = DFA548_eof;
			this.min = DFA548_min;
			this.max = DFA548_max;
			this.accept = DFA548_accept;
			this.special = DFA548_special;
			this.transition = DFA548_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1547:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA548_0 = input.LA(1);
						 
						int index548_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA548_0==COMMENT||LA548_0==NL||LA548_0==WS) ) {s = 1;}
						else if ( (LA548_0==COMMA) && (synpred65_Css3())) {s = 2;}
						 
						input.seek(index548_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA548_1 = input.LA(1);
						 
						int index548_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA548_1==IDENT) ) {s = 3;}
						else if ( (LA548_1==COMMENT||LA548_1==NL||LA548_1==WS) ) {s = 1;}
						else if ( (LA548_1==COMMA) && (synpred65_Css3())) {s = 2;}
						 
						input.seek(index548_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 548, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA568_eotS =
		"\4\uffff";
	static final String DFA568_eofS =
		"\4\uffff";
	static final String DFA568_minS =
		"\2\25\2\uffff";
	static final String DFA568_maxS =
		"\2\u009a\2\uffff";
	static final String DFA568_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA568_specialS =
		"\4\uffff}>";
	static final String[] DFA568_transitionS = {
			"\1\1\37\uffff\1\2\36\uffff\1\1\57\uffff\1\3\25\uffff\1\1",
			"\1\1\37\uffff\1\2\36\uffff\1\1\57\uffff\1\3\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA568_eot = DFA.unpackEncodedString(DFA568_eotS);
	static final short[] DFA568_eof = DFA.unpackEncodedString(DFA568_eofS);
	static final char[] DFA568_min = DFA.unpackEncodedStringToUnsignedChars(DFA568_minS);
	static final char[] DFA568_max = DFA.unpackEncodedStringToUnsignedChars(DFA568_maxS);
	static final short[] DFA568_accept = DFA.unpackEncodedString(DFA568_acceptS);
	static final short[] DFA568_special = DFA.unpackEncodedString(DFA568_specialS);
	static final short[][] DFA568_transition;

	static {
		int numStates = DFA568_transitionS.length;
		DFA568_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA568_transition[i] = DFA.unpackEncodedString(DFA568_transitionS[i]);
		}
	}

	protected class DFA568 extends DFA {

		public DFA568(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 568;
			this.eot = DFA568_eot;
			this.eof = DFA568_eof;
			this.min = DFA568_min;
			this.max = DFA568_max;
			this.accept = DFA568_accept;
			this.special = DFA568_special;
			this.transition = DFA568_transition;
		}
		@Override
		public String getDescription() {
			return "421:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA575_eotS =
		"\6\uffff";
	static final String DFA575_eofS =
		"\6\uffff";
	static final String DFA575_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA575_maxS =
		"\1\u008a\1\u009a\1\uffff\1\u009a\2\uffff";
	static final String DFA575_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA575_specialS =
		"\6\uffff}>";
	static final String[] DFA575_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\11"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\47\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\10\uffff\3\4\12\uffff\2\4\2\uffff\2\4"+
			"\3\uffff\1\4\10\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff"+
			"\1\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA575_eot = DFA.unpackEncodedString(DFA575_eotS);
	static final short[] DFA575_eof = DFA.unpackEncodedString(DFA575_eofS);
	static final char[] DFA575_min = DFA.unpackEncodedStringToUnsignedChars(DFA575_minS);
	static final char[] DFA575_max = DFA.unpackEncodedStringToUnsignedChars(DFA575_maxS);
	static final short[] DFA575_accept = DFA.unpackEncodedString(DFA575_acceptS);
	static final short[] DFA575_special = DFA.unpackEncodedString(DFA575_specialS);
	static final short[][] DFA575_transition;

	static {
		int numStates = DFA575_transitionS.length;
		DFA575_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA575_transition[i] = DFA.unpackEncodedString(DFA575_transitionS[i]);
		}
	}

	protected class DFA575 extends DFA {

		public DFA575(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 575;
			this.eot = DFA575_eot;
			this.eof = DFA575_eof;
			this.min = DFA575_min;
			this.max = DFA575_max;
			this.accept = DFA575_accept;
			this.special = DFA575_special;
			this.transition = DFA575_transition;
		}
		@Override
		public String getDescription() {
			return "423:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA570_eotS =
		"\4\uffff";
	static final String DFA570_eofS =
		"\4\uffff";
	static final String DFA570_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA570_maxS =
		"\2\u009a\2\uffff";
	static final String DFA570_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA570_specialS =
		"\4\uffff}>";
	static final String[] DFA570_transitionS = {
			"\1\1\47\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3"+
			"\3\uffff\1\3\10\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA570_eot = DFA.unpackEncodedString(DFA570_eotS);
	static final short[] DFA570_eof = DFA.unpackEncodedString(DFA570_eofS);
	static final char[] DFA570_min = DFA.unpackEncodedStringToUnsignedChars(DFA570_minS);
	static final char[] DFA570_max = DFA.unpackEncodedStringToUnsignedChars(DFA570_maxS);
	static final short[] DFA570_accept = DFA.unpackEncodedString(DFA570_acceptS);
	static final short[] DFA570_special = DFA.unpackEncodedString(DFA570_specialS);
	static final short[][] DFA570_transition;

	static {
		int numStates = DFA570_transitionS.length;
		DFA570_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA570_transition[i] = DFA.unpackEncodedString(DFA570_transitionS[i]);
		}
	}

	protected class DFA570 extends DFA {

		public DFA570(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 570;
			this.eot = DFA570_eot;
			this.eof = DFA570_eof;
			this.min = DFA570_min;
			this.max = DFA570_max;
			this.accept = DFA570_accept;
			this.special = DFA570_special;
			this.transition = DFA570_transition;
		}
		@Override
		public String getDescription() {
			return "423:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA612_eotS =
		"\6\uffff";
	static final String DFA612_eofS =
		"\6\uffff";
	static final String DFA612_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA612_maxS =
		"\1\u008a\1\u009a\1\uffff\1\u009a\2\uffff";
	static final String DFA612_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA612_specialS =
		"\6\uffff}>";
	static final String[] DFA612_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\11"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\47\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\10\uffff\3\4\12\uffff\2\4\2\uffff\2\4"+
			"\3\uffff\1\4\10\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff"+
			"\1\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA612_eot = DFA.unpackEncodedString(DFA612_eotS);
	static final short[] DFA612_eof = DFA.unpackEncodedString(DFA612_eofS);
	static final char[] DFA612_min = DFA.unpackEncodedStringToUnsignedChars(DFA612_minS);
	static final char[] DFA612_max = DFA.unpackEncodedStringToUnsignedChars(DFA612_maxS);
	static final short[] DFA612_accept = DFA.unpackEncodedString(DFA612_acceptS);
	static final short[] DFA612_special = DFA.unpackEncodedString(DFA612_specialS);
	static final short[][] DFA612_transition;

	static {
		int numStates = DFA612_transitionS.length;
		DFA612_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA612_transition[i] = DFA.unpackEncodedString(DFA612_transitionS[i]);
		}
	}

	protected class DFA612 extends DFA {

		public DFA612(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 612;
			this.eot = DFA612_eot;
			this.eof = DFA612_eof;
			this.min = DFA612_min;
			this.max = DFA612_max;
			this.accept = DFA612_accept;
			this.special = DFA612_special;
			this.transition = DFA612_transition;
		}
		@Override
		public String getDescription() {
			return "895:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA607_eotS =
		"\4\uffff";
	static final String DFA607_eofS =
		"\4\uffff";
	static final String DFA607_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA607_maxS =
		"\2\u009a\2\uffff";
	static final String DFA607_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA607_specialS =
		"\4\uffff}>";
	static final String[] DFA607_transitionS = {
			"\1\1\47\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3"+
			"\3\uffff\1\3\10\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA607_eot = DFA.unpackEncodedString(DFA607_eotS);
	static final short[] DFA607_eof = DFA.unpackEncodedString(DFA607_eofS);
	static final char[] DFA607_min = DFA.unpackEncodedStringToUnsignedChars(DFA607_minS);
	static final char[] DFA607_max = DFA.unpackEncodedStringToUnsignedChars(DFA607_maxS);
	static final short[] DFA607_accept = DFA.unpackEncodedString(DFA607_acceptS);
	static final short[] DFA607_special = DFA.unpackEncodedString(DFA607_specialS);
	static final short[][] DFA607_transition;

	static {
		int numStates = DFA607_transitionS.length;
		DFA607_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA607_transition[i] = DFA.unpackEncodedString(DFA607_transitionS[i]);
		}
	}

	protected class DFA607 extends DFA {

		public DFA607(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 607;
			this.eot = DFA607_eot;
			this.eof = DFA607_eof;
			this.min = DFA607_min;
			this.max = DFA607_max;
			this.accept = DFA607_accept;
			this.special = DFA607_special;
			this.transition = DFA607_transition;
		}
		@Override
		public String getDescription() {
			return "895:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA623_eotS =
		"\5\uffff";
	static final String DFA623_eofS =
		"\5\uffff";
	static final String DFA623_minS =
		"\2\5\3\uffff";
	static final String DFA623_maxS =
		"\2\u009a\3\uffff";
	static final String DFA623_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA623_specialS =
		"\5\uffff}>";
	static final String[] DFA623_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff\1\2\1\uffff"+
			"\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\2\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff\1\2\1\uffff"+
			"\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA623_eot = DFA.unpackEncodedString(DFA623_eotS);
	static final short[] DFA623_eof = DFA.unpackEncodedString(DFA623_eofS);
	static final char[] DFA623_min = DFA.unpackEncodedStringToUnsignedChars(DFA623_minS);
	static final char[] DFA623_max = DFA.unpackEncodedStringToUnsignedChars(DFA623_maxS);
	static final short[] DFA623_accept = DFA.unpackEncodedString(DFA623_acceptS);
	static final short[] DFA623_special = DFA.unpackEncodedString(DFA623_specialS);
	static final short[][] DFA623_transition;

	static {
		int numStates = DFA623_transitionS.length;
		DFA623_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA623_transition[i] = DFA.unpackEncodedString(DFA623_transitionS[i]);
		}
	}

	protected class DFA623 extends DFA {

		public DFA623(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 623;
			this.eot = DFA623_eot;
			this.eof = DFA623_eof;
			this.min = DFA623_min;
			this.max = DFA623_max;
			this.accept = DFA623_accept;
			this.special = DFA623_special;
			this.transition = DFA623_transition;
		}
		@Override
		public String getDescription() {
			return "1147:15: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA628_eotS =
		"\5\uffff";
	static final String DFA628_eofS =
		"\5\uffff";
	static final String DFA628_minS =
		"\2\5\3\uffff";
	static final String DFA628_maxS =
		"\2\u009a\3\uffff";
	static final String DFA628_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA628_specialS =
		"\5\uffff}>";
	static final String[] DFA628_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\2\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff\1\2\1\uffff\1\3\2\uffff"+
			"\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\2\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff\1\2\1\uffff\1\4\2\uffff"+
			"\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA628_eot = DFA.unpackEncodedString(DFA628_eotS);
	static final short[] DFA628_eof = DFA.unpackEncodedString(DFA628_eofS);
	static final char[] DFA628_min = DFA.unpackEncodedStringToUnsignedChars(DFA628_minS);
	static final char[] DFA628_max = DFA.unpackEncodedStringToUnsignedChars(DFA628_maxS);
	static final short[] DFA628_accept = DFA.unpackEncodedString(DFA628_acceptS);
	static final short[] DFA628_special = DFA.unpackEncodedString(DFA628_specialS);
	static final short[][] DFA628_transition;

	static {
		int numStates = DFA628_transitionS.length;
		DFA628_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA628_transition[i] = DFA.unpackEncodedString(DFA628_transitionS[i]);
		}
	}

	protected class DFA628 extends DFA {

		public DFA628(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 628;
			this.eot = DFA628_eot;
			this.eof = DFA628_eof;
			this.min = DFA628_min;
			this.max = DFA628_max;
			this.accept = DFA628_accept;
			this.special = DFA628_special;
			this.transition = DFA628_transition;
		}
		@Override
		public String getDescription() {
			return "1233:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	public static final BitSet FOLLOW_ws_in_styleSheet102 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBE6E70320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_charSet_in_styleSheet112 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBE6E70320183813L,0x000000000601F55FL});
	public static final BitSet FOLLOW_ws_in_styleSheet114 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBE6E70320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_layerStatement_in_styleSheet130 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBE6E70320183813L,0x000000000601F55FL});
	public static final BitSet FOLLOW_ws_in_styleSheet132 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBE6E70320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_imports_in_styleSheet146 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBE6E70320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_namespaces_in_styleSheet157 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBE6E70320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_body_in_styleSheet168 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_styleSheet176 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_in_namespaces193 = new BitSet(new long[]{0x0000000000200002L,0x0000000000180000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_namespaces195 = new BitSet(new long[]{0x0000000000000002L,0x0000000000080000L});
	public static final BitSet FOLLOW_NAMESPACE_SYM_in_namespace211 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004100080L});
	public static final BitSet FOLLOW_ws_in_namespace213 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000100080L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespace217 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004100080L});
	public static final BitSet FOLLOW_ws_in_namespace219 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100080L});
	public static final BitSet FOLLOW_resourceIdentifier_in_namespace224 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_namespace226 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_namespace229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_namespacePrefixName242 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHARSET_SYM_in_charSet276 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000080L});
	public static final BitSet FOLLOW_ws_in_charSet278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_charSetValue_in_charSet281 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_charSet283 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_charSet286 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_charSetValue300 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_imports328 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_imports330 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_imports333 = new BitSet(new long[]{0x0040000000200002L,0x0100000000100000L,0x0000000004000001L});
	public static final BitSet FOLLOW_ws_in_imports335 = new BitSet(new long[]{0x0040000000000002L,0x0100000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_sass_use_in_imports370 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_imports372 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_imports375 = new BitSet(new long[]{0x0040000000200002L,0x0100000000100000L,0x0000000004000001L});
	public static final BitSet FOLLOW_ws_in_imports377 = new BitSet(new long[]{0x0040000000000002L,0x0100000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_sass_forward_in_imports412 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_imports414 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_imports417 = new BitSet(new long[]{0x0040000000200002L,0x0100000000100000L,0x0000000004000001L});
	public static final BitSet FOLLOW_ws_in_imports419 = new BitSet(new long[]{0x0040000000000002L,0x0100000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem455 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004100080L});
	public static final BitSet FOLLOW_ws_in_importItem457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100080L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem460 = new BitSet(new long[]{0x8051090001247C42L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_importItem462 = new BitSet(new long[]{0x8051090001247C42L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_importLayer_in_importItem465 = new BitSet(new long[]{0x8051090001247C42L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_importItem476 = new BitSet(new long[]{0x8051090001047C40L,0xBBA6E70021082A03L,0x000000000201F00FL});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem479 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem512 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004100080L});
	public static final BitSet FOLLOW_ws_in_importItem514 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100080L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem517 = new BitSet(new long[]{0x8051090001347C42L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_importItem520 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_importItem523 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004100080L});
	public static final BitSet FOLLOW_ws_in_importItem525 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100080L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem528 = new BitSet(new long[]{0x8051090001347C42L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_importItem532 = new BitSet(new long[]{0x8051090001247C42L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_importLayer_in_importItem535 = new BitSet(new long[]{0x8051090001247C42L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_importItem546 = new BitSet(new long[]{0x8051090001047C40L,0xBBA6E70021082A03L,0x000000000201F00FL});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem549 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem573 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004100080L});
	public static final BitSet FOLLOW_ws_in_importItem575 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L,0x0000000000100080L});
	public static final BitSet FOLLOW_LPAREN_in_importItem579 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_less_import_types_in_importItem581 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importItem583 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004100080L});
	public static final BitSet FOLLOW_ws_in_importItem585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100080L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem590 = new BitSet(new long[]{0x8051090001247C42L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_importItem592 = new BitSet(new long[]{0x8051090001247C42L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_importLayer_in_importItem595 = new BitSet(new long[]{0x8051090001247C42L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_importItem606 = new BitSet(new long[]{0x8051090001047C40L,0xBBA6E70021082A03L,0x000000000201F00FL});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem609 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_importLayer634 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_importLayer637 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_importLayer639 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_layerName_in_importLayer642 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_importLayer644 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importLayer647 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_USE_in_sass_use674 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_use676 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100080L});
	public static final BitSet FOLLOW_resourceIdentifier_in_sass_use678 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_use681 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_use_as_in_sass_use683 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_use688 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_use_with_in_sass_use690 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_as715 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_as717 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_as719 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_with742 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_sass_use_with747 = new BitSet(new long[]{0x8050010001247C40L,0xBBA6E70020182803L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_sass_use_with749 = new BitSet(new long[]{0x8050010001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_sass_use_with_declaration_in_sass_use_with752 = new BitSet(new long[]{0x0000000000300000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with756 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_use_with759 = new BitSet(new long[]{0x8050010001247C40L,0xBBA6E70020182803L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_sass_use_with761 = new BitSet(new long[]{0x8050010001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_sass_use_with_declaration_in_sass_use_with764 = new BitSet(new long[]{0x0000000000300000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with769 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_use_with772 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_use_with_declaration793 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with_declaration795 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_use_with_declaration798 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sass_use_with_declaration800 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_use_with_declaration803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FORWARD_in_sass_forward829 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward831 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100080L});
	public static final BitSet FOLLOW_resourceIdentifier_in_sass_forward833 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward837 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_forward_hide_in_sass_forward841 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_sass_forward_show_in_sass_forward846 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward854 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_forward_as_in_sass_forward856 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward863 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_forward_with_in_sass_forward865 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_as890 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_as892 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_as894 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_with917 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with919 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_sass_forward_with922 = new BitSet(new long[]{0x8050010001247C40L,0xBBA6E70020182803L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_sass_forward_with924 = new BitSet(new long[]{0x8050010001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_sass_forward_with_declaration_in_sass_forward_with927 = new BitSet(new long[]{0x0000000000300000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with931 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_with934 = new BitSet(new long[]{0x8050010001247C40L,0xBBA6E70020182803L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_sass_forward_with936 = new BitSet(new long[]{0x8050010001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_sass_forward_with_declaration_in_sass_forward_with939 = new BitSet(new long[]{0x0000000000300000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with944 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_forward_with947 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_forward_with_declaration968 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with_declaration970 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_forward_with_declaration973 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sass_forward_with_declaration975 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_forward_with_declaration978 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide1001 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide1003 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide1005 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide1008 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_hide1011 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide1013 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide1016 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show1041 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show1043 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show1045 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show1048 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_show1051 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show1053 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show1056 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_MEDIA_SYM_in_media1075 = new BitSet(new long[]{0x8051090001247C40L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_media1077 = new BitSet(new long[]{0x8051090001047C40L,0xBBA6E70021082A03L,0x000000000201F00FL});
	public static final BitSet FOLLOW_mediaQueryList_in_media1095 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_media1103 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_media1110 = new BitSet(new long[]{0xC0519901C12C7CC0L,0xBBE6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_media1112 = new BitSet(new long[]{0xC0519901C10C7CC0L,0xBBE6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_syncToFollow_in_media1115 = new BitSet(new long[]{0xC0519901C10C7CC0L,0xBBE6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_mediaBody_in_media1125 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_media1132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaBodyItem_in_mediaBody1166 = new BitSet(new long[]{0xC0519901C12C7CC2L,0xBBE6E70320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_mediaBody1176 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1179 = new BitSet(new long[]{0xC0519901C12C7CC2L,0xBBE6E70320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_mediaBody1183 = new BitSet(new long[]{0xC0519901C10C7CC2L,0xBBE6E70320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1210 = new BitSet(new long[]{0xC0519901C12C7CC2L,0xBBE6E70320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_mediaBody1212 = new BitSet(new long[]{0xC0519901C10C7CC2L,0xBBE6E70320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_sass_extend_in_mediaBody1231 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_mediaBody1234 = new BitSet(new long[]{0xC0519901C10C7CC2L,0xBBE6E70320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1239 = new BitSet(new long[]{0xC0519901C10C7CC2L,0xBBE6E70320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_mediaBodyItem1313 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem1346 = new BitSet(new long[]{0x0020000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem1349 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1352 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem1369 = new BitSet(new long[]{0x0020000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem1372 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem1440 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_mediaBodyItem1452 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_mediaBodyItem1462 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_mediaBodyItem1472 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_mediaBodyItem1482 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_mediaBodyItem1492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem1500 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_mediaBodyItem1508 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_mediaBodyItem1516 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_mediaBodyItem1524 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_mediaBodyItem1537 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsAtRule_in_mediaBodyItem1545 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList1559 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList1571 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_mediaQueryList1574 = new BitSet(new long[]{0x8051090001247C40L,0xBBA6E70021182A03L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_mediaQueryList1576 = new BitSet(new long[]{0x8051090001047C40L,0xBBA6E70021082A03L,0x000000000201F00FL});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList1579 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_mediaQueryOperator_in_mediaQuery1598 = new BitSet(new long[]{0x0011080000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1600 = new BitSet(new long[]{0x0011080000000000L});
	public static final BitSet FOLLOW_mediaType_in_mediaQuery1607 = new BitSet(new long[]{0x0010000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1618 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1621 = new BitSet(new long[]{0x0001000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1623 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1626 = new BitSet(new long[]{0x0010000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1637 = new BitSet(new long[]{0x0010000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1648 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1651 = new BitSet(new long[]{0x0001000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1653 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1656 = new BitSet(new long[]{0x0010000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_cp_variable_in_mediaQuery1669 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_only_in_mediaQueryOperator1681 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaQueryOperator1685 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaType1697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaType1701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaType1707 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_mediaExpression1732 = new BitSet(new long[]{0x8051090001247C40L,0xBBA6E70020182803L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_mediaExpression1734 = new BitSet(new long[]{0x8051090001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_mediaFeature_in_mediaExpression1737 = new BitSet(new long[]{0x0000000000280000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaExpression1739 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1742 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_mediaExpression1745 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaExpression1762 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1783 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_mediaFeatureValue1786 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1788 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_mediaFeatureValue1807 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_mediaFeatureValue1827 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaFeature1847 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaFeature1851 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_mediaFeature1859 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaFeature1863 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bodyItem_in_body1897 = new BitSet(new long[]{0xD0519901C16C7CC2L,0xBBE6E70320183813L,0x000000000601F55FL});
	public static final BitSet FOLLOW_ws_in_body1907 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_body1910 = new BitSet(new long[]{0xD0519901C16C7CC2L,0xBBE6E70320183813L,0x000000000601F55FL});
	public static final BitSet FOLLOW_ws_in_body1914 = new BitSet(new long[]{0xD0519901C14C7CC2L,0xBBE6E70320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_SEMI_in_body1941 = new BitSet(new long[]{0xD0519901C16C7CC2L,0xBBE6E70320183813L,0x000000000601F55FL});
	public static final BitSet FOLLOW_ws_in_body1943 = new BitSet(new long[]{0xD0519901C14C7CC2L,0xBBE6E70320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_bodyItem2023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem2056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem2075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_bodyItem2084 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_bodyItem2106 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_bodyItem2123 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_bodyItem2135 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_bodyItem2158 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_bodyItem2172 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_bodyItem2186 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_declaration_in_bodyItem2200 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SUPPORTS_SYM_in_supportsAtRule2220 = new BitSet(new long[]{0x0010000000200000L,0x0000000001100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2222 = new BitSet(new long[]{0x0010000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_supportsCondition_in_supportsAtRule2225 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2227 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_supportsAtRule2230 = new BitSet(new long[]{0xC0519901C12C7CC0L,0xBBE6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2232 = new BitSet(new long[]{0xC0519901C10C7CC0L,0xBBE6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_syncToFollow_in_supportsAtRule2235 = new BitSet(new long[]{0xC0519901C10C7CC0L,0xBBE6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_mediaBody_in_supportsAtRule2237 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_supportsAtRule2240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_supportsCondition2253 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsCondition2255 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsCondition2257 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsCondition2262 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsCondition2265 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_supportsWithOperator_in_supportsCondition2267 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsConjunction_in_supportsWithOperator2295 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsWithOperator2298 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_supportsConjunction_in_supportsWithOperator2300 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_supportsDisjunction_in_supportsWithOperator2314 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsWithOperator2317 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_supportsDisjunction_in_supportsWithOperator2319 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_key_and_in_supportsConjunction2347 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsConjunction2349 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsConjunction2351 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_supportsDisjunction2378 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsDisjunction2380 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsDisjunction2382 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_supportsInParens2409 = new BitSet(new long[]{0x0010000000200000L,0x0000000001100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsInParens2411 = new BitSet(new long[]{0x0010000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_supportsCondition_in_supportsInParens2414 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsInParens2416 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_supportsInParens2419 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsFeature_in_supportsInParens2424 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_supportsInParens2436 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsDecl_in_supportsFeature2466 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_supportsDecl2478 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E70320183813L,0x000000000681F54FL});
	public static final BitSet FOLLOW_ws_in_supportsDecl2480 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E70320083813L,0x000000000281F54FL});
	public static final BitSet FOLLOW_declaration_in_supportsDecl2483 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_supportsDecl2485 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_supportsDecl2488 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONTAINER_SYM_in_containerAtRule2522 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2524 = new BitSet(new long[]{0x0010000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_containerCondition_in_containerAtRule2526 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2528 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_containerAtRule2531 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBE6E71320183813L,0x000000000601F55FL});
	public static final BitSet FOLLOW_ws_in_containerAtRule2533 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBE6E71320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_syncToFollow_in_containerAtRule2536 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBE6E71320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_body_in_containerAtRule2538 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_containerAtRule2541 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONTAINER_SYM_in_containerAtRule2546 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2548 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerName_in_containerAtRule2550 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2552 = new BitSet(new long[]{0x0010000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_containerCondition_in_containerAtRule2554 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2556 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_containerAtRule2559 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBE6E71320183813L,0x000000000601F55FL});
	public static final BitSet FOLLOW_ws_in_containerAtRule2561 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBE6E71320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_syncToFollow_in_containerAtRule2564 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBE6E71320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_body_in_containerAtRule2566 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_containerAtRule2569 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_containerCondition2595 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerCondition2597 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerCondition2599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerCondition2611 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerCondition2614 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerQueryWithOperator_in_containerCondition2616 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_containerQueryConjunction_in_containerQueryWithOperator2651 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryWithOperator2654 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerQueryConjunction_in_containerQueryWithOperator2656 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator2670 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryWithOperator2673 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator2675 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_key_and_in_containerQueryConjunction2703 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryConjunction2705 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerQueryConjunction2707 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_containerQueryDisjunction2734 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryDisjunction2736 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerQueryDisjunction2738 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_containerQueryInParens2765 = new BitSet(new long[]{0x0010000000200000L,0x0000000001100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens2767 = new BitSet(new long[]{0x0010000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_containerCondition_in_containerQueryInParens2770 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens2772 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_containerQueryInParens2775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeature_in_containerQueryInParens2780 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_containerQueryInParens2787 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens2789 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_containerQueryInParens2792 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E70321183A13L,0x000000000681F54FL});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens2794 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E70321083A13L,0x000000000281F54FL});
	public static final BitSet FOLLOW_styleQuery_in_containerQueryInParens2797 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens2799 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_containerQueryInParens2802 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_containerQueryInParens2814 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_containerName2850 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleCondition_in_styleQuery2874 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleFeature_in_styleQuery2886 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_styleCondition2910 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_styleCondition2912 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_styleInParens_in_styleCondition2914 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleInParens_in_styleCondition2926 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_styleCondition2929 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_styleConditionWithOperator_in_styleCondition2931 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleQueryConjunction_in_styleConditionWithOperator2965 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_styleConditionWithOperator2968 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_styleQueryConjunction_in_styleConditionWithOperator2970 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator2984 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_styleConditionWithOperator2987 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator2989 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_key_and_in_styleQueryConjunction3017 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_styleQueryConjunction3019 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_styleInParens_in_styleQueryConjunction3021 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_styleQueryDisjunction3048 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_styleQueryDisjunction3050 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_styleInParens_in_styleQueryDisjunction3052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_styleInParens3093 = new BitSet(new long[]{0x0010000000200000L,0x0000000001100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_styleInParens3095 = new BitSet(new long[]{0x0010000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_styleCondition_in_styleInParens3098 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_styleInParens3100 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_styleInParens3103 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_styleInParens3115 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E70320183813L,0x000000000681F54FL});
	public static final BitSet FOLLOW_ws_in_styleInParens3117 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E70320083813L,0x000000000281F54FL});
	public static final BitSet FOLLOW_styleFeature_in_styleInParens3120 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_styleInParens3122 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_styleInParens3125 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_styleInParens3137 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3195 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004800000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3197 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_sizeFeatureFixedValue_in_sizeFeature3200 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3202 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3205 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3217 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sizeFeature3219 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sizeFeatureRangeSingle_in_sizeFeature3222 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3224 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3227 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3239 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sizeFeature3241 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sizeFeatureRangeBetweenLt_in_sizeFeature3244 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3246 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3249 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3261 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sizeFeature3263 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sizeFeatureRangeBetweenGt_in_sizeFeature3266 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3268 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureFixedValue3304 = new BitSet(new long[]{0x0000000000280002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureFixedValue3308 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sizeFeatureFixedValue3311 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureFixedValue3313 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureFixedValue3316 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3352 = new BitSet(new long[]{0x0000300000200000L,0x0000000008100048L,0x0000000004000000L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3356 = new BitSet(new long[]{0x0000300000200000L,0x0000000008100048L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeSingle3359 = new BitSet(new long[]{0x0000300000000000L,0x0000000008000048L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeSingle3362 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeSingle3382 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3386 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3390 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3424 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100048L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3426 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000048L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenLt3429 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004800000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3437 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenLt3440 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100048L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3442 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000048L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenLt3445 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3453 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3456 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3489 = new BitSet(new long[]{0x0000300000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3491 = new BitSet(new long[]{0x0000300000000000L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenGt3494 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004800000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3502 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenGt3505 = new BitSet(new long[]{0x0000300000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3507 = new BitSet(new long[]{0x0000300000000000L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenGt3510 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3518 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3521 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_sizeFeatureValue3599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_declaration_in_styleFeature3632 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_layerBlock_in_layerAtRule3665 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_layerStatement_in_layerAtRule3685 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LAYER_SYM_in_layerBlock3719 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_layerBlock3721 = new BitSet(new long[]{0x2010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_layerName_in_layerBlock3723 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_layerBlock3726 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_layerBody_in_layerBlock3729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LAYER_SYM_in_layerStatement3764 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_layerStatement3766 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_layerName_in_layerStatement3768 = new BitSet(new long[]{0x0000000000300000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_layerStatement3772 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_layerStatement3775 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_layerStatement3777 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_layerName_in_layerStatement3780 = new BitSet(new long[]{0x0000000000300000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_SEMI_in_layerStatement3784 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_layerName3818 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_DOT_in_layerName3821 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_layerName3823 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_LBRACE_in_layerBody3858 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBE6E71320183813L,0x000000000601F55FL});
	public static final BitSet FOLLOW_ws_in_layerBody3860 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBE6E71320183813L,0x000000000601F55FL});
	public static final BitSet FOLLOW_body_in_layerBody3863 = new BitSet(new long[]{0x0000000000200000L,0x0000001000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_layerBody3866 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_layerBody3869 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_at_rule3894 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_at_rule3902 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_counterStyle_in_at_rule3910 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_at_rule3918 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsAtRule_in_at_rule3926 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_at_rule3934 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_layerAtRule_in_at_rule3942 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_containerAtRule_in_at_rule3950 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_moz_document_in_vendorAtRule3963 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframes_in_vendorAtRule3967 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_at_rule_in_vendorAtRule3971 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_atRuleId3981 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_atRuleId3985 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_atRuleId3993 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_atRuleId3997 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_IDENT_in_generic_at_rule4013 = new BitSet(new long[]{0xA051010001247C40L,0xBBA6E70020182803L,0x000000000601F08FL});
	public static final BitSet FOLLOW_ws_in_generic_at_rule4015 = new BitSet(new long[]{0xA051010001047C40L,0xBBA6E70020082803L,0x000000000201F08FL});
	public static final BitSet FOLLOW_atRuleId_in_generic_at_rule4020 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule4022 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_generic_at_rule4036 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_syncTo_RBRACE_in_generic_at_rule4047 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_generic_at_rule4057 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document4068 = new BitSet(new long[]{0x0000000000200000L,0x000000000011C000L,0x0000000004100000L});
	public static final BitSet FOLLOW_ws_in_moz_document4070 = new BitSet(new long[]{0x0000000000000000L,0x000000000001C000L,0x0000000000100000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document4075 = new BitSet(new long[]{0x2000000000300000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_moz_document4077 = new BitSet(new long[]{0x2000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_moz_document4083 = new BitSet(new long[]{0x0000000000200000L,0x000000000011C000L,0x0000000004100000L});
	public static final BitSet FOLLOW_ws_in_moz_document4085 = new BitSet(new long[]{0x0000000000000000L,0x000000000001C000L,0x0000000000100000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document4088 = new BitSet(new long[]{0x2000000000300000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_moz_document4090 = new BitSet(new long[]{0x2000000000100000L});
	public static final BitSet FOLLOW_LBRACE_in_moz_document4097 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBE6E71320183813L,0x000000000601F55FL});
	public static final BitSet FOLLOW_ws_in_moz_document4099 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBE6E71320083813L,0x000000000201F55FL});
	public static final BitSet FOLLOW_body_in_moz_document4104 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_moz_document4109 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes4146 = new BitSet(new long[]{0x8051010001247C40L,0xBBA6E70020182803L,0x000000000601F08FL});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4148 = new BitSet(new long[]{0x8051010001047C40L,0xBBA6E70020082803L,0x000000000201F08FL});
	public static final BitSet FOLLOW_atRuleId_in_webkitKeyframes4151 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4153 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframes4157 = new BitSet(new long[]{0x0010000000200000L,0x0000401040100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4159 = new BitSet(new long[]{0x0010000000000000L,0x0000401040000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_webkitKeyframes4166 = new BitSet(new long[]{0x0010000000200000L,0x0000401040100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4168 = new BitSet(new long[]{0x0010000000000000L,0x0000401040000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframes4175 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock4187 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock4189 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframesBlock4193 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock4196 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_syncToFollow_in_webkitKeyframesBlock4199 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declarations_in_webkitKeyframesBlock4203 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframesBlock4207 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_webkitKeyframesBlock4224 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_webkitKeyframesBlock4226 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4243 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4249 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4253 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors4259 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_webkitKeyframeSelectors4262 = new BitSet(new long[]{0x0010000000200000L,0x0000000040100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors4264 = new BitSet(new long[]{0x0010000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4271 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4277 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4281 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PAGE_SYM_in_page4305 = new BitSet(new long[]{0x2010000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_page4307 = new BitSet(new long[]{0x2010000000080000L});
	public static final BitSet FOLLOW_IDENT_in_page4312 = new BitSet(new long[]{0x2000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_page4314 = new BitSet(new long[]{0x2000000000080000L});
	public static final BitSet FOLLOW_pseudoPage_in_page4321 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_page4323 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_page4336 = new BitSet(new long[]{0x8051090001247CC0L,0xBBA6E71020183803L,0x000000000681F05FL});
	public static final BitSet FOLLOW_ws_in_page4378 = new BitSet(new long[]{0x8051090001047CC0L,0xBBA6E70020083803L,0x000000000281F05FL});
	public static final BitSet FOLLOW_SEMI_in_page4385 = new BitSet(new long[]{0x8051090001247CC0L,0xBBA6E70020183803L,0x000000000681F04FL});
	public static final BitSet FOLLOW_ws_in_page4387 = new BitSet(new long[]{0x8051090001047CC0L,0xBBA6E70020083803L,0x000000000281F04FL});
	public static final BitSet FOLLOW_SEMI_in_page4394 = new BitSet(new long[]{0x8051090001247CC0L,0xBBA6E70020183803L,0x000000000681F04FL});
	public static final BitSet FOLLOW_ws_in_page4396 = new BitSet(new long[]{0x8051090001047CC0L,0xBBA6E70020083803L,0x000000000281F04FL});
	public static final BitSet FOLLOW_propertyDeclaration_in_page4403 = new BitSet(new long[]{0x8051090001247CC0L,0xBBA6E71020183803L,0x000000000681F05FL});
	public static final BitSet FOLLOW_margin_in_page4406 = new BitSet(new long[]{0x8051090001247CC0L,0xBBA6E71020183803L,0x000000000681F05FL});
	public static final BitSet FOLLOW_SEMI_in_page4424 = new BitSet(new long[]{0x0000000000200000L,0x0000001000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_page4439 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_page4450 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COUNTER_STYLE_SYM_in_counterStyle4467 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_counterStyle4469 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_counterStyle4472 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_counterStyle4474 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_counterStyle4485 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_counterStyle4487 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_counterStyle4490 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declarations_in_counterStyle4494 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_counterStyle4505 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FONT_FACE_SYM_in_fontFace4522 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_fontFace4524 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_fontFace4535 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_fontFace4537 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_fontFace4540 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declarations_in_fontFace4544 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_fontFace4555 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_margin_sym_in_margin4569 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_margin4571 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_margin4574 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_margin4576 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_margin4579 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declarations_in_margin4581 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_margin4584 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_pseudoPage4793 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_pseudoPage4795 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_property4879 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_property4889 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARIABLE_in_property4897 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_property4905 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_property4913 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_property4923 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_name_in_sass_map4950 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map4952 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_map4954 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_sass_map4957 = new BitSet(new long[]{0x8051090001347CC0L,0xBBA6EF0022183803L,0x000000000681F08FL});
	public static final BitSet FOLLOW_ws_in_sass_map4959 = new BitSet(new long[]{0x8051090001147CC0L,0xBBA6EF0022083803L,0x000000000281F08FL});
	public static final BitSet FOLLOW_syncToFollow_in_sass_map4962 = new BitSet(new long[]{0x8051090001147CC0L,0xBBA6EF0022083803L,0x000000000281F08FL});
	public static final BitSet FOLLOW_sass_map_pairs_in_sass_map4981 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_map4988 = new BitSet(new long[]{0x0000000000200002L,0x0401000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_map4992 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_sass_map4995 = new BitSet(new long[]{0x0000000000200002L,0x0401000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_map5001 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_sass_map5004 = new BitSet(new long[]{0x0000000000200002L,0x0401000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_cp_variable_in_sass_map_name5028 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_pair_in_sass_map_pairs5062 = new BitSet(new long[]{0x8051090001347CC2L,0xBBA6E70022183803L,0x000000000681F08FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs5072 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs5075 = new BitSet(new long[]{0x8051090001347CC2L,0xBBA6E70022183803L,0x000000000681F08FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs5079 = new BitSet(new long[]{0x8051090001147CC2L,0xBBA6E70022083803L,0x000000000281F08FL});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs5106 = new BitSet(new long[]{0x8051090001347CC2L,0xBBA6E70022183803L,0x000000000681F08FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs5108 = new BitSet(new long[]{0x8051090001147CC2L,0xBBA6E70022083803L,0x000000000281F08FL});
	public static final BitSet FOLLOW_NUMBER_in_sass_map_pair5144 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair5147 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000080L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5150 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair5153 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000080L});
	public static final BitSet FOLLOW_function_in_sass_map_pair5163 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_property_in_sass_map_pair5166 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_sass_map_in_sass_map_pair5168 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5171 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map_pair5174 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5176 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_map_pair5179 = new BitSet(new long[]{0x0020000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5182 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_prio_in_sass_map_pair5185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule5227 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_rule5230 = new BitSet(new long[]{0x40119801C0080080L,0x0040000300001010L,0x0000000000000440L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule5232 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule5253 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_rule5255 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_rule5257 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_rule5259 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule5264 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_rule5268 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_rule5271 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_rule5273 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule5276 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_rule5278 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_rule5281 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule5299 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_rule5311 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_rule5318 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_rule5320 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_syncToFollow_in_rule5323 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declarations_in_rule5333 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_rule5340 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations5374 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E70320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_declarations5376 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E70320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declaration_in_declarations5382 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_declarations5387 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_declarations5391 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E70320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_declarations5393 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E70320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_ws_in_declarations5399 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E70320083813L,0x000000000281F54FL});
	public static final BitSet FOLLOW_declaration_in_declarations5402 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_declarations5408 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_declarations5412 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_declarations5414 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_ws_in_declarations5420 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations5432 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_declarations5434 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_declaration5463 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_declaration5476 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_declaration5488 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_declaration5551 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration5563 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration5602 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_declaration5614 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration5627 = new BitSet(new long[]{0x0020000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_declaration5630 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration5633 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration5650 = new BitSet(new long[]{0x0020000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_declaration5653 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration5656 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_declaration5672 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_declaration5682 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_in_declaration5692 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_declaration5702 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_declaration5712 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_return_in_declaration5722 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_error_in_declaration5732 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_declaration5742 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_declaration5750 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup5784 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup5787 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup5790 = new BitSet(new long[]{0x40119801C0280080L,0x0040000300101010L,0x0000000004000440L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup5792 = new BitSet(new long[]{0x40119801C0080080L,0x0040000300001010L,0x0000000000000440L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup5795 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup5802 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_combinator_in_selector5823 = new BitSet(new long[]{0x40118801C0280080L,0x0040000100101010L,0x0000000004000040L});
	public static final BitSet FOLLOW_ws_in_selector5825 = new BitSet(new long[]{0x40118801C0080080L,0x0040000100001010L,0x0000000000000040L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector5830 = new BitSet(new long[]{0x0000100000200002L,0x0000000200100000L,0x0000000004000400L});
	public static final BitSet FOLLOW_ws_in_selector5836 = new BitSet(new long[]{0x0000100000000000L,0x0000000200000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_combinator_in_selector5839 = new BitSet(new long[]{0x40118801C0280080L,0x0040000100101010L,0x0000000004000040L});
	public static final BitSet FOLLOW_ws_in_selector5841 = new BitSet(new long[]{0x40118801C0080080L,0x0040000100001010L,0x0000000000000040L});
	public static final BitSet FOLLOW_ws_in_selector5845 = new BitSet(new long[]{0x40118801C0080080L,0x0040000100001010L,0x0000000000000040L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector5848 = new BitSet(new long[]{0x0000100000200002L,0x0000000200100000L,0x0000000004000400L});
	public static final BitSet FOLLOW_combinator_in_selector5863 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence5915 = new BitSet(new long[]{0x40018001C0280002L,0x0040000000100010L,0x0000000004000000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence5921 = new BitSet(new long[]{0x40018001C0280002L,0x0040000000100010L,0x0000000004000000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence5935 = new BitSet(new long[]{0x40018001C0280002L,0x0040000000100010L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence5950 = new BitSet(new long[]{0x40018001C0080000L,0x0040000000000010L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence5953 = new BitSet(new long[]{0x40018001C0280002L,0x0040000000100010L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence5958 = new BitSet(new long[]{0x0011000000000080L,0x0000000000001000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence5963 = new BitSet(new long[]{0x40018001C0280002L,0x0040000000100010L,0x0000000004000000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence5969 = new BitSet(new long[]{0x40018001C0280002L,0x0040000000100010L,0x0000000004000000L});
	public static final BitSet FOLLOW_typeSelector_in_simpleSelectorSequence5983 = new BitSet(new long[]{0x40018001C0280002L,0x0040000000100010L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence5995 = new BitSet(new long[]{0x40018001C0080000L,0x0040000000000010L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence5998 = new BitSet(new long[]{0x40018001C0280002L,0x0040000000100010L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence6005 = new BitSet(new long[]{0x0011000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6007 = new BitSet(new long[]{0x40018001C0280002L,0x0040000000100010L,0x0000000004000000L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_esPred6032 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_esPred6036 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_esPred6040 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_esPred6044 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_esPred6048 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DCOLON_in_esPred6052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred6056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_esPred6062 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefix_in_typeSelector6104 = new BitSet(new long[]{0x0010080000000000L,0x0000000000000010L,0x0000000000000040L});
	public static final BitSet FOLLOW_elementName_in_typeSelector6108 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespacePrefix6123 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_STAR_in_namespacePrefix6127 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_PIPE_in_namespacePrefix6131 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_only_selector_in_elementSubsequent6163 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent6177 = new BitSet(new long[]{0x0011000000000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_IDENT_in_elementSubsequent6180 = new BitSet(new long[]{0x0011000000000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_NUMBER_in_elementSubsequent6184 = new BitSet(new long[]{0x0011000000000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_elementSubsequent6190 = new BitSet(new long[]{0x0011000000000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent6206 = new BitSet(new long[]{0x0010000000000080L,0x0000000000001000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_elementSubsequent6208 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssId_in_elementSubsequent6217 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssClass_in_elementSubsequent6226 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_slAttribute_in_elementSubsequent6238 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_elementSubsequent6250 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_cssId6274 = new BitSet(new long[]{0x0011000000000002L,0x0000000000001000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssId6279 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_cssId6301 = new BitSet(new long[]{0x0010000000000080L,0x0000000000041000L});
	public static final BitSet FOLLOW_NAME_in_cssId6317 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssId6337 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cssClass6389 = new BitSet(new long[]{0x0011080000000080L,0x0000000001001000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssClass6417 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssClass6435 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cssClass6451 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cssClass6467 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_cssClass6483 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_cssClass6507 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_slAttribute6563 = new BitSet(new long[]{0x0010000000200000L,0x0000000100100000L,0x0000000004000040L});
	public static final BitSet FOLLOW_namespacePrefix_in_slAttribute6570 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute6573 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_slAttributeName_in_slAttribute6584 = new BitSet(new long[]{0x0080000820A00200L,0x0000002008100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute6586 = new BitSet(new long[]{0x0080000820800200L,0x0000002008000000L});
	public static final BitSet FOLLOW_set_in_slAttribute6620 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000080L});
	public static final BitSet FOLLOW_ws_in_slAttribute6800 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_slAttributeValue_in_slAttribute6819 = new BitSet(new long[]{0x0000000000200000L,0x0000002000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute6837 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACKET_in_slAttribute6862 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_slAttributeName6878 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_pseudo6950 = new BitSet(new long[]{0x0011080000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_pseudo7013 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7070 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7073 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6EFC2E2183837L,0x000000000699FCCFL});
	public static final BitSet FOLLOW_ws_in_pseudo7075 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6EFC2E2083837L,0x000000000299FCCFL});
	public static final BitSet FOLLOW_expression_in_pseudo7081 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7083 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_STAR_in_pseudo7089 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7094 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_pseudo7157 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_pseudo7179 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7181 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7184 = new BitSet(new long[]{0x40119801C0280080L,0x0040080300101010L,0x0000000004000440L});
	public static final BitSet FOLLOW_ws_in_pseudo7186 = new BitSet(new long[]{0x40119801C0080080L,0x0040080300001010L,0x0000000000000440L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo7191 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7193 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7198 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo7224 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7226 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7229 = new BitSet(new long[]{0x40119801C0280080L,0x0040080300101010L,0x0000000004000440L});
	public static final BitSet FOLLOW_ws_in_pseudo7231 = new BitSet(new long[]{0x40119801C0080080L,0x0040080300001010L,0x0000000000000440L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo7236 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7238 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7243 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo7270 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7272 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7275 = new BitSet(new long[]{0x40119801C0280080L,0x0040080300101010L,0x0000000004000440L});
	public static final BitSet FOLLOW_ws_in_pseudo7277 = new BitSet(new long[]{0x40119801C0080080L,0x0040080300001010L,0x0000000000000440L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo7280 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7283 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration7325 = new BitSet(new long[]{0x8051090001047CC0L,0xBBA6E70020083803L,0x000000000281F00FL});
	public static final BitSet FOLLOW_property_in_propertyDeclaration7328 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7330 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration7333 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7335 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_propertyValue_in_propertyDeclaration7338 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration7349 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7351 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration7354 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFEFL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7356 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFEFL});
	public static final BitSet FOLLOW_componentValueOuter_in_propertyDeclaration7359 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration7368 = new BitSet(new long[]{0x8051090001047CC0L,0xBBA6E70020083803L,0x000000000281F00FL});
	public static final BitSet FOLLOW_property_in_propertyDeclaration7371 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7373 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration7376 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7378 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_propertyValue_in_propertyDeclaration7381 = new BitSet(new long[]{0x0020000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7384 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_prio_in_propertyDeclaration7387 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_propertyValue7427 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyValue_in_cp_propertyValue7435 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_propertyValue7457 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_expressionPredicate7526 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_braceBlock7613 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFFFL});
	public static final BitSet FOLLOW_componentValue_in_braceBlock7615 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFF7DFFFFFFFFFL,0x000000003FFFFFFFL});
	public static final BitSet FOLLOW_RBRACE_in_braceBlock7618 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_bracketBlock7625 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFFFL});
	public static final BitSet FOLLOW_componentValue_in_bracketBlock7627 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFF7EFFFFFFFFFL,0x000000003FFFFFFFL});
	public static final BitSet FOLLOW_RBRACKET_in_bracketBlock7630 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_parenBlock7637 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFFFL});
	public static final BitSet FOLLOW_componentValue_in_parenBlock7639 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFCFFFFFFFFFL,0x000000003FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_parenBlock7642 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_parenBlock_in_componentValue7649 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_braceBlock_in_componentValue7653 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bracketBlock_in_componentValue7657 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_componentValue7672 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_preservedToken_in_componentValue7676 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_parenBlock_in_componentValueOuter7684 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFEFL});
	public static final BitSet FOLLOW_braceBlock_in_componentValueOuter7688 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFEFL});
	public static final BitSet FOLLOW_bracketBlock_in_componentValueOuter7692 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFEFL});
	public static final BitSet FOLLOW_function_in_componentValueOuter7707 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFEFL});
	public static final BitSet FOLLOW_preservedTokenTopLevel_in_componentValueOuter7711 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFEFL});
	public static final BitSet FOLLOW_componentValueOuter_in_componentValueOuter7714 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFF7CFFFFFFFFFL,0x000000003FFFFFEFL});
	public static final BitSet FOLLOW_SEMI_in_syncTo_SEMI7803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_prio7848 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_expression7865 = new BitSet(new long[]{0xC0518B4481347CE2L,0xBBA6E7C2E2183837L,0x000000000699FCAFL});
	public static final BitSet FOLLOW_ws_in_expression7897 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_ws_in_expression7902 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_operator_in_expression7905 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_expression7907 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_term_in_expression7916 = new BitSet(new long[]{0xC0518B4481347CE2L,0xBBA6E7C2E2183837L,0x000000000699FCAFL});
	public static final BitSet FOLLOW_unaryOperator_in_term7941 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C0E2182837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_term7943 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C0E2082837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_function_in_term7972 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARIABLE_in_term7985 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_term7999 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_term8012 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_WS_in_term8014 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_term8017 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_WS_in_term8020 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_term8022 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_WS_in_term8026 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACKET_in_term8029 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMBER_in_term8042 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URANGE_in_term8054 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_in_term8066 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LENGTH_in_term8078 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EMS_in_term8090 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REM_in_term8102 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXS_in_term8114 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANGLE_in_term8126 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_in_term8138 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FREQ_in_term8150 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RESOLUTION_in_term8162 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_term8174 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_term8191 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TILDE_in_term8203 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L,0x0000000000000080L});
	public static final BitSet FOLLOW_set_in_term8205 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_JS_STRING_in_term8226 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_term8241 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URI_in_term8253 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hexColor_in_term8265 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_term8279 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_term8293 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_term8307 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_term8321 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_term_symbol_in_term8335 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol8362 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_function8378 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_function8382 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6EFC2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_function8384 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6EFC2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_fnAttributes_in_function8411 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function8442 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_functionName8494 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_functionName8496 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName8500 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_DOT_in_functionName8503 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName8505 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes8529 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_fnAttributes8532 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_COMMA_in_fnAttributes8536 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_SEMI_in_fnAttributes8542 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_fnAttributes8545 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes8548 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_fnAttributes8552 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_fnAttribute8589 = new BitSet(new long[]{0x0000000000280000L,0x0000000008100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_fnAttribute8591 = new BitSet(new long[]{0x0000000000080000L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_fnAttribute8594 = new BitSet(new long[]{0xC0718B4481247CE0L,0xBBA6E7C2E2183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_fnAttribute8600 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E2083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_fnAttributeValue_in_fnAttribute8603 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_fnAttribute8620 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fnAttribute8632 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName8655 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_DOT_in_fnAttributeName8658 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName8660 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_cp_variable_in_fnAttributeName8680 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue8703 = new BitSet(new long[]{0xC0518B4481247CE2L,0xBBA6E7C2E2183837L,0x000000000699FCAFL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue8735 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue8740 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SOLIDUS_in_fnAttributeValue8743 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue8745 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_term_in_fnAttributeValue8754 = new BitSet(new long[]{0xC0518B4481247CE2L,0xBBA6E7C2E2183837L,0x000000000699FCAFL});
	public static final BitSet FOLLOW_cp_math_expression_in_fnAttributeValue8775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_hexColor8789 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration8849 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8851 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration8854 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8856 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration8859 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration8881 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8883 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration8886 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8888 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration8891 = new BitSet(new long[]{0x0000000000200002L,0x0401000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8895 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_cp_variable_declaration8898 = new BitSet(new long[]{0x0000000000200002L,0x0401000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8904 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_cp_variable_declaration8907 = new BitSet(new long[]{0x0000000000200002L,0x0401000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_set_in_cp_variable8947 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable9139 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_variable9143 = new BitSet(new long[]{0x0000000100000000L});
	public static final BitSet FOLLOW_DOT_in_cp_variable9145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable9147 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list9177 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list9196 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_cp_expression_list9199 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_expression_list9201 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list9204 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_LBRACE_in_cp_expression9240 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9242 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression9245 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declarations_in_cp_expression9247 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_expression9250 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression9266 = new BitSet(new long[]{0xC071BB448D247CE2L,0xBBA6E7C2E3183A7FL,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9290 = new BitSet(new long[]{0x001030000C000000L,0x0000000000000048L});
	public static final BitSet FOLLOW_cp_expression_operator_in_cp_expression9293 = new BitSet(new long[]{0xC0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9295 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression9299 = new BitSet(new long[]{0xC071BB448D247CE2L,0xBBA6E7C2E3183A7FL,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9318 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression9321 = new BitSet(new long[]{0xC071BB448D247CE2L,0xBBA6E7C2E3183A7FL,0x000000000699FC8FL});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression9339 = new BitSet(new long[]{0x8051090001347CC0L,0xBBA6EF0022183803L,0x000000000681F08FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9341 = new BitSet(new long[]{0x8051090001147CC0L,0xBBA6EF0022083803L,0x000000000281F08FL});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression9344 = new BitSet(new long[]{0x8051090001147CC0L,0xBBA6EF0022083803L,0x000000000281F08FL});
	public static final BitSet FOLLOW_sass_map_pairs_in_cp_expression9346 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression9349 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_cp_expression_operator9370 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_and_in_cp_expression_operator9374 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_EQ_in_cp_expression_operator9379 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_NOT_EQ_in_cp_expression_operator9383 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_in_cp_expression_operator9387 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_OR_EQ_in_cp_expression_operator9391 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_in_cp_expression_operator9395 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_OR_EQ_in_cp_expression_operator9399 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cp_expression_atom9425 = new BitSet(new long[]{0xC0718B4481247CE0L,0xBBA6E7C2E2183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom9427 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E2083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_expression_atom9458 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression_atom9474 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6EFC2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom9476 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6EFC2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_expression_atom9480 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom9482 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression_atom9487 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions9519 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expressions9526 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E2083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions9528 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression9562 = new BitSet(new long[]{0x0000000000200002L,0x0000000200101000L,0x0000000004000060L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression9604 = new BitSet(new long[]{0x0000000000000000L,0x0000000200001000L,0x0000000000000060L});
	public static final BitSet FOLLOW_set_in_cp_math_expression9607 = new BitSet(new long[]{0xC0718B4481247CE0L,0xBBA6E7C2E2183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_math_expression9617 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E2083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression9620 = new BitSet(new long[]{0x0000000000200002L,0x0000000200101000L,0x0000000004000060L});
	public static final BitSet FOLLOW_term_in_cp_math_expression_atom9653 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom9661 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unaryOperator_in_cp_math_expression_atom9672 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom9674 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_cp_math_expression_atom9680 = new BitSet(new long[]{0xC0718B4481247CE0L,0xBBA6E7C2E2183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom9682 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E2083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expression_atom9685 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom9687 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_math_expression_atom9690 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_declaration9730 = new BitSet(new long[]{0x2010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_declaration9737 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration9739 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_declaration9744 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9747 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration9750 = new BitSet(new long[]{0x8050010003247C40L,0xBBA6EF0020182883L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9752 = new BitSet(new long[]{0x8050010003047C40L,0xBBA6EF0020082883L,0x000000000201F00FL});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration9755 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration9758 = new BitSet(new long[]{0x2010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9763 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_less_mixin_guarded_in_cp_mixin_declaration9766 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_cp_mixin_declaration9790 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9792 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration9794 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9797 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration9800 = new BitSet(new long[]{0x8050010003247C40L,0xBBA6EF0020182883L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9802 = new BitSet(new long[]{0x8050010003047C40L,0xBBA6EF0020082883L,0x000000000201F00FL});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration9805 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration9808 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9822 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_declaration9825 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call9861 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call9863 = new BitSet(new long[]{0x0000100040280002L,0x0000000200100200L,0x0000000004000400L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call9867 = new BitSet(new long[]{0x0000100040280002L,0x0000000200100200L,0x0000000004000400L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call9871 = new BitSet(new long[]{0x0000100040280002L,0x0000000200100200L,0x0000000004000400L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call9875 = new BitSet(new long[]{0x0000100040280002L,0x0000000200100200L,0x0000000004000400L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call9891 = new BitSet(new long[]{0x0000100000000000L,0x0000000200000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_combinator_in_cp_mixin_call9894 = new BitSet(new long[]{0x0000800100200040L,0x0000000000100010L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call9896 = new BitSet(new long[]{0x0000800100000040L,0x0000000000000010L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call9900 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call9902 = new BitSet(new long[]{0x0000100040280002L,0x0000000200100200L,0x0000000004000400L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call9906 = new BitSet(new long[]{0x0000100040280002L,0x0000000200100200L,0x0000000004000400L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call9910 = new BitSet(new long[]{0x0000100040280002L,0x0000000200100200L,0x0000000004000400L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call9914 = new BitSet(new long[]{0x0000100040280002L,0x0000000200100200L,0x0000000004000400L});
	public static final BitSet FOLLOW_pseudo_in_cp_mixin_call9924 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call9936 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call9939 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6EFC2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call9941 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6EFC2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call9944 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call9947 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_INCLUDE_in_cp_mixin_call9972 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call9974 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call9976 = new BitSet(new long[]{0x2000000000200002L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call9979 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call9982 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6EFC2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call9984 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6EFC2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call9987 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call9990 = new BitSet(new long[]{0x2000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call9995 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_call9998 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_cp_mixin_block10027 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E71360183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block10029 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71360083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_syncToFollow_in_cp_mixin_block10032 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71360083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declarations_in_cp_mixin_block10043 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_cp_mixin_block10058 = new BitSet(new long[]{0x0010000000200000L,0x0000401040100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block10060 = new BitSet(new long[]{0x0010000000000000L,0x0000401040000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_mixin_block10072 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_mixin_name10093 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10124 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_mixin_call_args10128 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args10136 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10139 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_CP_DOTS_in_cp_mixin_call_args10145 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args10147 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_cp_mixin_call_args10152 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_mixin_call_arg10184 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg10186 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_mixin_call_arg10189 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg10191 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg10194 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg10206 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg10214 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list10261 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000080L,0x0000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list10265 = new BitSet(new long[]{0x8050010001247C40L,0xBBA6E70020182803L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_cp_args_list10275 = new BitSet(new long[]{0x8050010001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list10278 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000080L,0x0000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list10285 = new BitSet(new long[]{0x0000000002200002L,0x0000000000100080L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list10293 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000080L});
	public static final BitSet FOLLOW_set_in_cp_args_list10301 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list10309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_cp_args_list10326 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list10334 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_arg10357 = new BitSet(new long[]{0x0000000000280002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_arg10359 = new BitSet(new long[]{0x0000000000080002L});
	public static final BitSet FOLLOW_COLON_in_cp_arg10364 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_cp_arg10366 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_cp_arg10369 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_cp_arg10371 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_arg10384 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_when_in_less_mixin_guarded10407 = new BitSet(new long[]{0x0000000000200000L,0x0000000001100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded10409 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded10412 = new BitSet(new long[]{0x0010000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded10415 = new BitSet(new long[]{0x0010000000100000L});
	public static final BitSet FOLLOW_COMMA_in_less_mixin_guarded10419 = new BitSet(new long[]{0x0000000000200000L,0x0000000001100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_key_and_in_less_mixin_guarded10423 = new BitSet(new long[]{0x0000000000200000L,0x0000000001100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded10426 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded10429 = new BitSet(new long[]{0x0010000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_NOT_in_less_condition10455 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_less_condition10457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_less_condition10466 = new BitSet(new long[]{0x8050010001247C40L,0xBBA6E70020182803L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_less_condition10468 = new BitSet(new long[]{0x8050010001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_cp_variable_in_less_condition10495 = new BitSet(new long[]{0x0000300000200000L,0x0000080008100048L,0x0000000004000000L});
	public static final BitSet FOLLOW_less_function_in_condition_in_less_condition10499 = new BitSet(new long[]{0x0000300000200000L,0x0000080008100048L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_less_condition10502 = new BitSet(new long[]{0x0000300000000000L,0x0000080008000048L});
	public static final BitSet FOLLOW_less_condition_operator_in_less_condition10506 = new BitSet(new long[]{0xC0718B4481247CE0L,0xBBA6E7C2E2183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_less_condition10508 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E2083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_math_expression_in_less_condition10511 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_condition10529 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_fn_name_in_less_function_in_condition10551 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition10553 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_less_function_in_condition10556 = new BitSet(new long[]{0x8050010001247C40L,0xBBA6E70020182803L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition10558 = new BitSet(new long[]{0x8050010001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_cp_variable_in_less_function_in_condition10561 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition10563 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_function_in_condition10566 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_fn_name10588 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp10651 = new BitSet(new long[]{0x0010000080000082L,0x0000000000001004L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp10654 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_SIGN_in_less_selector_interpolation10697 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_less_selector_interpolation10699 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation10701 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_less_selector_interpolation10704 = new BitSet(new long[]{0x0000000000200000L,0x0000001000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation10706 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_less_selector_interpolation10709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp10736 = new BitSet(new long[]{0x0011000080000002L,0x0000000000001004L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp10739 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var10786 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_interpolation_expression_var10788 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var10790 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_interpolation_expression_var10793 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var10795 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_interpolation_expression_var10798 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_sass_nested_properties10838 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties10840 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_nested_properties10843 = new BitSet(new long[]{0xE0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties10845 = new BitSet(new long[]{0xE0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_propertyValue_in_sass_nested_properties10849 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties10851 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_nested_properties10856 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties10858 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_syncToFollow_in_sass_nested_properties10861 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declarations_in_sass_nested_properties10863 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_nested_properties10866 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_in_sass_extend10887 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend10889 = new BitSet(new long[]{0x40118801C0080080L,0x0040000100001010L,0x0000000000000040L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend10891 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend10894 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_extend10897 = new BitSet(new long[]{0x40118801C0280080L,0x0040000100101010L,0x0000000004000040L});
	public static final BitSet FOLLOW_ws_in_sass_extend10899 = new BitSet(new long[]{0x40118801C0080080L,0x0040000100001010L,0x0000000000000040L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend10902 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend10907 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_SASS_OPTIONAL_in_sass_extend10909 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector10932 = new BitSet(new long[]{0x0011000000000002L,0x0000000000001000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector10934 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_sass_debug10956 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_debug10966 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_debug10968 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ERROR_in_sass_error10989 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_error10991 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_STRING_in_sass_error10993 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_if_in_sass_control11014 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_for_in_sass_control11018 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_each_in_sass_control11022 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_while_in_sass_control11026 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_IF_in_sass_if11047 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sass_if11049 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_if11052 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_if11054 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_if11057 = new BitSet(new long[]{0x0000000000200002L,0x000C000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_if11060 = new BitSet(new long[]{0x0000000000000000L,0x000C000000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_if11063 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else11086 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11088 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else11091 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else11105 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11107 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_else11112 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_SASS_ELSEIF_in_sass_else11119 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sass_else11122 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_else11125 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11127 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else11130 = new BitSet(new long[]{0x0000000000200002L,0x000C000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11133 = new BitSet(new long[]{0x0000000000000000L,0x000C000000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_else11136 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_sass_control_expression11159 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FOR_in_sass_for11180 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11182 = new BitSet(new long[]{0x8050010001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_cp_variable_in_sass_for11184 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11186 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for11190 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11194 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E2083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for11196 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11198 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for11202 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11206 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E2083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for11208 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11210 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_for11213 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EACH_in_sass_each11234 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_each11236 = new BitSet(new long[]{0x8050010001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_sass_each_variables_in_sass_each11238 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_each11240 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_each11244 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_each11248 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_list_in_sass_each11251 = new BitSet(new long[]{0xE0718B4481347CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sass_each11254 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each11257 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_sass_each11261 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sass_control_block_in_sass_each11267 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables11288 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables11300 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each_variables11303 = new BitSet(new long[]{0x8050010001247C40L,0xBBA6E70020182803L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_sass_each_variables11305 = new BitSet(new long[]{0x8050010001047C40L,0xBBA6E70020082803L,0x000000000201F00FL});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables11308 = new BitSet(new long[]{0x0000000000300002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_SASS_WHILE_in_sass_while11333 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_while11335 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_while11337 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_while11339 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_while11342 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_sass_control_block11363 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_sass_control_block11365 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declarations_in_sass_control_block11368 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_control_block11371 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FUNCTION_in_sass_function_declaration11413 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11415 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_function_name_in_sass_function_declaration11417 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11419 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_sass_function_declaration11422 = new BitSet(new long[]{0x8050010003247C40L,0xBBA6EF0020182883L,0x000000000601F00FL});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11424 = new BitSet(new long[]{0x8050010003047C40L,0xBBA6EF0020082883L,0x000000000201F00FL});
	public static final BitSet FOLLOW_cp_args_list_in_sass_function_declaration11427 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_function_declaration11430 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11432 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_function_declaration11435 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E71320183813L,0x000000000681F55FL});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11437 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E71320083813L,0x000000000281F55FL});
	public static final BitSet FOLLOW_declarations_in_sass_function_declaration11440 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_function_declaration11443 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_function_name11464 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_RETURN_in_sass_function_return11485 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_return11487 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_function_return11489 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_CONTENT_in_sass_content11510 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_import_types11529 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_when11552 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_and11571 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_or11589 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_only11607 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred1_Css3470 = new BitSet(new long[]{0x8051090001047C40L,0xBBA6E70021082A03L,0x000000000201F00FL});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred1_Css3473 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred2_Css3540 = new BitSet(new long[]{0x8051090001047C40L,0xBBA6E70021082A03L,0x000000000201F00FL});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred2_Css3543 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred3_Css3600 = new BitSet(new long[]{0x8051090001047C40L,0xBBA6E70021082A03L,0x000000000201F00FL});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred3_Css3603 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred4_Css31170 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_synpred4_Css31173 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred5_Css31271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred5_Css31278 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred5_Css31280 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_HASH_in_synpred5_Css31285 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred5_Css31288 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_synpred5_Css31291 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000003FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred5_Css31299 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000003FFFFFEFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred5_Css31309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred6_Css31327 = new BitSet(new long[]{0x0020000000200000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css31330 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred6_Css31333 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css31337 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_synpred6_Css31340 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred7_Css31363 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css31388 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31391 = new BitSet(new long[]{0x40119801C0080080L,0x0040000300001010L,0x0000000000000440L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css31393 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css31402 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31404 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_synpred8_Css31406 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31408 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css31411 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31413 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred8_Css31416 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31418 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css31421 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31423 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred8_Css31426 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css31431 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31434 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred8_Css31437 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred9_Css31449 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred10_Css31564 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred10_Css31567 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred11_Css31611 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_synpred11_Css31614 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred12_Css31641 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_synpred12_Css31644 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred13_Css31726 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_synpred14_Css31755 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred15_Css31901 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_synpred15_Css31904 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred16_Css31979 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred16_Css31986 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred16_Css31988 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_HASH_in_synpred16_Css31993 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred16_Css31996 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_synpred16_Css31999 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000003FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred16_Css32007 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFEFFFFFFFFFL,0x000000003FFFFFEFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred16_Css32019 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred17_Css32045 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000010L});
	public static final BitSet FOLLOW_ws_in_synpred17_Css32047 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SEMI_in_synpred17_Css32050 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred18_Css32069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_synpred19_Css32097 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred19_Css32099 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred19_Css32102 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred20_Css32119 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred21_Css32409 = new BitSet(new long[]{0x0010000000200000L,0x0000000001100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred21_Css32411 = new BitSet(new long[]{0x0010000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_supportsCondition_in_synpred21_Css32414 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred21_Css32416 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred21_Css32419 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsFeature_in_synpred22_Css32424 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONTAINER_SYM_in_synpred23_Css32508 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred23_Css32510 = new BitSet(new long[]{0x0010000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_containerCondition_in_synpred23_Css32512 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred23_Css32514 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred23_Css32517 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred24_Css32765 = new BitSet(new long[]{0x0010000000200000L,0x0000000001100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred24_Css32767 = new BitSet(new long[]{0x0010000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_containerCondition_in_synpred24_Css32770 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred24_Css32772 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred24_Css32775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeature_in_synpred25_Css32780 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_synpred26_Css32787 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css32789 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_synpred26_Css32792 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E70321183A13L,0x000000000681F54FL});
	public static final BitSet FOLLOW_ws_in_synpred26_Css32794 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E70321083A13L,0x000000000281F54FL});
	public static final BitSet FOLLOW_styleQuery_in_synpred26_Css32797 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css32799 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred26_Css32802 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred27_Css33093 = new BitSet(new long[]{0x0010000000200000L,0x0000000001100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred27_Css33095 = new BitSet(new long[]{0x0010000000000000L,0x0000000001000200L});
	public static final BitSet FOLLOW_styleCondition_in_synpred27_Css33098 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred27_Css33100 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred27_Css33103 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred28_Css33115 = new BitSet(new long[]{0xD0519901C16C7CC0L,0xBBF6E70320183813L,0x000000000681F54FL});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33117 = new BitSet(new long[]{0xD0519901C14C7CC0L,0xBBF6E70320083813L,0x000000000281F54FL});
	public static final BitSet FOLLOW_styleFeature_in_synpred28_Css33120 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33122 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred28_Css33125 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred29_Css33195 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004800000L});
	public static final BitSet FOLLOW_ws_in_synpred29_Css33197 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_sizeFeatureFixedValue_in_synpred29_Css33200 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred29_Css33202 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred29_Css33205 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred30_Css33217 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_synpred30_Css33219 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sizeFeatureRangeSingle_in_synpred30_Css33222 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css33224 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred30_Css33227 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred31_Css33239 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_synpred31_Css33241 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_sizeFeatureRangeBetweenLt_in_synpred31_Css33244 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred31_Css33246 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred31_Css33249 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css35066 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred32_Css35069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_synpred33_Css35160 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_synpred34_Css35460 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred35_Css35472 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_synpred36_Css35485 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred37_Css35499 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred37_Css35502 = new BitSet(new long[]{0x40119801C0080080L,0x0040000300001010L,0x0000000000000440L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred37_Css35504 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred37_Css35513 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred37_Css35515 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_synpred37_Css35517 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred37_Css35519 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred37_Css35522 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred37_Css35524 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred37_Css35527 = new BitSet(new long[]{0x0010000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred37_Css35529 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred37_Css35532 = new BitSet(new long[]{0x0000000000200000L,0x0000080000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred37_Css35534 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred37_Css35537 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred37_Css35542 = new BitSet(new long[]{0x2000000000200000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred37_Css35545 = new BitSet(new long[]{0x2000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred37_Css35548 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred38_Css35560 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_synpred39_Css35577 = new BitSet(new long[]{0x0000000000280000L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred39_Css35579 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred39_Css35582 = new BitSet(new long[]{0xDFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000003FFFFFFFL});
	public static final BitSet FOLLOW_set_in_synpred39_Css35594 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_synpred40_Css35611 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred41_Css35623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred42_Css35644 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css35942 = new BitSet(new long[]{0x4001800140080000L,0x0040000000000010L});
	public static final BitSet FOLLOW_esPred_in_synpred43_Css35945 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSelector_in_synpred44_Css35980 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred45_Css35987 = new BitSet(new long[]{0x4001800140080000L,0x0040000000000010L});
	public static final BitSet FOLLOW_esPred_in_synpred45_Css35990 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PIPE_in_synpred46_Css36101 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred47_Css37662 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred47_Css37664 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_synpred47_Css37667 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred48_Css37697 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred48_Css37699 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_synpred48_Css37702 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred49_Css37872 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_ws_in_synpred49_Css37877 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_operator_in_synpred49_Css37880 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_synpred49_Css37882 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_term_in_synpred49_Css37891 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred50_Css37964 = new BitSet(new long[]{0x0000000000200000L,0x0000000000100200L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred50_Css37966 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_synpred50_Css37969 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_synpred51_Css38576 = new BitSet(new long[]{0x0000000000280000L,0x0000000008100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred51_Css38578 = new BitSet(new long[]{0x0000000000080000L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_synpred51_Css38581 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_synpred52_Css38616 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred53_Css38710 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_ws_in_synpred53_Css38715 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SOLIDUS_in_synpred53_Css38718 = new BitSet(new long[]{0xC0518B4481247CE0L,0xBBA6E7C2E2183837L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_synpred53_Css38720 = new BitSet(new long[]{0xC0518B4481047CE0L,0xBBA6E7C2E2083837L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_term_in_synpred53_Css38729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred55_Css39185 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred55_Css39188 = new BitSet(new long[]{0xE0718B4481247CE0L,0xBBA6E7C2E3183A37L,0x000000000699FC8FL});
	public static final BitSet FOLLOW_ws_in_synpred55_Css39190 = new BitSet(new long[]{0xE0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_in_synpred55_Css39193 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred56_Css39260 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred57_Css39283 = new BitSet(new long[]{0x001030000C000000L,0x0000000000000048L});
	public static final BitSet FOLLOW_cp_expression_operator_in_synpred57_Css39286 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred58_Css39312 = new BitSet(new long[]{0xC0718B4481047CE0L,0xBBA6E7C2E3083A37L,0x000000000299FC8FL});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred58_Css39315 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_synpred59_Css39455 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred60_Css39588 = new BitSet(new long[]{0x0000000000000000L,0x0000000200001000L,0x0000000000000060L});
	public static final BitSet FOLLOW_set_in_synpred60_Css39591 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred61_Css39880 = new BitSet(new long[]{0x0000100000000000L,0x0000000200000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_combinator_in_synpred61_Css39883 = new BitSet(new long[]{0x0000000000200002L,0x0000000000100000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ws_in_synpred61_Css39885 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_synpred62_Css39921 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred63_Css39929 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_synpred63_Css39932 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_synpred64_Css310048 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred65_Css311293 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred65_Css311296 = new BitSet(new long[]{0x0000000000000002L});
}
